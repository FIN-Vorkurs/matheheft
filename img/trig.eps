%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 1.20 
%%For: 
%%Title: 
%%CreationDate: Mittwoch, 22. August 2007 23.49 Uhr CEST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 400.0 400.0 rf
0.0 0.0 0.0 RG
0 J
1 j
0.0 0.0 translate
0.0 0.0 translate
q
312 174 83 52 rc
q
q
315 177 75 16 rc
q
1.0 0.0 0.0 RG
317.0 177.0 translate
1 0 7 OPL
34 7
-317.0 -177.0 translate
Q
315.0 177.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
37 0 37 15 rc
41.0 12.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 2000 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 2000 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 408.203125 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 180.17578125 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 563.96484375 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 277.83203125 def
		/semicolon 277.83203125 def
		/less 563.96484375 def
		/equal 563.96484375 def
		/greater 563.96484375 def
		/question 443.84765625 def
		/at 920.8984375 def
		/A 722.16796875 def
		/B 666.9921875 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 556.15234375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 389.16015625 def
		/K 722.16796875 def
		/L 610.83984375 def
		/M 889.16015625 def
		/N 722.16796875 def
		/O 722.16796875 def
		/P 556.15234375 def
		/Q 722.16796875 def
		/R 666.9921875 def
		/S 556.15234375 def
		/T 610.83984375 def
		/U 722.16796875 def
		/V 722.16796875 def
		/W 943.84765625 def
		/X 722.16796875 def
		/Y 722.16796875 def
		/Z 610.83984375 def
		/bracketleft 333.0078125 def
		/backslash 277.83203125 def
		/bracketright 333.0078125 def
		/asciicircum 469.23828125 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 443.84765625 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 333.0078125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 500.0 def
		/l 277.83203125 def
		/m 777.83203125 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 333.0078125 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 500.0 def
		/w 722.16796875 def
		/x 500.0 def
		/y 500.0 def
		/z 443.84765625 def
		/braceleft 479.98046875 def
		/bar 200.1953125 def
		/braceright 479.98046875 def
		/asciitilde 541.015625 def
		/exclamdown 333.0078125 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 180.17578125 def
		/quotedblleft 443.84765625 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 556.15234375 def
		/fl 556.15234375 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 453.125 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 443.84765625 def
		/quotedblright 443.84765625 def
		/guillemotright 500.0 def
		/ellipsis 1000.0 def
		/perthousand 1000.0 def
		/questiondown 443.84765625 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 610.83984375 def
		/Oslash 722.16796875 def
		/OE 889.16015625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 722.16796875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
175 175 moveto
157 175 lineto
114 570 lineto
112 588 111 600 111 609  curveto
111 629 116 646 127 658  curveto
138 671 151 677 167 677  curveto
182 677 195 671 205 658  curveto
216 646 221 627 221 603  curveto
221 595 221 584 219 570  curveto
175 175 lineto
closepath
166 94 moveto
180 94 193 88 204 78  curveto
214 67 220 55 220 40  curveto
220 25 214 12 204 2  curveto
193 -8 180 -13 166 -13  curveto
151 -13 138 -8 127 2  curveto
117 12 111 25 111 40  curveto
111 55 117 67 127 78  curveto
138 88 151 94 166 94  curveto
closepath
fill
		} def

	/quotedbl
		{
281 392 moveto
254 534 lineto
244 593 lineto
243 601 243 610 243 618  curveto
243 638 247 653 256 663  curveto
265 672 278 677 292 677  curveto
306 677 318 672 327 663  curveto
337 653 341 640 341 625  curveto
341 597 338 567 332 535  curveto
304 392 lineto
281 392 lineto
closepath
102 392 moveto
75 536 lineto
68 576 64 603 64 617  curveto
64 638 69 653 77 663  curveto
86 672 98 677 112 677  curveto
127 677 139 672 148 662  curveto
157 653 162 640 162 624  curveto
162 611 158 582 149 536  curveto
123 392 lineto
102 392 lineto
closepath
fill
		} def

	/numbersign
		{
56 -13 moveto
101 208 lineto
18 208 lineto
18 248 lineto
109 248 lineto
143 416 lineto
18 416 lineto
18 455 lineto
152 455 lineto
196 677 lineto
237 677 lineto
192 455 lineto
357 455 lineto
404 677 lineto
445 677 lineto
398 455 lineto
481 455 lineto
481 416 lineto
391 416 lineto
357 248 lineto
481 248 lineto
481 208 lineto
349 208 lineto
303 -13 lineto
264 -13 lineto
308 208 lineto
143 208 lineto
96 -13 lineto
56 -13 lineto
closepath
150 248 moveto
315 248 lineto
351 416 lineto
184 416 lineto
150 248 lineto
closepath
fill
		} def

	/dollar
		{
52 163 moveto
74 163 lineto
77 118 91 84 116 60  curveto
140 36 177 22 225 18  curveto
225 303 lineto
152 348 103 388 79 423  curveto
61 448 53 478 53 513  curveto
53 553 68 588 97 618  curveto
127 648 170 666 225 672  curveto
225 717 lineto
256 717 lineto
256 672 lineto
283 671 305 668 324 663  curveto
333 661 364 650 417 629  curveto
417 483 lineto
398 483 lineto
394 535 381 573 358 597  curveto
336 621 302 635 256 640  curveto
256 392 lineto
338 334 391 292 414 265  curveto
438 238 449 204 449 164  curveto
449 119 432 79 398 45  curveto
364 11 317 -8 256 -13  curveto
256 -76 lineto
225 -76 lineto
225 -13 lineto
194 -12 166 -8 140 -3  curveto
113 2 84 11 52 24  curveto
52 163 lineto
closepath
225 412 moveto
225 639 lineto
193 635 168 625 153 608  curveto
137 591 129 570 129 545  curveto
129 521 136 499 150 478  curveto
165 458 190 436 225 412  curveto
closepath
256 18 moveto
281 22 299 28 312 36  curveto
331 47 345 62 356 80  curveto
366 99 372 118 372 139  curveto
372 161 365 181 352 200  curveto
339 219 307 247 256 282  curveto
256 18 lineto
closepath
fill
		} def

	/percent
		{
679 677 moveto
197 -27 lineto
153 -27 lineto
636 677 lineto
679 677 lineto
closepath
177 677 moveto
221 677 255 659 280 622  curveto
304 586 316 544 316 497  curveto
316 440 302 396 275 365  curveto
248 334 215 319 176 319  curveto
151 319 127 326 105 340  curveto
84 354 67 375 54 403  curveto
41 431 35 462 35 497  curveto
35 531 41 562 54 591  curveto
67 620 85 641 108 656  curveto
130 670 153 677 177 677  curveto
closepath
176 649 moveto
159 649 144 640 132 620  curveto
119 601 112 560 112 497  curveto
112 452 116 417 123 394  curveto
129 376 137 362 149 352  curveto
156 346 164 343 174 343  curveto
190 343 203 352 214 369  curveto
231 394 239 436 239 494  curveto
239 556 231 599 215 625  curveto
204 641 191 649 176 649  curveto
closepath
657 328 moveto
680 328 703 321 726 306  curveto
749 291 767 270 779 242  curveto
792 214 798 183 798 150  curveto
798 92 784 48 756 18  curveto
729 -12 696 -27 658 -27  curveto
634 -27 611 -20 589 -5  curveto
567 9 549 30 536 57  curveto
524 84 517 115 517 150  curveto
517 184 524 215 536 244  curveto
549 272 567 293 589 307  curveto
611 321 634 328 657 328  curveto
closepath
657 302 moveto
642 302 628 293 617 276  curveto
602 253 595 210 595 146  curveto
595 88 602 48 617 24  curveto
628 8 642 0 657 0  curveto
672 0 686 8 697 26  curveto
713 50 721 91 721 149  curveto
721 210 713 253 697 277  curveto
687 294 673 302 657 302  curveto
closepath
fill
		} def

	/ampersand
		{
510 426 moveto
715 426 lineto
715 408 lineto
687 405 666 399 652 389  curveto
639 379 618 348 589 296  curveto
560 244 528 196 492 151  curveto
521 117 547 93 570 80  curveto
593 66 616 60 639 60  curveto
661 60 680 66 696 78  curveto
711 90 722 108 729 132  curveto
747 119 lineto
735 73 716 39 689 17  curveto
662 -4 631 -15 596 -15  curveto
569 -15 542 -7 514 6  curveto
487 21 457 45 424 80  curveto
384 44 348 19 315 5  curveto
283 -8 248 -15 211 -15  curveto
158 -15 115 0 83 27  curveto
52 56 36 90 36 130  curveto
36 169 50 209 79 248  curveto
107 287 160 328 238 370  curveto
223 403 213 431 207 453  curveto
201 475 199 495 199 515  curveto
199 571 219 613 260 643  curveto
292 665 328 677 369 677  curveto
408 677 439 665 464 642  curveto
488 619 500 591 500 558  curveto
500 523 489 493 465 467  curveto
441 441 400 412 340 381  curveto
381 308 424 240 469 179  curveto
527 248 555 305 555 352  curveto
555 367 550 380 541 392  curveto
533 401 523 406 510 408  curveto
510 426 lineto
closepath
323 413 moveto
364 432 394 454 414 479  curveto
434 503 444 530 444 560  curveto
444 583 437 603 422 618  curveto
408 633 390 641 368 641  curveto
340 641 318 631 304 612  curveto
289 592 282 573 282 554  curveto
282 538 285 520 291 500  curveto
296 481 307 451 323 413  curveto
closepath
399 108 moveto
356 167 326 209 310 236  curveto
293 263 275 297 255 337  curveto
216 314 186 290 167 263  curveto
147 236 137 206 137 175  curveto
137 140 148 109 171 83  curveto
193 57 224 43 262 43  curveto
282 43 302 48 321 56  curveto
340 64 366 81 399 108  curveto
closepath
fill
		} def

	/quoteright
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/parenleft
		{
310 -195 moveto
310 -213 lineto
261 -189 220 -160 187 -126  curveto
140 -79 104 -24 79 40  curveto
53 104 41 170 41 239  curveto
41 340 65 432 115 515  curveto
165 599 230 658 310 694  curveto
310 673 lineto
270 651 237 621 211 583  curveto
186 544 166 495 154 437  curveto
141 378 135 316 135 252  curveto
135 182 140 119 151 62  curveto
159 17 170 -18 182 -45  curveto
194 -72 210 -98 230 -124  curveto
251 -149 277 -173 310 -195  curveto
closepath
fill
		} def

	/parenright
		{
22 673 moveto
22 694 lineto
71 669 113 641 146 607  curveto
192 560 228 504 253 440  curveto
279 376 292 310 292 240  curveto
292 139 267 47 217 -35  curveto
167 -118 102 -178 22 -213  curveto
22 -195 lineto
62 -173 95 -142 121 -104  curveto
147 -66 166 -17 178 41  curveto
191 100 197 161 197 226  curveto
197 295 192 358 181 416  curveto
173 460 163 496 151 523  curveto
138 550 122 576 102 602  curveto
82 627 55 651 22 673  curveto
closepath
fill
		} def

	/asterisk
		{
241 509 moveto
239 532 235 554 227 576  curveto
216 608 210 630 210 642  curveto
210 659 214 672 222 681  curveto
230 689 240 694 252 694  curveto
262 694 271 689 278 681  curveto
286 672 290 659 290 643  curveto
290 628 285 608 277 582  curveto
268 556 263 531 261 509  curveto
279 521 295 534 309 551  curveto
331 576 348 592 358 599  curveto
369 605 380 608 391 608  curveto
402 608 411 604 418 597  curveto
426 590 429 581 429 571  curveto
429 559 424 548 413 539  curveto
402 529 375 520 333 510  curveto
307 505 287 498 270 491  curveto
287 482 308 476 332 471  curveto
371 464 397 455 409 444  curveto
422 434 428 422 428 409  curveto
428 399 424 391 417 384  curveto
409 377 401 373 391 373  curveto
381 373 371 376 359 383  curveto
347 390 331 405 311 429  curveto
297 445 281 460 261 474  curveto
261 456 265 435 272 414  curveto
284 375 290 349 290 335  curveto
290 322 286 311 278 302  curveto
270 293 262 289 253 289  curveto
241 289 230 293 220 303  curveto
213 310 210 320 210 335  curveto
210 351 214 370 221 392  curveto
229 414 233 429 235 437  curveto
237 446 239 458 241 474  curveto
222 461 205 447 190 432  curveto
167 405 149 388 137 381  curveto
128 376 119 373 110 373  curveto
99 373 90 377 82 384  curveto
74 392 70 400 70 409  curveto
70 417 74 426 80 435  curveto
87 444 97 451 110 457  curveto
119 461 139 466 170 473  curveto
191 477 210 483 229 491  curveto
212 500 191 507 167 512  curveto
126 520 102 528 92 535  curveto
78 545 70 558 70 574  curveto
70 583 74 591 81 598  curveto
89 605 97 609 107 609  curveto
118 609 129 605 141 599  curveto
153 592 168 578 186 557  curveto
204 537 222 521 241 509  curveto
closepath
fill
		} def

	/plus
		{
261 68 moveto
261 312 lineto
18 312 lineto
18 352 lineto
261 352 lineto
261 595 lineto
300 595 lineto
300 352 lineto
544 352 lineto
544 312 lineto
300 312 lineto
300 68 lineto
261 68 lineto
closepath
fill
		} def

	/comma
		{
53 -166 moveto
53 -145 lineto
87 -133 113 -116 131 -93  curveto
149 -70 159 -45 159 -19  curveto
159 -13 157 -8 154 -3  curveto
152 0 150 0 147 0  curveto
144 0 136 -2 124 -9  curveto
118 -12 112 -13 105 -13  curveto
90 -13 77 -8 67 0  curveto
58 9 53 22 53 39  curveto
53 55 59 69 72 80  curveto
84 91 99 97 116 97  curveto
138 97 157 88 174 69  curveto
190 50 199 26 199 -4  curveto
199 -38 187 -69 164 -98  curveto
141 -127 104 -149 53 -166  curveto
closepath
fill
		} def

	/hyphen
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/period
		{
125 94 moveto
140 94 153 89 163 78  curveto
173 68 179 55 179 40  curveto
179 25 173 12 163 2  curveto
152 -8 139 -13 125 -13  curveto
110 -13 97 -8 86 2  curveto
76 12 70 25 70 40  curveto
70 55 76 68 86 79  curveto
97 89 110 94 125 94  curveto
closepath
fill
		} def

	/slash
		{
280 694 moveto
40 -13 lineto
1 -13 lineto
241 694 lineto
280 694 lineto
closepath
fill
		} def

	/zero
		{
36 327 moveto
36 402 47 467 70 522  curveto
93 576 123 617 161 644  curveto
190 665 220 675 251 675  curveto
302 675 348 649 388 598  curveto
439 534 464 447 464 337  curveto
464 260 453 195 431 141  curveto
409 87 380 48 346 24  curveto
312 0 278 -11 247 -11  curveto
183 -11 131 25 89 100  curveto
53 162 36 238 36 327  curveto
closepath
131 314 moveto
131 223 143 149 165 91  curveto
184 43 211 19 248 19  curveto
266 19 284 26 303 42  curveto
322 58 336 84 346 122  curveto
361 178 368 257 368 358  curveto
368 434 360 497 345 547  curveto
333 585 318 611 299 627  curveto
286 638 270 643 251 643  curveto
229 643 209 633 192 613  curveto
168 586 153 544 144 486  curveto
136 428 131 371 131 314  curveto
closepath
fill
		} def

	/one
		{
117 597 moveto
278 675 lineto
294 675 lineto
294 116 lineto
294 79 295 56 299 47  curveto
302 38 308 31 318 26  curveto
328 21 347 18 377 18  curveto
377 0 lineto
128 0 lineto
128 18 lineto
160 18 180 21 189 26  curveto
198 30 204 37 208 45  curveto
212 53 213 76 213 116  curveto
213 474 lineto
213 522 212 553 208 566  curveto
206 577 202 584 196 589  curveto
190 594 183 597 174 597  curveto
162 597 145 592 124 582  curveto
117 597 lineto
closepath
fill
		} def

	/two
		{
458 127 moveto
412 0 lineto
21 0 lineto
21 18 lineto
136 122 217 208 264 274  curveto
311 341 334 402 334 457  curveto
334 499 321 533 295 560  curveto
270 587 239 601 203 601  curveto
171 601 141 591 115 572  curveto
90 553 70 525 58 488  curveto
40 488 lineto
48 548 69 595 103 627  curveto
136 659 179 675 229 675  curveto
283 675 328 658 364 624  curveto
399 589 417 548 417 501  curveto
417 468 410 434 394 401  curveto
370 348 331 292 277 233  curveto
196 145 145 91 125 73  curveto
298 73 lineto
333 73 358 75 372 77  curveto
386 80 399 85 410 93  curveto
422 101 431 112 440 127  curveto
458 127 lineto
closepath
fill
		} def

	/three
		{
50 536 moveto
69 580 93 615 122 639  curveto
151 663 187 675 229 675  curveto
283 675 323 658 352 624  curveto
373 598 384 570 384 541  curveto
384 493 354 443 293 392  curveto
334 376 364 353 385 323  curveto
406 294 417 259 417 219  curveto
417 161 398 112 362 70  curveto
314 15 245 -11 155 -11  curveto
111 -11 80 -6 64 4  curveto
48 15 40 27 40 40  curveto
40 49 44 58 52 65  curveto
59 72 68 76 79 76  curveto
87 76 96 74 104 72  curveto
110 70 122 64 142 54  curveto
161 44 175 38 182 36  curveto
194 32 207 30 221 30  curveto
254 30 283 43 307 69  curveto
332 95 344 125 344 160  curveto
344 186 339 211 327 235  curveto
319 254 309 267 299 277  curveto
285 290 266 302 242 312  curveto
217 323 192 328 167 328  curveto
151 328 lineto
151 343 lineto
177 346 203 355 229 371  curveto
255 386 273 404 285 426  curveto
297 447 303 471 303 497  curveto
303 530 292 557 271 578  curveto
250 599 224 609 193 609  curveto
142 609 100 582 66 528  curveto
50 536 lineto
closepath
fill
		} def

	/four
		{
465 244 moveto
465 174 lineto
376 174 lineto
376 0 lineto
295 0 lineto
295 174 lineto
15 174 lineto
15 237 lineto
322 675 lineto
376 675 lineto
376 244 lineto
465 244 lineto
closepath
295 244 moveto
295 572 lineto
63 244 lineto
295 244 lineto
closepath
fill
		} def

	/five
		{
434 662 moveto
396 579 lineto
196 579 lineto
153 490 lineto
239 477 307 445 358 394  curveto
401 349 423 297 423 237  curveto
423 202 416 170 402 141  curveto
387 111 370 86 348 65  curveto
327 44 303 27 276 15  curveto
239 -2 201 -11 161 -11  curveto
121 -11 93 -4 74 8  curveto
56 22 47 36 47 53  curveto
47 62 51 70 59 77  curveto
66 84 76 87 87 87  curveto
95 87 103 86 109 83  curveto
115 81 126 74 142 63  curveto
166 47 191 38 216 38  curveto
254 38 287 52 316 81  curveto
345 110 359 145 359 187  curveto
359 227 347 264 321 299  curveto
295 333 260 360 214 379  curveto
179 394 131 402 69 404  curveto
196 662 lineto
434 662 lineto
closepath
fill
		} def

	/six
		{
448 675 moveto
448 657 lineto
405 653 370 644 343 632  curveto
315 619 288 599 262 573  curveto
235 546 213 517 196 485  curveto
179 452 164 414 152 369  curveto
199 401 246 417 293 417  curveto
339 417 378 399 411 363  curveto
444 326 461 279 461 222  curveto
461 167 444 116 411 71  curveto
370 15 317 -11 250 -11  curveto
205 -11 167 3 135 33  curveto
73 91 42 166 42 259  curveto
42 319 54 375 78 428  curveto
102 482 136 529 180 570  curveto
224 612 266 639 307 654  curveto
347 668 385 675 419 675  curveto
448 675 lineto
closepath
144 333 moveto
138 290 135 254 135 227  curveto
135 196 141 162 153 125  curveto
164 89 181 60 204 38  curveto
221 23 241 15 265 15  curveto
293 15 318 28 341 55  curveto
363 82 374 120 374 169  curveto
374 225 363 273 341 314  curveto
319 355 287 375 247 375  curveto
234 375 221 372 207 367  curveto
193 362 172 351 144 333  curveto
closepath
fill
		} def

	/seven
		{
100 662 moveto
455 662 lineto
455 643 lineto
234 -13 lineto
180 -13 lineto
377 582 lineto
195 582 lineto
159 582 132 578 117 569  curveto
89 554 67 531 51 500  curveto
37 505 lineto
100 662 lineto
closepath
fill
		} def

	/eight
		{
191 333 moveto
139 376 105 410 90 437  curveto
75 463 67 490 67 518  curveto
67 561 84 598 117 629  curveto
150 660 194 675 250 675  curveto
303 675 346 661 378 632  curveto
411 603 427 570 427 533  curveto
427 508 418 483 401 457  curveto
383 431 347 401 291 366  curveto
348 322 386 287 405 262  curveto
430 229 442 194 442 157  curveto
442 110 424 70 389 37  curveto
353 4 307 -11 249 -11  curveto
186 -11 137 7 102 47  curveto
74 78 60 113 60 150  curveto
60 180 70 209 90 238  curveto
109 266 143 298 191 333  curveto
closepath
268 385 moveto
307 420 332 448 342 469  curveto
353 489 358 512 358 538  curveto
358 572 348 599 329 618  curveto
310 637 284 647 250 647  curveto
217 647 190 637 169 618  curveto
149 599 138 576 138 551  curveto
138 534 142 517 151 500  curveto
160 483 172 467 188 452  curveto
268 385 lineto
closepath
214 314 moveto
187 292 167 267 154 240  curveto
141 213 135 184 135 153  curveto
135 111 146 77 169 52  curveto
192 27 221 14 257 14  curveto
292 14 320 24 341 44  curveto
362 64 373 88 373 116  curveto
373 140 367 161 354 179  curveto
331 214 285 259 214 314  curveto
closepath
fill
		} def

	/nine
		{
52 -13 moveto
52 4 lineto
95 5 134 14 170 33  curveto
207 52 242 86 276 133  curveto
310 181 334 233 347 290  curveto
296 257 250 241 208 241  curveto
162 241 122 259 89 295  curveto
56 331 39 378 39 438  curveto
39 496 56 548 89 593  curveto
129 648 181 675 246 675  curveto
300 675 347 653 385 608  curveto
433 552 457 484 457 402  curveto
457 328 438 260 402 196  curveto
366 132 316 80 251 38  curveto
199 3 142 -13 80 -13  curveto
52 -13 lineto
closepath
355 326 moveto
361 368 364 402 364 428  curveto
364 459 358 493 348 530  curveto
337 567 322 595 302 614  curveto
282 634 260 644 235 644  curveto
206 644 180 631 159 604  curveto
137 578 126 540 126 488  curveto
126 420 140 366 169 327  curveto
191 299 217 285 248 285  curveto
263 285 280 289 301 296  curveto
321 303 339 313 355 326  curveto
closepath
fill
		} def

	/colon
		{
141 460 moveto
156 460 168 455 179 445  curveto
190 434 195 421 195 406  curveto
195 391 190 378 179 368  curveto
168 357 156 352 141 352  curveto
126 352 113 357 102 368  curveto
92 378 86 391 86 406  curveto
86 421 92 434 102 445  curveto
113 455 126 460 141 460  curveto
closepath
140 95 moveto
155 95 168 89 178 79  curveto
189 68 194 55 194 40  curveto
194 25 189 12 178 2  curveto
167 -8 155 -13 140 -13  curveto
125 -13 112 -8 101 2  curveto
91 12 85 25 85 40  curveto
85 55 91 68 101 79  curveto
112 89 125 95 140 95  curveto
closepath
fill
		} def

	/semicolon
		{
137 461 moveto
152 461 165 456 176 445  curveto
186 435 191 422 191 407  curveto
191 392 186 379 176 369  curveto
165 358 152 353 137 353  curveto
122 353 109 358 99 369  curveto
88 379 83 392 83 407  curveto
83 422 88 435 99 445  curveto
109 456 122 461 137 461  curveto
closepath
69 -166 moveto
69 -145 lineto
102 -133 128 -116 147 -93  curveto
165 -70 174 -45 174 -19  curveto
174 -13 173 -8 170 -3  curveto
168 0 165 0 163 0  curveto
159 0 152 -2 140 -9  curveto
134 -12 128 -13 121 -13  curveto
105 -13 92 -8 83 0  curveto
74 9 69 22 69 39  curveto
69 55 75 69 87 80  curveto
99 91 114 97 132 97  curveto
153 97 172 88 189 69  curveto
206 50 214 26 214 -4  curveto
214 -38 203 -69 179 -98  curveto
156 -127 119 -149 69 -166  curveto
closepath
fill
		} def

	/less
		{
18 344 moveto
543 572 lineto
543 529 lineto
91 333 lineto
543 135 lineto
543 91 lineto
18 320 lineto
18 344 lineto
closepath
fill
		} def

	/equal
		{
18 431 moveto
544 431 lineto
544 391 lineto
18 391 lineto
18 431 lineto
closepath
18 271 moveto
544 271 lineto
544 231 lineto
18 231 lineto
18 271 lineto
closepath
fill
		} def

	/greater
		{
543 318 moveto
18 91 lineto
18 133 lineto
470 329 lineto
18 527 lineto
18 572 lineto
543 342 lineto
543 318 lineto
closepath
fill
		} def

	/question
		{
221 156 moveto
201 156 lineto
203 197 209 231 217 258  curveto
225 284 241 322 266 370  curveto
286 406 298 435 304 454  curveto
310 474 313 494 313 514  curveto
313 555 302 588 280 613  curveto
258 637 231 649 199 649  curveto
171 649 149 643 132 629  curveto
116 616 108 602 108 586  curveto
108 574 113 559 123 541  curveto
132 524 137 511 137 501  curveto
137 490 133 480 126 472  curveto
118 464 109 460 99 460  curveto
85 460 72 467 61 480  curveto
50 494 44 513 44 537  curveto
44 573 60 606 92 634  curveto
123 663 166 677 220 677  curveto
287 677 337 657 368 618  curveto
392 590 403 558 403 523  curveto
403 499 398 475 387 450  curveto
377 425 357 395 327 361  curveto
280 308 251 270 240 248  curveto
230 225 223 195 221 156  curveto
closepath
214 95 moveto
230 95 243 90 253 79  curveto
264 69 269 56 269 41  curveto
269 26 264 13 253 2  curveto
242 -7 229 -13 214 -13  curveto
199 -13 187 -7 176 2  curveto
165 13 160 26 160 41  curveto
160 56 165 69 176 79  curveto
187 90 199 95 214 95  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
457 221 moveto
201 221 lineto
156 117 lineto
145 91 139 72 139 59  curveto
139 49 144 40 154 32  curveto
163 25 184 20 216 18  curveto
216 0 lineto
7 0 lineto
7 18 lineto
35 22 53 29 61 37  curveto
78 52 96 84 116 132  curveto
349 677 lineto
366 677 lineto
597 126 lineto
615 82 632 53 647 40  curveto
662 27 683 19 710 18  curveto
710 0 lineto
449 0 lineto
449 18 lineto
476 19 493 23 503 31  curveto
512 38 517 47 517 58  curveto
517 72 510 95 497 126  curveto
457 221 lineto
closepath
443 257 moveto
331 525 lineto
216 257 lineto
443 257 lineto
closepath
fill
		} def

	/B
		{
461 337 moveto
507 328 542 312 564 291  curveto
596 261 612 224 612 181  curveto
612 148 601 116 581 86  curveto
560 56 531 34 495 20  curveto
459 6 403 0 329 0  curveto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 26 101 44  curveto
108 55 112 80 112 117  curveto
112 544 lineto
112 585 107 611 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
302 662 lineto
356 662 398 658 431 650  curveto
479 638 517 617 542 588  curveto
568 558 581 524 581 485  curveto
581 452 571 422 551 396  curveto
531 370 501 350 461 337  curveto
closepath
206 364 moveto
218 361 231 360 247 359  curveto
262 357 279 357 298 357  curveto
345 357 381 362 405 372  curveto
429 383 447 398 460 419  curveto
473 441 479 464 479 489  curveto
479 527 463 561 432 588  curveto
400 615 354 629 293 629  curveto
261 629 232 625 206 618  curveto
206 364 lineto
closepath
206 47 moveto
243 39 281 34 317 34  curveto
376 34 421 47 452 74  curveto
483 101 499 133 499 172  curveto
499 198 492 223 478 247  curveto
464 270 441 289 409 303  curveto
378 316 339 323 292 323  curveto
272 323 255 323 240 322  curveto
226 322 214 320 206 319  curveto
206 47 lineto
closepath
fill
		} def

	/C
		{
602 677 moveto
617 452 lineto
602 452 lineto
581 519 553 568 515 597  curveto
478 627 433 642 380 642  curveto
336 642 297 630 261 608  curveto
226 586 198 550 177 501  curveto
157 453 147 392 147 319  curveto
147 259 157 208 176 164  curveto
195 120 224 86 262 62  curveto
301 39 345 27 395 27  curveto
437 27 475 37 508 55  curveto
541 73 577 110 617 165  curveto
632 155 lineto
599 96 560 53 516 25  curveto
471 -1 419 -15 358 -15  curveto
248 -15 163 25 103 106  curveto
58 167 36 238 36 320  curveto
36 386 50 447 80 502  curveto
110 558 150 601 202 631  curveto
254 662 311 677 373 677  curveto
420 677 468 665 514 642  curveto
528 634 538 631 543 631  curveto
552 631 560 634 566 640  curveto
575 649 581 661 584 677  curveto
602 677 lineto
closepath
fill
		} def

	/D
		{
17 0 moveto
17 18 lineto
42 18 lineto
69 18 89 27 101 44  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
286 662 lineto
385 662 460 650 512 628  curveto
564 605 605 568 636 516  curveto
668 463 684 403 684 334  curveto
684 242 656 165 600 103  curveto
537 34 441 0 312 0  curveto
17 0 lineto
closepath
206 47 moveto
247 38 282 34 310 34  curveto
385 34 448 60 498 113  curveto
547 166 572 238 572 329  curveto
572 421 547 493 498 545  curveto
448 598 384 625 306 625  curveto
276 625 243 620 206 610  curveto
206 47 lineto
closepath
fill
		} def

	/E
		{
208 625 moveto
208 364 lineto
354 364 lineto
392 364 417 369 430 381  curveto
447 396 456 422 458 460  curveto
476 460 lineto
476 229 lineto
458 229 lineto
453 262 449 282 444 292  curveto
438 303 429 312 416 318  curveto
402 325 382 328 354 328  curveto
208 328 lineto
208 110 lineto
208 81 210 63 212 56  curveto
215 50 220 45 226 41  curveto
233 38 245 36 263 36  curveto
375 36 lineto
413 36 440 38 457 43  curveto
474 49 490 59 506 74  curveto
526 94 547 125 568 166  curveto
587 166 lineto
530 0 lineto
20 0 lineto
20 18 lineto
43 18 lineto
59 18 74 21 88 29  curveto
98 34 105 42 109 52  curveto
113 63 115 84 115 116  curveto
115 546 lineto
115 588 111 614 102 624  curveto
90 637 71 644 43 644  curveto
20 644 lineto
20 662 lineto
530 662 lineto
538 517 lineto
519 517 lineto
512 551 504 575 496 588  curveto
488 601 475 611 459 618  curveto
446 623 423 625 390 625  curveto
208 625 lineto
closepath
fill
		} def

	/F
		{
204 625 moveto
204 365 lineto
325 365 lineto
352 365 373 371 385 384  curveto
398 396 407 420 411 456  curveto
429 456 lineto
429 232 lineto
411 232 lineto
411 258 407 277 401 289  curveto
395 301 386 310 375 316  curveto
364 322 347 325 325 325  curveto
204 325 lineto
204 117 lineto
204 83 206 61 210 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
39 18 lineto
66 18 86 26 99 42  curveto
106 52 110 77 110 117  curveto
110 544 lineto
110 578 108 600 104 611  curveto
101 619 94 626 84 632  curveto
70 640 55 644 39 644  curveto
16 644 lineto
16 662 lineto
508 662 lineto
515 516 lineto
498 516 lineto
489 547 479 570 468 584  curveto
457 599 443 609 427 616  curveto
410 622 385 625 350 625  curveto
204 625 lineto
closepath
fill
		} def

	/G
		{
613 677 moveto
630 468 lineto
613 468 lineto
596 520 574 559 546 585  curveto
507 624 456 643 395 643  curveto
310 643 246 609 202 542  curveto
165 486 147 419 147 341  curveto
147 278 159 221 184 168  curveto
208 116 240 78 280 54  curveto
319 30 360 18 401 18  curveto
426 18 449 21 472 27  curveto
495 33 517 42 538 54  curveto
538 246 lineto
538 279 536 301 531 311  curveto
525 321 518 329 507 334  curveto
496 340 478 342 451 342  curveto
451 361 lineto
708 361 lineto
708 342 lineto
695 342 lineto
670 342 653 334 643 317  curveto
637 305 633 281 633 246  curveto
633 43 lineto
596 23 559 8 522 0  curveto
486 -10 445 -15 401 -15  curveto
273 -15 176 25 109 107  curveto
60 169 35 240 35 320  curveto
35 379 49 434 77 488  curveto
110 551 155 600 213 634  curveto
262 663 319 677 385 677  curveto
409 677 431 675 451 671  curveto
471 667 499 658 535 645  curveto
553 638 565 635 571 635  curveto
577 635 583 638 587 643  curveto
592 649 594 660 595 677  curveto
613 677 lineto
closepath
fill
		} def

	/H
		{
205 354 moveto
513 354 lineto
513 544 lineto
513 578 511 600 506 611  curveto
503 619 496 626 486 632  curveto
472 640 457 644 441 644  curveto
418 644 lineto
418 662 lineto
701 662 lineto
701 644 lineto
678 644 lineto
662 644 647 640 633 632  curveto
623 627 616 619 612 609  curveto
608 598 606 576 606 544  curveto
606 117 lineto
606 83 609 61 613 50  curveto
616 42 623 35 633 29  curveto
647 21 662 18 678 18  curveto
701 18 lineto
701 0 lineto
418 0 lineto
418 18 lineto
441 18 lineto
468 18 488 26 500 42  curveto
509 52 513 77 513 117  curveto
513 318 lineto
205 318 lineto
205 117 lineto
205 83 207 61 211 50  curveto
215 42 222 35 232 29  curveto
246 21 261 18 276 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
40 18 lineto
67 18 87 26 100 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 105 611  curveto
102 619 95 626 85 632  curveto
71 640 56 644 40 644  curveto
17 644 lineto
17 662 lineto
300 662 lineto
300 644 lineto
276 644 lineto
261 644 246 640 232 632  curveto
222 627 215 619 211 609  curveto
207 598 205 576 205 544  curveto
205 354 lineto
closepath
fill
		} def

	/I
		{
308 18 moveto
308 0 lineto
24 0 lineto
24 18 lineto
48 18 lineto
75 18 95 26 107 42  curveto
115 52 119 77 119 117  curveto
119 544 lineto
119 578 117 600 113 611  curveto
110 619 103 626 93 632  curveto
78 640 63 644 48 644  curveto
24 644 lineto
24 662 lineto
308 662 lineto
308 644 lineto
284 644 lineto
257 644 237 636 225 620  curveto
217 609 213 584 213 544  curveto
213 117 lineto
213 83 215 61 219 50  curveto
222 42 229 35 240 29  curveto
254 21 269 18 284 18  curveto
308 18 lineto
closepath
fill
		} def

	/J
		{
99 644 moveto
99 662 lineto
383 662 lineto
383 644 lineto
359 644 lineto
332 644 312 636 300 620  curveto
292 609 288 584 288 544  curveto
288 221 lineto
288 171 283 131 272 100  curveto
261 69 242 42 215 19  curveto
189 -3 156 -15 119 -15  curveto
88 -15 64 -7 46 7  curveto
29 22 20 40 20 59  curveto
20 75 24 87 32 95  curveto
43 105 55 110 70 110  curveto
80 110 90 107 98 100  curveto
106 93 117 75 129 45  curveto
137 28 146 19 158 19  curveto
167 19 175 24 183 35  curveto
191 46 194 65 194 92  curveto
194 544 lineto
194 578 192 600 188 611  curveto
185 619 178 626 167 632  curveto
153 640 139 644 123 644  curveto
99 644 lineto
closepath
fill
		} def

	/K
		{
298 367 moveto
542 124 lineto
583 84 617 57 645 42  curveto
673 28 702 20 730 18  curveto
730 0 lineto
415 0 lineto
415 18 lineto
434 18 447 21 456 27  curveto
464 33 468 41 468 48  curveto
468 56 467 63 464 69  curveto
461 76 450 87 433 104  curveto
205 330 lineto
205 117 lineto
205 83 207 61 211 50  curveto
214 42 221 35 231 29  curveto
245 21 260 18 276 18  curveto
298 18 lineto
298 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
67 18 87 26 99 42  curveto
107 52 111 77 111 117  curveto
111 544 lineto
111 578 109 600 104 611  curveto
101 619 95 626 84 632  curveto
70 640 55 644 40 644  curveto
16 644 lineto
16 662 lineto
298 662 lineto
298 644 lineto
276 644 lineto
261 644 246 640 231 632  curveto
221 627 214 619 210 609  curveto
207 598 205 577 205 544  curveto
205 342 lineto
211 348 233 369 271 404  curveto
368 492 427 551 447 581  curveto
456 594 460 605 460 615  curveto
460 623 457 629 450 635  curveto
443 641 431 644 415 644  curveto
400 644 lineto
400 662 lineto
643 662 lineto
643 644 lineto
629 643 616 641 604 638  curveto
592 634 578 627 561 617  curveto
544 607 523 590 499 567  curveto
491 561 458 528 399 467  curveto
298 367 lineto
closepath
fill
		} def

	/L
		{
573 183 moveto
589 179 lineto
532 0 lineto
20 0 lineto
20 18 lineto
44 18 lineto
72 18 92 27 104 45  curveto
111 55 115 79 115 117  curveto
115 544 lineto
115 586 110 612 101 622  curveto
88 636 69 644 44 644  curveto
20 644 lineto
20 662 lineto
319 662 lineto
319 644 lineto
284 644 260 641 245 634  curveto
231 627 222 618 216 608  curveto
211 597 208 573 208 533  curveto
208 117 lineto
208 90 211 72 216 62  curveto
220 55 226 50 234 46  curveto
243 43 268 42 311 42  curveto
359 42 lineto
410 42 445 45 466 53  curveto
486 60 505 73 522 93  curveto
539 112 556 142 573 183  curveto
closepath
fill
		} def

	/M
		{
409 0 moveto
153 557 lineto
153 114 lineto
153 74 157 48 166 38  curveto
178 24 197 18 223 18  curveto
247 18 lineto
247 0 lineto
16 0 lineto
16 18 lineto
40 18 lineto
68 18 87 26 99 43  curveto
106 53 110 77 110 114  curveto
110 547 lineto
110 576 107 597 100 610  curveto
96 620 87 628 75 634  curveto
63 640 43 644 16 644  curveto
16 662 lineto
204 662 lineto
444 144 lineto
680 662 lineto
868 662 lineto
868 644 lineto
845 644 lineto
816 644 796 635 785 618  curveto
778 608 774 584 774 547  curveto
774 114 lineto
774 74 778 48 788 38  curveto
800 24 819 18 845 18  curveto
868 18 lineto
868 0 lineto
586 0 lineto
586 18 lineto
610 18 lineto
638 18 658 26 669 43  curveto
677 53 680 77 680 114  curveto
680 557 lineto
425 0 lineto
409 0 lineto
closepath
fill
		} def

	/N
		{
-13 662 moveto
166 662 lineto
571 165 lineto
571 547 lineto
571 588 566 613 557 623  curveto
545 637 526 644 500 644  curveto
477 644 lineto
477 662 lineto
708 662 lineto
708 644 lineto
684 644 lineto
656 644 636 635 625 618  curveto
617 608 614 584 614 547  curveto
614 -10 lineto
596 -10 lineto
160 522 lineto
160 114 lineto
160 74 164 48 173 38  curveto
185 24 204 18 230 18  curveto
253 18 lineto
253 0 lineto
23 0 lineto
23 18 lineto
46 18 lineto
74 18 94 26 106 43  curveto
113 53 117 77 117 114  curveto
117 575 lineto
97 597 83 612 73 619  curveto
63 626 48 633 29 639  curveto
20 642 6 644 -13 644  curveto
-13 662 lineto
closepath
fill
		} def

	/O
		{
365 677 moveto
451 677 526 644 589 579  curveto
652 514 683 432 683 334  curveto
683 234 651 150 588 84  curveto
524 18 448 -15 357 -15  curveto
266 -15 190 17 128 82  curveto
66 146 35 230 35 333  curveto
35 438 70 524 142 590  curveto
204 648 279 677 365 677  curveto
closepath
356 641 moveto
297 641 249 619 213 575  curveto
169 521 146 440 146 335  curveto
146 227 170 144 216 85  curveto
251 41 298 19 356 19  curveto
419 19 470 43 510 92  curveto
551 140 571 217 571 321  curveto
571 435 549 519 504 575  curveto
469 619 419 641 356 641  curveto
closepath
fill
		} def

	/P
		{
205 310 moveto
205 117 lineto
205 75 209 49 218 39  curveto
231 25 249 18 274 18  curveto
300 18 lineto
300 0 lineto
16 0 lineto
16 18 lineto
41 18 lineto
69 18 89 27 101 45  curveto
108 55 111 79 111 117  curveto
111 544 lineto
111 586 106 612 98 622  curveto
85 636 66 644 41 644  curveto
16 644 lineto
16 662 lineto
259 662 lineto
318 662 365 656 399 643  curveto
433 631 462 611 485 582  curveto
509 553 521 518 521 479  curveto
521 424 503 381 467 347  curveto
431 313 381 296 316 296  curveto
300 296 283 297 264 299  curveto
246 302 226 305 205 310  curveto
closepath
205 337 moveto
222 334 237 332 250 330  curveto
264 328 275 328 285 328  curveto
319 328 348 341 372 367  curveto
397 393 409 427 409 469  curveto
409 497 403 524 392 549  curveto
380 573 363 592 342 604  curveto
320 616 296 622 269 622  curveto
252 622 231 619 205 613  curveto
205 337 lineto
closepath
fill
		} def

	/Q
		{
440 -7 moveto
473 -64 509 -106 548 -133  curveto
586 -160 630 -176 679 -180  curveto
679 -195 lineto
634 -194 586 -185 535 -168  curveto
484 -152 436 -129 390 -100  curveto
344 -71 305 -40 271 -7  curveto
225 11 187 31 160 52  curveto
120 84 90 123 68 169  curveto
46 215 35 269 35 332  curveto
35 431 67 513 131 579  curveto
195 644 273 677 364 677  curveto
450 677 525 644 589 578  curveto
652 513 684 430 684 330  curveto
684 249 661 178 616 117  curveto
571 55 512 14 440 -7  curveto
closepath
358 639 moveto
299 639 251 618 215 576  curveto
169 523 146 441 146 332  curveto
146 225 170 142 216 84  curveto
252 40 299 18 358 18  curveto
419 18 468 40 506 84  curveto
550 137 572 215 572 318  curveto
572 397 560 464 536 518  curveto
517 559 492 590 462 610  curveto
431 629 396 639 358 639  curveto
closepath
fill
		} def

	/R
		{
675 0 moveto
499 0 lineto
274 309 lineto
258 308 244 308 234 308  curveto
230 308 225 308 220 308  curveto
215 308 210 309 205 309  curveto
205 117 lineto
205 75 210 49 219 39  curveto
231 25 250 18 274 18  curveto
300 18 lineto
300 0 lineto
17 0 lineto
17 18 lineto
42 18 lineto
69 18 90 27 102 45  curveto
108 55 112 79 112 117  curveto
112 544 lineto
112 586 107 612 98 622  curveto
85 636 67 644 42 644  curveto
17 644 lineto
17 662 lineto
258 662 lineto
328 662 380 656 413 646  curveto
447 636 475 617 498 590  curveto
522 562 533 529 533 491  curveto
533 451 520 415 493 385  curveto
467 355 426 334 370 322  curveto
507 132 lineto
538 88 565 59 587 45  curveto
610 31 639 21 675 18  curveto
675 0 lineto
closepath
205 340 moveto
211 340 217 340 221 340  curveto
226 339 229 339 232 339  curveto
296 339 343 353 375 380  curveto
407 408 423 443 423 485  curveto
423 526 410 560 385 586  curveto
359 612 324 625 282 625  curveto
263 625 237 621 205 615  curveto
205 340 lineto
closepath
fill
		} def

	/S
		{
458 677 moveto
458 448 lineto
440 448 lineto
434 492 424 527 408 553  curveto
393 579 372 599 344 615  curveto
316 630 287 638 257 638  curveto
223 638 195 627 173 607  curveto
151 586 140 562 140 536  curveto
140 516 147 498 161 481  curveto
181 457 229 424 305 383  curveto
367 350 409 325 431 307  curveto
454 289 471 268 484 244  curveto
496 220 502 195 502 168  curveto
502 118 482 75 444 39  curveto
405 3 355 -15 293 -15  curveto
274 -15 256 -13 239 -10  curveto
229 -9 208 -3 177 7  curveto
145 17 125 22 116 22  curveto
108 22 102 20 97 15  curveto
92 10 89 0 86 -15  curveto
68 -15 lineto
68 211 lineto
86 211 lineto
95 164 106 128 121 105  curveto
135 81 157 62 186 46  curveto
216 30 248 22 283 22  curveto
324 22 356 33 380 55  curveto
403 76 415 102 415 131  curveto
415 147 411 164 402 180  curveto
393 197 379 212 360 227  curveto
347 236 312 257 256 289  curveto
199 321 159 346 135 365  curveto
111 384 93 404 81 427  curveto
68 450 62 475 62 502  curveto
62 550 80 591 117 625  curveto
153 660 200 677 256 677  curveto
291 677 328 668 368 651  curveto
386 643 399 639 406 639  curveto
415 639 422 641 427 646  curveto
432 651 437 661 440 677  curveto
458 677 lineto
closepath
fill
		} def

	/T
		{
578 662 moveto
585 506 lineto
567 506 lineto
563 534 558 553 552 565  curveto
542 584 529 598 512 607  curveto
495 616 473 620 446 620  curveto
353 620 lineto
353 114 lineto
353 74 357 48 366 38  curveto
378 24 397 18 423 18  curveto
446 18 lineto
446 0 lineto
165 0 lineto
165 18 lineto
188 18 lineto
216 18 236 26 248 43  curveto
255 53 259 77 259 114  curveto
259 620 lineto
179 620 lineto
148 620 126 618 113 613  curveto
96 607 82 595 70 578  curveto
58 560 51 536 48 506  curveto
30 506 lineto
38 662 lineto
578 662 lineto
closepath
fill
		} def

	/U
		{
477 644 moveto
477 662 lineto
711 662 lineto
711 644 lineto
686 644 lineto
660 644 640 633 626 611  curveto
619 601 616 577 616 541  curveto
616 272 lineto
616 206 609 154 596 117  curveto
583 81 557 49 518 23  curveto
480 -2 427 -15 361 -15  curveto
289 -15 234 -3 196 21  curveto
159 47 132 80 117 123  curveto
106 152 101 206 101 286  curveto
101 544 lineto
101 585 95 612 84 625  curveto
73 637 55 644 30 644  curveto
5 644 lineto
5 662 lineto
291 662 lineto
291 644 lineto
266 644 lineto
238 644 219 635 207 618  curveto
199 606 195 582 195 544  curveto
195 256 lineto
195 230 197 201 202 167  curveto
207 134 215 108 228 90  curveto
240 71 258 56 281 44  curveto
304 32 333 26 367 26  curveto
410 26 449 35 483 54  curveto
517 73 540 97 553 127  curveto
566 156 572 206 572 276  curveto
572 544 lineto
572 586 567 612 558 622  curveto
545 636 527 644 501 644  curveto
477 644 lineto
closepath
fill
		} def

	/V
		{
709 662 moveto
709 644 lineto
686 639 668 632 656 621  curveto
639 605 624 581 610 548  curveto
379 -15 lineto
361 -15 lineto
113 555 lineto
101 584 92 602 86 609  curveto
78 619 68 627 56 633  curveto
45 638 28 642 8 644  curveto
8 662 lineto
279 662 lineto
279 644 lineto
248 641 228 635 219 628  curveto
210 620 206 611 206 599  curveto
206 583 213 557 228 523  curveto
396 135 lineto
553 518 lineto
568 556 576 582 576 597  curveto
576 606 571 615 562 624  curveto
552 632 536 638 514 642  curveto
512 642 509 643 505 644  curveto
505 662 lineto
709 662 lineto
closepath
fill
		} def

	/W
		{
936 662 moveto
936 644 lineto
918 644 904 640 894 634  curveto
883 628 873 617 863 600  curveto
856 588 846 561 832 518  curveto
647 -15 lineto
628 -15 lineto
477 408 lineto
327 -15 lineto
310 -15 lineto
113 534 lineto
98 575 89 599 85 607  curveto
78 619 70 628 58 635  curveto
47 641 32 644 13 644  curveto
13 662 lineto
258 662 lineto
258 644 lineto
246 644 lineto
229 644 216 640 207 632  curveto
197 624 193 615 193 604  curveto
193 592 200 566 214 525  curveto
345 153 lineto
455 469 lineto
435 525 lineto
419 569 lineto
413 586 405 600 396 612  curveto
392 618 387 624 381 628  curveto
373 634 365 638 356 641  curveto
350 643 340 644 327 644  curveto
327 662 lineto
585 662 lineto
585 644 lineto
567 644 lineto
549 644 536 640 527 632  curveto
519 624 515 613 515 600  curveto
515 583 522 555 537 513  curveto
664 153 lineto
790 518 lineto
804 558 811 586 811 602  curveto
811 610 809 617 804 623  curveto
799 630 793 634 786 637  curveto
774 641 758 644 738 644  curveto
738 662 lineto
936 662 lineto
closepath
fill
		} def

	/X
		{
408 366 moveto
550 154 lineto
589 96 618 59 637 43  curveto
656 28 681 19 710 18  curveto
710 0 lineto
426 0 lineto
426 18 lineto
445 18 459 20 468 23  curveto
475 26 480 31 485 37  curveto
489 43 491 49 491 55  curveto
491 63 490 70 487 78  curveto
485 83 476 97 460 121  curveto
348 291 lineto
209 113 lineto
194 94 186 81 183 75  curveto
180 69 178 62 178 55  curveto
178 45 183 36 191 29  curveto
200 22 217 19 242 18  curveto
242 0 lineto
7 0 lineto
7 18 lineto
23 19 38 23 50 28  curveto
70 36 89 48 107 62  curveto
126 76 146 98 170 128  curveto
326 325 lineto
196 516 lineto
160 568 130 602 105 618  curveto
81 634 52 643 20 644  curveto
20 662 lineto
326 662 lineto
326 644 lineto
300 643 282 638 273 631  curveto
263 623 258 615 258 606  curveto
258 594 266 576 282 553  curveto
383 401 lineto
501 550 lineto
515 568 523 580 526 586  curveto
529 593 531 600 531 606  curveto
531 613 529 619 525 625  curveto
520 631 514 636 506 639  curveto
499 642 483 643 460 644  curveto
460 662 lineto
695 662 lineto
695 644 lineto
676 643 661 640 649 635  curveto
632 627 616 617 601 604  curveto
586 592 566 568 539 534  curveto
408 366 lineto
closepath
fill
		} def

	/Y
		{
476 662 moveto
707 662 lineto
707 644 lineto
694 644 lineto
686 644 673 640 657 632  curveto
641 625 626 614 613 600  curveto
599 586 583 563 563 532  curveto
404 280 lineto
404 114 lineto
404 74 408 48 417 38  curveto
430 24 449 18 476 18  curveto
498 18 lineto
498 0 lineto
216 0 lineto
216 18 lineto
240 18 lineto
268 18 288 26 299 43  curveto
306 53 310 77 310 114  curveto
310 271 lineto
128 548 lineto
107 581 92 601 85 609  curveto
77 618 61 627 37 639  curveto
31 642 21 644 9 644  curveto
9 662 lineto
292 662 lineto
292 644 lineto
277 644 lineto
262 644 248 640 235 633  curveto
222 626 216 615 216 601  curveto
216 589 226 568 246 537  curveto
384 324 lineto
514 528 lineto
533 558 543 581 543 596  curveto
543 605 541 613 536 621  curveto
531 628 524 633 516 637  curveto
507 642 494 644 476 644  curveto
476 662 lineto
closepath
fill
		} def

	/Z
		{
575 662 moveto
140 40 lineto
411 40 lineto
453 40 485 49 507 67  curveto
529 85 549 122 566 178  curveto
583 175 lineto
551 0 lineto
12 0 lineto
12 18 lineto
437 622 lineto
225 622 lineto
190 622 164 618 149 611  curveto
133 603 121 592 113 577  curveto
104 563 97 536 90 496  curveto
71 496 lineto
85 662 lineto
575 662 lineto
closepath
fill
		} def

	/bracketleft
		{
296 -198 moveto
82 -198 lineto
82 677 lineto
296 677 lineto
296 638 lineto
155 638 lineto
155 -160 lineto
296 -160 lineto
296 -198 lineto
closepath
fill
		} def

	/backslash
		{
40 694 moveto
279 -13 lineto
240 -13 lineto
1 694 lineto
40 694 lineto
closepath
fill
		} def

	/bracketright
		{
36 677 moveto
251 677 lineto
251 -198 lineto
36 -198 lineto
36 -160 lineto
178 -160 lineto
178 638 lineto
36 638 lineto
36 677 lineto
closepath
fill
		} def

	/asciicircum
		{
243 675 moveto
450 325 lineto
405 325 lineto
234 611 lineto
63 325 lineto
18 325 lineto
228 675 lineto
243 675 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/a
		{
284 64 moveto
238 28 209 8 198 2  curveto
180 -5 161 -9 142 -9  curveto
111 -9 85 1 65 22  curveto
45 43 35 71 35 105  curveto
35 127 40 146 50 162  curveto
63 184 86 205 119 225  curveto
152 244 207 268 284 296  curveto
284 313 lineto
284 358 277 389 263 405  curveto
249 422 228 430 201 430  curveto
181 430 164 425 152 414  curveto
140 403 134 390 134 375  curveto
135 347 lineto
135 332 131 321 123 312  curveto
116 304 106 300 93 300  curveto
81 300 71 305 64 313  curveto
56 321 52 333 52 348  curveto
52 376 67 401 95 425  curveto
124 448 164 460 216 460  curveto
256 460 288 453 313 440  curveto
333 430 347 414 356 393  curveto
362 379 365 350 365 307  curveto
365 155 lineto
365 112 366 86 367 76  curveto
369 67 371 60 375 57  curveto
379 54 383 52 388 52  curveto
393 52 398 53 402 56  curveto
409 60 422 72 441 91  curveto
441 64 lineto
405 15 370 -8 337 -8  curveto
321 -8 308 -3 299 7  curveto
289 18 284 37 284 64  curveto
closepath
284 96 moveto
284 266 lineto
235 247 203 233 189 225  curveto
163 210 145 195 134 180  curveto
123 164 117 147 117 128  curveto
117 105 124 86 138 70  curveto
152 55 168 47 187 47  curveto
211 47 244 63 284 96  curveto
closepath
fill
		} def

	/b
		{
153 370 moveto
197 430 243 460 293 460  curveto
339 460 379 440 414 401  curveto
448 362 465 308 465 240  curveto
465 161 438 97 386 48  curveto
340 7 290 -13 234 -13  curveto
208 -13 182 -8 155 0  curveto
128 9 101 24 73 42  curveto
73 506 lineto
73 557 72 588 69 600  curveto
67 611 63 619 58 624  curveto
52 628 46 630 38 630  curveto
29 630 18 627 4 622  curveto
-2 639 lineto
131 694 lineto
153 694 lineto
153 370 lineto
closepath
153 338 moveto
153 71 lineto
170 55 187 42 205 34  curveto
223 26 241 21 259 21  curveto
289 21 316 38 342 70  curveto
368 103 380 150 380 212  curveto
380 270 368 314 342 344  curveto
316 375 287 391 255 391  curveto
238 391 220 386 203 377  curveto
190 371 173 358 153 338  curveto
closepath
fill
		} def

	/c
		{
411 169 moveto
399 111 375 65 340 33  curveto
305 2 266 -13 223 -13  curveto
172 -13 128 7 90 50  curveto
53 92 34 150 34 223  curveto
34 293 55 350 96 394  curveto
138 438 188 460 247 460  curveto
291 460 327 448 355 425  curveto
384 402 398 378 398 353  curveto
398 340 394 330 386 323  curveto
378 315 367 311 353 311  curveto
333 311 319 317 309 330  curveto
304 336 300 349 298 369  curveto
296 388 290 403 278 413  curveto
267 422 251 427 231 427  curveto
198 427 172 415 152 391  curveto
126 359 113 317 113 265  curveto
113 211 126 164 152 123  curveto
178 82 214 62 258 62  curveto
290 62 319 73 344 95  curveto
362 110 380 137 396 176  curveto
411 169 lineto
closepath
fill
		} def

	/d
		{
347 50 moveto
325 27 304 11 283 1  curveto
262 -8 239 -13 215 -13  curveto
166 -13 124 6 87 47  curveto
51 88 33 140 33 205  curveto
33 269 53 327 93 381  curveto
134 434 186 460 249 460  curveto
288 460 321 448 347 423  curveto
347 505 lineto
347 556 345 588 343 600  curveto
341 611 337 619 332 624  curveto
326 628 320 630 312 630  curveto
304 630 292 627 278 622  curveto
272 639 lineto
405 694 lineto
427 694 lineto
427 177 lineto
427 124 428 92 431 81  curveto
433 69 437 61 443 57  curveto
448 52 454 50 461 50  curveto
470 50 482 53 497 58  curveto
502 41 lineto
369 -13 lineto
347 -13 lineto
347 50 lineto
closepath
347 84 moveto
347 314 lineto
345 337 339 357 329 375  curveto
319 393 306 407 290 416  curveto
274 426 258 430 243 430  curveto
215 430 189 417 167 392  curveto
137 358 122 308 122 243  curveto
122 177 136 127 165 92  curveto
194 57 226 40 261 40  curveto
290 40 319 54 347 84  curveto
closepath
fill
		} def

	/e
		{
106 278 moveto
106 212 122 160 154 122  curveto
187 84 225 65 269 65  curveto
298 65 324 73 345 90  curveto
367 106 385 133 400 172  curveto
415 163 lineto
408 118 388 77 355 41  curveto
323 4 281 -13 232 -13  curveto
178 -13 132 7 94 49  curveto
56 90 37 147 37 217  curveto
37 294 56 353 95 396  curveto
135 439 184 460 243 460  curveto
293 460 334 444 367 411  curveto
399 378 415 334 415 278  curveto
106 278 lineto
closepath
106 307 moveto
313 307 lineto
311 335 308 355 303 367  curveto
295 385 282 400 266 410  curveto
250 421 233 426 216 426  curveto
189 426 165 415 143 394  curveto
122 373 110 344 106 307  curveto
closepath
fill
		} def

	/f
		{
206 412 moveto
206 118 lineto
206 76 210 50 219 39  curveto
231 24 247 17 268 17  curveto
308 17 lineto
308 0 lineto
41 0 lineto
41 17 lineto
61 17 lineto
74 17 86 20 97 27  curveto
107 33 115 42 119 53  curveto
123 64 125 86 125 118  curveto
125 412 lineto
38 412 lineto
38 447 lineto
125 447 lineto
125 476 lineto
125 521 132 558 146 589  curveto
161 620 183 645 212 664  curveto
242 683 275 693 312 693  curveto
346 693 377 682 406 660  curveto
425 645 434 629 434 610  curveto
434 601 430 591 421 583  curveto
413 574 404 570 394 570  curveto
387 570 379 572 370 578  curveto
362 583 352 595 340 613  curveto
328 630 317 642 307 648  curveto
297 655 285 658 273 658  curveto
258 658 245 654 235 646  curveto
224 638 217 625 212 609  curveto
208 592 206 549 206 479  curveto
206 447 lineto
321 447 lineto
321 412 lineto
206 412 lineto
closepath
fill
		} def

	/g
		{
150 163 moveto
123 176 102 195 87 219  curveto
73 242 65 269 65 298  curveto
65 342 82 380 115 412  curveto
149 444 192 460 244 460  curveto
286 460 323 450 354 429  curveto
449 429 lineto
463 429 471 428 474 427  curveto
476 427 478 425 479 423  curveto
480 420 481 415 481 408  curveto
481 399 481 393 479 390  curveto
478 389 476 387 474 386  curveto
471 385 463 385 449 385  curveto
391 385 lineto
409 361 418 331 418 295  curveto
418 253 403 218 371 188  curveto
339 158 296 144 242 144  curveto
220 144 197 147 174 153  curveto
160 141 150 130 145 121  curveto
140 112 138 104 138 97  curveto
138 92 140 86 146 81  curveto
151 76 162 72 177 70  curveto
186 69 209 67 246 66  curveto
313 65 356 62 376 60  curveto
406 55 430 44 448 26  curveto
467 8 476 -14 476 -41  curveto
476 -77 458 -112 424 -144  curveto
373 -192 307 -215 225 -215  curveto
162 -215 109 -201 66 -173  curveto
41 -157 29 -140 29 -122  curveto
29 -114 31 -106 35 -99  curveto
40 -87 52 -70 69 -48  curveto
71 -45 88 -28 119 3  curveto
102 14 90 23 83 31  curveto
76 38 72 48 72 58  curveto
72 69 77 82 86 98  curveto
95 113 117 135 150 163  curveto
closepath
235 437 moveto
211 437 191 427 175 408  curveto
159 388 150 359 150 319  curveto
150 268 161 228 184 200  curveto
201 178 222 167 248 167  curveto
273 167 293 177 309 195  curveto
325 214 333 243 333 283  curveto
333 334 322 375 299 404  curveto
283 426 261 437 235 437  curveto
closepath
146 0 moveto
130 -16 119 -32 111 -46  curveto
103 -60 99 -73 99 -85  curveto
99 -101 109 -115 127 -126  curveto
160 -147 207 -157 269 -157  curveto
327 -157 370 -146 398 -126  curveto
426 -105 440 -83 440 -60  curveto
440 -43 432 -31 415 -23  curveto
398 -16 365 -12 314 -11  curveto
241 -9 185 -5 146 0  curveto
closepath
fill
		} def

	/h
		{
162 694 moveto
162 367 lineto
198 406 227 432 248 443  curveto
269 454 290 460 312 460  curveto
337 460 359 453 377 439  curveto
395 425 409 403 417 373  curveto
424 352 427 314 427 259  curveto
427 101 lineto
427 72 429 53 434 42  curveto
437 35 442 28 450 24  curveto
458 19 472 17 493 17  curveto
493 0 lineto
273 0 lineto
273 17 lineto
284 17 lineto
305 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
345 60 346 75 346 101  curveto
346 259 lineto
346 308 343 340 338 355  curveto
333 370 325 382 314 389  curveto
303 397 290 401 274 401  curveto
258 401 241 397 224 388  curveto
207 380 186 363 162 337  curveto
162 101 lineto
162 70 164 51 167 43  curveto
171 36 177 30 186 25  curveto
196 20 212 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
33 17 48 20 60 26  curveto
66 30 71 36 75 45  curveto
79 54 81 73 81 101  curveto
81 505 lineto
81 556 80 588 77 600  curveto
75 611 71 619 66 624  curveto
61 628 54 630 46 630  curveto
39 630 28 627 13 622  curveto
6 639 lineto
140 694 lineto
162 694 lineto
closepath
fill
		} def

	/i
		{
145 694 moveto
158 694 170 689 179 679  curveto
189 670 194 658 194 645  curveto
194 631 189 619 179 609  curveto
170 600 158 595 145 595  curveto
131 595 119 600 109 609  curveto
100 619 95 631 95 645  curveto
95 658 100 670 109 679  curveto
119 689 131 694 145 694  curveto
closepath
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/j
		{
144 694 moveto
158 694 170 689 180 680  curveto
189 670 194 658 194 644  curveto
194 630 189 619 180 609  curveto
170 599 158 594 144 594  curveto
130 594 119 599 109 609  curveto
99 619 94 630 94 644  curveto
94 658 99 670 109 680  curveto
119 689 130 694 144 694  curveto
closepath
186 460 moveto
186 10 lineto
186 -66 170 -123 137 -160  curveto
105 -197 62 -215 10 -215  curveto
-18 -215 -40 -210 -55 -199  curveto
-69 -188 -76 -177 -76 -166  curveto
-76 -155 -72 -145 -64 -137  curveto
-56 -129 -47 -125 -36 -125  curveto
-28 -125 -19 -127 -10 -131  curveto
-5 -133 5 -141 21 -156  curveto
37 -170 50 -177 61 -177  curveto
68 -177 76 -174 83 -168  curveto
91 -162 97 -152 100 -137  curveto
104 -123 105 -93 105 -45  curveto
105 272 lineto
105 321 104 353 101 367  curveto
99 377 95 385 90 389  curveto
85 393 79 395 70 395  curveto
61 395 50 393 37 388  curveto
30 405 lineto
165 460 lineto
186 460 lineto
closepath
fill
		} def

	/k
		{
163 694 moveto
163 249 lineto
277 353 lineto
301 375 315 389 319 395  curveto
321 398 323 402 323 406  curveto
323 413 320 418 315 423  curveto
309 428 300 430 288 431  curveto
288 447 lineto
482 447 lineto
482 431 lineto
456 430 434 426 416 419  curveto
398 411 379 398 357 379  curveto
243 273 lineto
357 128 lineto
389 88 411 62 422 52  curveto
437 36 451 27 463 22  curveto
471 19 485 17 505 17  curveto
505 0 lineto
288 0 lineto
288 17 lineto
300 17 309 19 313 23  curveto
318 26 320 31 320 37  curveto
320 45 313 57 300 73  curveto
163 249 lineto
163 100 lineto
163 71 165 52 169 43  curveto
173 34 179 27 187 23  curveto
194 20 210 17 235 17  curveto
235 0 lineto
8 0 lineto
8 17 lineto
31 17 48 20 59 25  curveto
66 29 71 34 75 42  curveto
80 53 82 71 82 98  curveto
82 505 lineto
82 557 81 588 79 600  curveto
76 611 73 619 67 624  curveto
62 628 55 630 47 630  curveto
40 630 30 628 16 622  curveto
8 639 lineto
141 694 lineto
163 694 lineto
closepath
fill
		} def

	/l
		{
185 694 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 36 201 29 209 24  curveto
218 19 234 17 257 17  curveto
257 0 lineto
38 0 lineto
38 17 lineto
58 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
101 54 104 73 104 101  curveto
104 507 lineto
104 557 102 588 100 600  curveto
98 611 94 619 89 624  curveto
84 628 78 630 70 630  curveto
61 630 51 627 38 622  curveto
29 639 lineto
163 694 lineto
185 694 lineto
closepath
fill
		} def

	/m
		{
164 365 moveto
196 397 215 416 221 421  curveto
236 433 252 443 269 450  curveto
285 457 302 460 319 460  curveto
347 460 371 452 391 436  curveto
411 419 425 396 432 365  curveto
465 404 493 429 517 442  curveto
540 454 563 460 588 460  curveto
612 460 633 454 651 442  curveto
670 429 684 409 695 382  curveto
702 363 706 333 706 293  curveto
706 101 lineto
706 73 708 53 712 43  curveto
715 36 721 30 730 25  curveto
739 20 753 17 773 17  curveto
773 0 lineto
552 0 lineto
552 17 lineto
562 17 lineto
581 17 596 21 606 28  curveto
614 34 619 42 623 53  curveto
624 59 625 75 625 101  curveto
625 293 lineto
625 329 620 355 611 370  curveto
599 391 578 401 550 401  curveto
533 401 516 397 498 388  curveto
481 380 460 364 435 340  curveto
434 335 lineto
435 314 lineto
435 101 lineto
435 70 437 51 440 43  curveto
444 36 450 30 459 25  curveto
469 20 485 17 508 17  curveto
508 0 lineto
282 0 lineto
282 17 lineto
306 17 323 20 333 26  curveto
342 32 348 41 352 52  curveto
354 58 354 74 354 101  curveto
354 293 lineto
354 329 349 356 338 372  curveto
324 392 304 403 278 403  curveto
261 403 243 398 226 389  curveto
199 374 178 358 164 340  curveto
164 101 lineto
164 71 166 52 170 43  curveto
174 35 180 28 188 24  curveto
196 19 212 17 236 17  curveto
236 0 lineto
15 0 lineto
15 17 lineto
36 17 50 19 58 24  curveto
66 28 72 35 77 45  curveto
81 54 83 73 83 101  curveto
83 271 lineto
83 321 82 352 79 367  curveto
76 377 73 385 68 389  curveto
63 393 56 395 48 395  curveto
39 395 28 393 15 388  curveto
8 405 lineto
143 460 lineto
164 460 lineto
164 365 lineto
closepath
fill
		} def

	/n
		{
161 365 moveto
214 428 264 460 311 460  curveto
335 460 356 454 374 442  curveto
392 429 406 409 416 381  curveto
423 362 427 332 427 292  curveto
427 101 lineto
427 72 429 53 434 43  curveto
437 35 443 28 451 24  curveto
459 19 474 17 495 17  curveto
495 0 lineto
274 0 lineto
274 17 lineto
283 17 lineto
304 17 319 20 327 27  curveto
335 33 341 42 344 55  curveto
346 60 346 75 346 101  curveto
346 284 lineto
346 324 341 354 330 372  curveto
320 391 302 400 277 400  curveto
238 400 200 379 161 336  curveto
161 101 lineto
161 70 163 52 167 44  curveto
171 35 177 28 185 24  curveto
193 19 209 17 234 17  curveto
234 0 lineto
13 0 lineto
13 17 lineto
22 17 lineto
45 17 61 23 69 34  curveto
77 46 81 68 81 101  curveto
81 267 lineto
81 320 79 353 77 365  curveto
74 376 71 384 66 389  curveto
61 393 54 395 45 395  curveto
36 395 25 393 13 388  curveto
5 405 lineto
140 460 lineto
161 460 lineto
161 365 lineto
closepath
fill
		} def

	/o
		{
250 460 moveto
317 460 372 434 413 383  curveto
447 339 465 288 465 231  curveto
465 191 455 151 436 110  curveto
417 69 390 38 357 17  curveto
323 -3 285 -13 244 -13  curveto
177 -13 123 13 83 66  curveto
50 112 33 162 33 219  curveto
33 260 43 301 64 341  curveto
84 382 111 412 144 431  curveto
177 450 212 460 250 460  curveto
closepath
234 428 moveto
217 428 200 423 182 413  curveto
165 403 151 385 140 359  curveto
129 333 124 300 124 260  curveto
124 195 137 138 163 91  curveto
189 44 223 21 265 21  curveto
297 21 323 34 343 60  curveto
364 86 374 130 374 194  curveto
374 273 357 336 323 381  curveto
300 413 270 428 234 428  curveto
closepath
fill
		} def

	/p
		{
0 402 moveto
136 458 lineto
155 458 lineto
155 354 lineto
178 393 201 420 224 436  curveto
248 452 272 460 298 460  curveto
343 460 380 442 410 407  curveto
447 364 465 308 465 239  curveto
465 162 443 98 399 48  curveto
362 7 317 -13 261 -13  curveto
237 -13 216 -10 199 -3  curveto
186 1 171 11 155 25  curveto
155 -110 lineto
155 -140 157 -160 160 -168  curveto
164 -177 171 -183 180 -188  curveto
189 -193 206 -195 230 -195  curveto
230 -213 lineto
-3 -213 lineto
-3 -195 lineto
8 -195 lineto
26 -196 41 -192 54 -185  curveto
60 -181 65 -176 69 -168  curveto
72 -160 74 -139 74 -107  curveto
74 315 lineto
74 344 72 362 70 370  curveto
67 378 63 384 57 388  curveto
52 392 44 394 34 394  curveto
26 394 16 391 4 387  curveto
0 402 lineto
closepath
155 325 moveto
155 158 lineto
155 122 156 98 159 86  curveto
164 68 175 51 193 37  curveto
210 22 233 15 260 15  curveto
292 15 319 28 339 53  curveto
365 86 378 133 378 193  curveto
378 262 363 314 333 351  curveto
313 376 288 389 259 389  curveto
244 389 228 385 213 377  curveto
201 372 182 354 155 325  curveto
closepath
fill
		} def

	/q
		{
427 460 moveto
427 -114 lineto
427 -143 429 -161 433 -169  curveto
437 -178 443 -184 451 -188  curveto
459 -193 475 -195 500 -195  curveto
500 -213 lineto
274 -213 lineto
274 -195 lineto
283 -195 lineto
301 -195 315 -193 325 -187  curveto
331 -184 336 -177 340 -168  curveto
344 -159 346 -141 346 -114  curveto
346 77 lineto
317 42 291 18 269 5  curveto
246 -7 223 -13 200 -13  curveto
156 -13 118 6 84 45  curveto
50 84 33 137 33 203  curveto
33 279 55 341 100 388  curveto
145 436 199 460 263 460  curveto
281 460 298 457 314 452  curveto
330 447 344 439 356 429  curveto
375 438 393 448 410 460  curveto
427 460 lineto
closepath
346 108 moveto
346 318 lineto
346 342 343 361 337 375  curveto
330 389 319 401 303 411  curveto
286 421 268 426 248 426  curveto
211 426 180 410 154 379  curveto
128 348 115 302 115 239  curveto
115 179 128 133 155 102  curveto
181 70 213 55 250 55  curveto
270 55 287 59 302 67  curveto
317 75 332 89 346 108  curveto
closepath
fill
		} def

	/r
		{
162 460 moveto
162 359 lineto
199 426 237 460 277 460  curveto
295 460 310 455 321 444  curveto
333 433 339 420 339 406  curveto
339 393 335 382 326 374  curveto
318 365 308 360 296 360  curveto
284 360 272 366 258 377  curveto
243 388 233 394 226 394  curveto
220 394 214 391 207 384  curveto
192 371 177 349 162 318  curveto
162 104 lineto
162 79 165 61 171 48  curveto
175 39 183 32 193 26  curveto
204 20 220 17 240 17  curveto
240 0 lineto
11 0 lineto
11 17 lineto
34 17 50 21 62 28  curveto
70 33 75 41 79 53  curveto
80 58 81 74 81 100  curveto
81 273 lineto
81 326 80 357 78 366  curveto
76 376 72 384 66 388  curveto
60 393 53 395 45 395  curveto
35 395 23 393 11 388  curveto
6 405 lineto
141 460 lineto
162 460 lineto
closepath
fill
		} def

	/s
		{
320 460 moveto
320 308 lineto
304 308 lineto
291 355 275 388 256 405  curveto
237 423 212 431 182 431  curveto
159 431 141 425 127 413  curveto
113 401 106 388 106 373  curveto
106 355 111 339 122 326  curveto
132 313 152 299 183 284  curveto
254 249 lineto
320 217 354 174 354 122  curveto
354 81 338 48 307 23  curveto
277 -1 242 -13 204 -13  curveto
177 -13 146 -8 110 0  curveto
100 4 91 5 84 5  curveto
76 5 71 1 66 -6  curveto
50 -6 lineto
50 152 lineto
66 152 lineto
76 107 93 72 119 49  curveto
144 26 173 15 205 15  curveto
228 15 246 21 260 34  curveto
274 48 281 63 281 82  curveto
281 104 273 123 258 139  curveto
242 154 210 173 163 197  curveto
116 220 85 241 70 260  curveto
56 279 48 302 48 331  curveto
48 367 61 398 86 423  curveto
111 448 144 460 184 460  curveto
202 460 223 456 248 449  curveto
265 444 276 441 281 441  curveto
286 441 291 443 293 445  curveto
296 447 300 452 304 460  curveto
320 460 lineto
closepath
fill
		} def

	/t
		{
161 594 moveto
161 447 lineto
265 447 lineto
265 413 lineto
161 413 lineto
161 123 lineto
161 94 165 74 173 64  curveto
181 54 192 49 205 49  curveto
216 49 226 52 236 59  curveto
246 66 254 75 260 88  curveto
279 88 lineto
267 56 251 32 230 16  curveto
210 0 188 -7 166 -7  curveto
151 -7 136 -3 122 5  curveto
108 13 97 25 90 40  curveto
83 56 80 80 80 112  curveto
80 413 lineto
9 413 lineto
9 429 lineto
27 436 45 448 64 465  curveto
83 482 100 502 114 526  curveto
122 538 132 561 146 594  curveto
161 594 lineto
closepath
fill
		} def

	/u
		{
423 447 moveto
423 176 lineto
423 124 424 92 427 81  curveto
429 69 433 61 438 57  curveto
444 52 450 50 457 50  curveto
467 50 479 53 491 58  curveto
498 41 lineto
364 -13 lineto
342 -13 lineto
342 81 lineto
304 39 275 13 254 2  curveto
234 -8 213 -13 190 -13  curveto
165 -13 144 -6 125 8  curveto
107 22 94 41 87 63  curveto
80 86 76 118 76 160  curveto
76 360 lineto
76 381 74 396 69 404  curveto
65 412 58 418 49 423  curveto
40 427 24 429 0 429  curveto
0 447 lineto
157 447 lineto
157 147 lineto
157 106 164 78 179 65  curveto
193 52 211 46 231 46  curveto
245 46 261 50 279 59  curveto
297 68 318 85 342 109  curveto
342 363 lineto
342 388 338 405 328 414  curveto
319 423 300 428 271 429  curveto
271 447 lineto
423 447 lineto
closepath
fill
		} def

	/v
		{
8 447 moveto
218 447 lineto
218 429 lineto
205 429 lineto
192 429 182 426 176 419  curveto
169 413 166 405 166 395  curveto
166 383 169 370 176 354  curveto
280 107 lineto
384 363 lineto
392 381 396 395 396 405  curveto
396 409 394 413 392 416  curveto
388 421 383 424 378 426  curveto
372 428 361 429 344 429  curveto
344 447 lineto
490 447 lineto
490 429 lineto
473 427 462 424 455 418  curveto
444 409 433 392 424 370  curveto
266 -13 lineto
246 -13 lineto
86 363 lineto
79 381 72 393 65 401  curveto
59 409 51 415 41 420  curveto
35 423 24 426 8 429  curveto
8 447 lineto
closepath
fill
		} def

	/w
		{
6 447 moveto
193 447 lineto
193 429 lineto
176 427 165 424 159 419  curveto
154 415 151 408 151 398  curveto
151 388 154 376 160 362  curveto
255 104 lineto
352 314 lineto
326 380 lineto
318 399 308 413 295 420  curveto
288 425 275 428 255 429  curveto
255 447 lineto
468 447 lineto
468 429 lineto
445 428 428 423 418 416  curveto
412 411 409 402 409 391  curveto
409 385 410 378 413 371  curveto
514 114 lineto
608 362 lineto
615 379 618 393 618 404  curveto
618 410 615 416 609 420  curveto
602 425 590 428 571 429  curveto
571 447 lineto
712 447 lineto
712 429 lineto
684 424 663 405 650 371  curveto
500 -13 lineto
480 -13 lineto
369 271 lineto
238 -13 lineto
220 -13 lineto
77 362 lineto
67 386 58 402 49 410  curveto
40 418 25 424 6 429  curveto
6 447 lineto
closepath
fill
		} def

	/x
		{
13 447 moveto
223 447 lineto
223 429 lineto
210 429 200 426 195 422  curveto
190 417 187 411 187 404  curveto
187 396 193 384 204 368  curveto
208 362 213 354 220 343  curveto
252 292 lineto
289 343 lineto
312 375 324 396 324 404  curveto
324 411 321 417 315 422  curveto
310 426 301 429 289 429  curveto
289 447 lineto
440 447 lineto
440 429 lineto
424 428 410 423 398 416  curveto
382 404 361 380 333 343  curveto
272 262 lineto
383 102 lineto
411 62 430 38 442 31  curveto
454 23 469 18 487 17  curveto
487 0 lineto
276 0 lineto
276 17 lineto
291 17 302 20 311 27  curveto
317 31 320 37 320 45  curveto
320 52 309 71 289 102  curveto
223 197 lineto
151 102 lineto
129 72 118 54 118 49  curveto
118 41 122 34 129 28  curveto
136 21 147 18 162 17  curveto
162 0 lineto
16 0 lineto
16 17 lineto
28 19 38 23 47 29  curveto
59 39 80 63 109 102  curveto
203 226 lineto
118 349 lineto
94 384 75 406 62 415  curveto
49 424 33 429 13 429  curveto
13 447 lineto
closepath
fill
		} def

	/y
		{
5 447 moveto
214 447 lineto
214 429 lineto
204 429 lineto
189 429 178 426 171 419  curveto
163 413 160 405 160 396  curveto
160 383 165 365 176 343  curveto
285 117 lineto
385 364 lineto
390 378 393 391 393 404  curveto
393 410 392 414 390 417  curveto
387 421 383 423 377 426  curveto
372 428 362 429 348 429  curveto
348 447 lineto
494 447 lineto
494 429 lineto
482 427 472 425 466 421  curveto
459 417 452 410 444 399  curveto
441 394 436 382 428 361  curveto
246 -84 lineto
228 -127 205 -160 177 -182  curveto
148 -204 121 -215 94 -215  curveto
75 -215 59 -210 47 -199  curveto
34 -188 28 -175 28 -161  curveto
28 -147 33 -136 42 -128  curveto
51 -119 63 -115 79 -115  curveto
89 -115 104 -119 123 -126  curveto
136 -131 144 -133 147 -133  curveto
157 -133 167 -128 179 -118  curveto
191 -108 202 -89 214 -60  curveto
246 17 lineto
85 354 lineto
80 365 72 377 62 392  curveto
53 403 47 411 42 415  curveto
34 420 22 425 5 429  curveto
5 447 lineto
closepath
fill
		} def

	/z
		{
419 137 moveto
414 0 lineto
20 0 lineto
20 17 lineto
316 413 lineto
170 413 lineto
138 413 118 411 108 406  curveto
98 402 90 395 84 383  curveto
75 367 70 347 69 323  curveto
49 323 lineto
52 447 lineto
427 447 lineto
427 429 lineto
127 32 lineto
291 32 lineto
325 32 348 35 360 41  curveto
372 46 382 56 390 71  curveto
395 81 399 103 403 137  curveto
419 137 lineto
closepath
fill
		} def

	/braceleft
		{
410 -198 moveto
410 -215 lineto
356 -208 312 -186 278 -149  curveto
244 -113 227 -72 227 -27  curveto
227 -4 230 22 238 53  curveto
245 85 249 109 249 126  curveto
249 149 239 171 219 192  curveto
200 212 173 224 138 229  curveto
138 249 lineto
173 254 200 266 219 286  curveto
239 306 249 328 249 352  curveto
249 369 245 393 238 424  curveto
230 455 227 483 227 506  curveto
227 551 244 591 278 628  curveto
312 665 356 687 410 694  curveto
410 677 lineto
372 668 344 653 326 632  curveto
309 611 300 589 300 564  curveto
300 545 303 519 311 488  curveto
318 457 322 430 322 408  curveto
322 375 310 343 286 312  curveto
262 281 226 257 178 240  curveto
225 223 260 199 285 167  curveto
309 135 322 103 322 70  curveto
322 48 318 21 311 -9  curveto
303 -40 300 -66 300 -85  curveto
300 -110 309 -132 326 -153  curveto
344 -174 372 -189 410 -198  curveto
closepath
fill
		} def

	/bar
		{
119 694 moveto
119 -215 lineto
78 -215 lineto
78 694 lineto
119 694 lineto
closepath
fill
		} def

	/braceright
		{
86 677 moveto
86 694 lineto
140 687 184 665 218 628  curveto
253 592 270 551 270 506  curveto
270 482 266 455 258 424  curveto
251 393 247 369 247 352  curveto
247 329 257 307 277 286  curveto
296 266 324 254 358 249  curveto
358 229 lineto
324 224 296 212 277 192  curveto
257 171 247 149 247 126  curveto
247 109 251 85 258 53  curveto
266 22 270 -4 270 -27  curveto
270 -72 253 -112 218 -149  curveto
184 -186 140 -208 86 -215  curveto
86 -198 lineto
124 -189 152 -174 170 -153  curveto
187 -133 196 -110 196 -85  curveto
196 -66 193 -40 185 -9  curveto
178 21 174 48 174 70  curveto
174 103 186 135 210 166  curveto
234 197 271 221 318 238  curveto
271 255 236 279 211 311  curveto
186 343 174 375 174 408  curveto
174 430 178 457 185 488  curveto
193 519 196 545 196 564  curveto
196 589 187 611 170 632  curveto
152 653 124 668 86 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
167 475 moveto
182 475 195 470 205 459  curveto
215 449 221 436 221 421  curveto
221 406 215 393 205 383  curveto
194 372 181 367 167 367  curveto
152 367 139 372 128 383  curveto
118 393 113 406 113 421  curveto
113 436 118 449 128 459  curveto
139 470 152 475 167 475  curveto
closepath
157 286 moveto
175 286 lineto
219 -108 lineto
220 -126 221 -139 221 -147  curveto
221 -167 216 -184 205 -197  curveto
194 -209 181 -215 166 -215  curveto
151 -215 138 -209 127 -197  curveto
116 -184 111 -166 111 -141  curveto
111 -133 112 -122 113 -108  curveto
157 286 lineto
closepath
fill
		} def

	/cent
		{
439 170 moveto
424 109 397 61 359 27  curveto
330 1 294 -11 251 -11  curveto
225 -11 199 -6 172 5  curveto
103 -185 lineto
69 -185 lineto
145 23 lineto
118 48 99 73 87 98  curveto
71 134 62 175 62 220  curveto
62 303 88 366 139 411  curveto
178 445 223 462 272 462  curveto
279 462 289 461 302 460  curveto
371 647 lineto
406 647 lineto
335 451 lineto
368 436 390 422 402 408  curveto
418 391 426 372 426 352  curveto
426 339 422 329 414 322  curveto
406 314 395 311 380 311  curveto
362 311 348 317 338 329  curveto
332 336 328 350 325 369  curveto
324 379 321 390 317 401  curveto
206 93 lineto
224 80 239 72 251 68  curveto
261 65 272 63 285 63  curveto
305 63 324 67 342 75  curveto
361 84 374 93 384 105  curveto
393 116 407 140 424 176  curveto
439 170 lineto
closepath
180 122 moveto
289 422 lineto
280 426 270 428 260 428  curveto
227 428 200 416 181 392  curveto
154 359 141 315 141 261  curveto
141 236 143 214 149 193  curveto
155 173 165 149 180 122  curveto
closepath
fill
		} def

	/sterling
		{
353 321 moveto
227 321 lineto
227 306 227 295 227 288  curveto
227 257 225 229 220 203  curveto
216 177 208 147 197 113  curveto
261 93 297 82 306 80  curveto
323 76 340 74 356 74  curveto
383 74 405 80 422 93  curveto
439 105 451 125 459 152  curveto
477 147 lineto
470 95 453 55 426 28  curveto
399 1 369 -11 336 -11  curveto
314 -11 294 -7 276 0  curveto
258 8 225 30 177 66  curveto
164 40 150 20 135 7  curveto
120 -5 104 -11 86 -11  curveto
70 -11 57 -6 46 5  curveto
35 16 29 31 29 51  curveto
29 73 37 91 52 105  curveto
67 120 86 127 109 127  curveto
115 127 121 127 128 126  curveto
135 125 142 124 151 123  curveto
152 132 152 139 152 145  curveto
152 151 152 156 152 161  curveto
152 189 149 243 142 321  curveto
47 321 lineto
47 368 lineto
142 368 lineto
138 416 136 449 136 465  curveto
136 505 144 541 160 574  curveto
176 607 198 632 226 649  curveto
254 667 284 675 316 675  curveto
357 675 388 664 409 642  curveto
430 620 440 598 440 576  curveto
440 565 436 556 428 548  curveto
420 540 411 536 402 536  curveto
389 536 379 542 371 554  curveto
368 560 365 573 364 592  curveto
362 611 357 626 347 635  curveto
337 644 323 648 305 648  curveto
279 648 258 638 241 618  curveto
224 598 216 562 216 512  curveto
216 488 218 458 222 420  curveto
224 396 226 378 227 368  curveto
353 368 lineto
353 321 lineto
closepath
145 83 moveto
138 88 131 91 124 94  curveto
117 96 110 97 104 97  curveto
89 97 77 93 69 85  curveto
61 77 57 67 57 54  curveto
57 42 60 33 67 26  curveto
73 20 80 16 89 16  curveto
100 16 110 21 120 31  curveto
131 41 139 59 145 83  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
291 207 moveto
499 207 lineto
499 171 lineto
291 171 lineto
291 119 lineto
291 82 293 59 296 49  curveto
299 42 305 35 313 30  curveto
325 23 339 20 354 20  curveto
375 20 lineto
375 0 lineto
123 0 lineto
123 20 lineto
139 20 lineto
161 20 178 24 189 32  curveto
197 38 203 48 206 60  curveto
207 66 208 86 208 119  curveto
208 171 lineto
0 171 lineto
0 207 lineto
208 207 lineto
208 277 lineto
200 295 lineto
0 295 lineto
0 331 lineto
185 331 lineto
81 573 lineto
69 601 57 620 45 629  curveto
34 638 19 643 0 643  curveto
0 662 lineto
216 662 lineto
216 643 lineto
193 641 177 638 169 632  curveto
161 626 157 620 157 613  curveto
157 608 160 598 166 584  curveto
271 331 lineto
375 577 lineto
381 593 385 605 385 613  curveto
385 620 381 627 375 633  curveto
370 638 360 640 343 642  curveto
340 642 336 642 330 643  curveto
330 662 lineto
499 662 lineto
499 643 lineto
479 643 465 639 457 632  curveto
443 620 429 599 415 567  curveto
310 331 lineto
499 331 lineto
499 295 lineto
294 295 lineto
291 287 lineto
291 207 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
184 411 moveto
162 435 146 457 137 477  curveto
128 497 123 517 123 538  curveto
123 576 136 608 163 635  curveto
190 662 223 675 262 675  curveto
298 675 327 664 350 643  curveto
374 621 385 596 385 568  curveto
385 555 381 544 373 534  curveto
366 527 358 524 347 524  curveto
336 524 326 528 319 535  curveto
312 543 309 551 309 562  curveto
309 566 310 575 312 587  curveto
314 595 315 602 315 608  curveto
315 622 310 633 301 642  curveto
291 650 278 655 262 655  curveto
238 655 218 646 201 630  curveto
185 613 177 593 177 569  curveto
177 548 181 531 190 518  curveto
205 495 229 471 264 446  curveto
329 399 374 356 398 319  curveto
415 292 423 264 423 235  curveto
423 205 415 176 397 146  curveto
380 116 353 90 315 68  curveto
338 43 354 21 363 3  curveto
371 -14 375 -34 375 -55  curveto
375 -95 362 -128 335 -155  curveto
309 -181 276 -195 237 -195  curveto
202 -195 172 -184 149 -161  curveto
126 -139 114 -114 114 -85  curveto
114 -73 118 -63 126 -54  curveto
133 -46 142 -42 152 -42  curveto
162 -42 171 -46 178 -53  curveto
185 -61 189 -71 189 -84  curveto
189 -93 188 -103 185 -114  curveto
182 -124 181 -132 181 -138  curveto
181 -147 185 -155 193 -161  curveto
206 -171 222 -176 240 -176  curveto
262 -176 281 -167 299 -150  curveto
317 -133 326 -115 326 -95  curveto
326 -75 321 -57 311 -41  curveto
295 -17 267 10 226 41  curveto
164 87 123 127 101 162  curveto
84 188 76 216 76 246  curveto
76 276 84 305 102 334  curveto
120 363 147 389 184 411  curveto
closepath
199 396 moveto
150 366 125 330 125 288  curveto
125 265 132 244 144 225  curveto
160 198 193 167 240 131  curveto
263 114 282 98 299 82  curveto
349 112 374 148 374 189  curveto
374 211 367 233 353 256  curveto
338 279 309 307 264 342  curveto
237 363 216 381 199 396  curveto
closepath
fill
		} def

	/currency
		{
387 497 moveto
457 566 lineto
485 539 lineto
415 470 lineto
449 427 465 381 465 333  curveto
465 282 449 236 415 194  curveto
485 123 lineto
457 96 lineto
387 166 lineto
344 132 300 116 255 116  curveto
227 116 199 121 172 131  curveto
144 141 124 152 111 166  curveto
40 96 lineto
13 123 lineto
83 194 lineto
50 232 33 278 33 332  curveto
33 383 50 429 83 470  curveto
13 539 lineto
40 566 lineto
111 497 lineto
128 512 150 524 176 533  curveto
202 542 227 547 250 547  curveto
273 547 297 543 322 534  curveto
346 526 368 513 387 497  curveto
closepath
250 507 moveto
200 507 159 490 124 455  curveto
90 421 73 379 73 330  curveto
73 282 90 241 125 207  curveto
159 172 201 155 249 155  curveto
298 155 339 172 374 207  curveto
409 242 426 283 426 331  curveto
426 361 418 390 402 418  curveto
386 447 364 469 336 484  curveto
308 500 279 507 250 507  curveto
closepath
fill
		} def

	/quotesingle
		{
77 392 moveto
50 536 lineto
43 576 39 603 39 617  curveto
39 638 43 653 52 663  curveto
60 672 72 677 86 677  curveto
101 677 113 672 123 662  curveto
132 653 137 640 137 625  curveto
137 612 133 583 125 536  curveto
98 392 lineto
77 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
159 677 moveto
159 657 lineto
130 642 110 626 97 610  curveto
85 594 79 576 79 557  curveto
79 545 80 537 83 533  curveto
86 529 90 526 94 526  curveto
98 526 104 528 111 530  curveto
118 532 125 534 131 534  curveto
144 534 156 529 166 519  curveto
176 509 181 497 181 482  curveto
181 467 175 453 163 442  curveto
151 431 136 425 118 425  curveto
96 425 76 435 59 454  curveto
41 472 32 496 32 523  curveto
32 556 43 586 65 614  curveto
86 643 118 663 159 677  curveto
closepath
392 675 moveto
392 657 lineto
359 638 337 621 327 606  curveto
316 591 311 573 311 553  curveto
311 544 313 537 316 533  curveto
320 528 324 526 328 526  curveto
331 526 337 527 344 530  curveto
351 532 358 534 365 534  curveto
379 534 390 529 400 519  curveto
410 510 415 498 415 484  curveto
415 468 409 454 396 442  curveto
384 431 368 425 350 425  curveto
329 425 309 434 292 453  curveto
275 471 266 494 266 522  curveto
266 556 277 587 299 615  curveto
321 644 352 664 392 675  curveto
closepath
fill
		} def

	/guillemotleft
		{
248 -3 moveto
220 -3 lineto
31 226 lineto
220 456 lineto
248 456 lineto
128 226 lineto
248 -3 lineto
closepath
468 -3 moveto
440 -3 lineto
248 226 lineto
440 456 lineto
468 456 lineto
350 226 lineto
468 -3 lineto
closepath
fill
		} def

	/guilsinglleft
		{
274 -3 moveto
247 -3 lineto
58 226 lineto
247 456 lineto
274 456 lineto
155 226 lineto
274 -3 lineto
closepath
fill
		} def

	/guilsinglright
		{
56 456 moveto
84 456 lineto
276 225 lineto
84 -3 lineto
56 -3 lineto
174 225 lineto
56 456 lineto
closepath
fill
		} def

	/fi
		{
179 447 moveto
366 447 lineto
402 447 426 448 437 450  curveto
458 450 lineto
458 103 lineto
458 67 462 44 471 33  curveto
480 23 499 18 529 17  curveto
529 0 lineto
307 0 lineto
307 17 lineto
339 17 359 24 368 38  curveto
375 48 378 69 378 103  curveto
378 340 lineto
378 370 376 388 373 395  curveto
370 399 365 403 358 406  curveto
351 409 327 410 288 410  curveto
179 410 lineto
179 119 lineto
179 84 181 61 185 51  curveto
187 43 194 36 203 31  curveto
217 22 229 17 240 17  curveto
260 17 lineto
260 0 lineto
16 0 lineto
16 17 lineto
34 17 lineto
56 17 73 23 83 36  curveto
93 48 98 76 98 119  curveto
98 410 lineto
12 410 lineto
12 447 lineto
98 447 lineto
98 506 106 553 123 586  curveto
139 620 164 646 196 665  curveto
228 684 264 694 305 694  curveto
333 694 359 689 381 680  curveto
404 671 421 659 432 644  curveto
443 630 448 616 448 604  curveto
448 592 445 583 437 576  curveto
430 568 421 564 411 564  curveto
400 564 391 567 383 573  curveto
375 579 362 595 343 621  curveto
333 636 321 647 309 654  curveto
300 659 289 662 275 662  curveto
258 662 242 655 225 642  curveto
209 628 198 613 191 596  curveto
183 572 179 531 179 473  curveto
179 447 lineto
closepath
fill
		} def

	/fl
		{
379 410 moveto
178 410 lineto
178 120 lineto
178 85 181 62 186 51  curveto
190 40 198 32 210 25  curveto
221 19 238 16 261 17  curveto
261 0 lineto
16 0 lineto
16 17 lineto
35 17 lineto
54 17 69 22 80 33  curveto
91 43 97 71 97 117  curveto
97 410 lineto
11 410 lineto
11 447 lineto
97 447 lineto
99 512 107 560 121 592  curveto
135 623 156 647 186 666  curveto
215 685 244 694 273 694  curveto
307 694 339 682 371 658  curveto
440 694 lineto
459 694 lineto
459 103 lineto
459 74 461 55 465 46  curveto
468 37 474 30 484 25  curveto
493 20 508 17 530 17  curveto
530 0 lineto
308 0 lineto
308 17 lineto
330 17 346 21 357 27  curveto
364 30 369 36 373 45  curveto
377 54 379 73 379 103  curveto
379 410 lineto
closepath
379 447 moveto
379 592 lineto
368 580 357 574 345 574  curveto
330 574 313 588 294 615  curveto
276 643 257 657 238 657  curveto
227 657 217 653 210 647  curveto
198 637 189 623 184 605  curveto
180 591 178 553 178 491  curveto
178 447 lineto
379 447 lineto
closepath
fill
		} def

	/endash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/dagger
		{
255 -205 moveto
237 -205 lineto
236 -63 231 50 222 137  curveto
215 201 204 263 188 321  curveto
205 336 216 351 224 367  curveto
231 383 235 406 237 437  curveto
216 435 195 429 173 420  curveto
139 406 114 398 98 398  curveto
83 398 72 403 62 412  curveto
53 420 49 431 49 445  curveto
49 458 54 470 63 479  curveto
73 489 85 493 99 493  curveto
107 493 115 492 122 490  curveto
125 489 142 482 173 469  curveto
192 460 214 455 237 454  curveto
237 467 236 478 234 484  curveto
232 494 227 508 219 526  curveto
202 568 193 600 193 621  curveto
193 640 198 655 209 667  curveto
220 679 233 685 248 685  curveto
261 685 274 678 284 666  curveto
295 654 301 639 301 621  curveto
301 611 299 602 297 592  curveto
294 579 286 559 275 531  curveto
263 502 257 477 255 454  curveto
278 456 300 461 320 469  curveto
352 481 371 488 376 490  curveto
383 492 390 493 398 493  curveto
414 493 426 488 436 479  curveto
445 470 450 458 450 445  curveto
450 432 445 421 436 412  curveto
426 402 414 398 400 398  curveto
382 398 355 406 319 421  curveto
304 427 292 431 286 433  curveto
279 435 269 436 255 437  curveto
257 406 261 383 269 366  curveto
276 350 288 335 304 321  curveto
289 262 278 203 271 144  curveto
265 85 260 -31 255 -205  curveto
closepath
fill
		} def

	/daggerdbl
		{
258 476 moveto
261 455 265 439 271 428  curveto
277 418 288 406 304 393  curveto
288 369 276 346 269 323  curveto
262 300 258 271 258 236  curveto
258 203 262 176 269 154  curveto
275 131 287 108 304 83  curveto
289 69 278 57 272 47  curveto
266 36 261 20 258 0  curveto
271 1 280 3 286 5  curveto
292 7 303 11 321 18  curveto
348 29 370 35 386 35  curveto
400 35 410 31 419 23  curveto
427 15 432 5 432 -7  curveto
432 -20 427 -31 419 -39  curveto
410 -48 400 -52 387 -52  curveto
373 -52 353 -46 325 -34  curveto
310 -28 298 -23 289 -21  curveto
282 -19 272 -18 258 -18  curveto
261 -37 263 -51 265 -57  curveto
266 -63 270 -72 275 -84  curveto
291 -120 299 -146 299 -164  curveto
299 -179 295 -191 285 -201  curveto
276 -210 264 -215 250 -215  curveto
236 -215 225 -210 215 -200  curveto
206 -190 201 -178 201 -163  curveto
201 -155 202 -147 204 -138  curveto
206 -130 213 -111 224 -83  curveto
231 -61 236 -40 239 -18  curveto
224 -18 213 -20 204 -21  curveto
196 -23 184 -28 168 -35  curveto
143 -46 125 -52 113 -52  curveto
99 -52 89 -48 81 -40  curveto
72 -32 68 -21 68 -9  curveto
68 4 73 14 81 23  curveto
90 31 101 35 115 35  curveto
128 35 147 30 170 20  curveto
186 13 199 8 208 6  curveto
214 5 225 4 239 3  curveto
236 23 231 38 225 48  curveto
219 58 208 70 192 83  curveto
207 102 218 122 224 141  curveto
234 171 239 204 239 242  curveto
239 280 234 313 224 342  curveto
217 359 207 376 192 393  curveto
208 405 218 416 224 427  curveto
230 437 235 454 239 476  curveto
225 475 216 474 210 472  curveto
205 471 190 466 168 457  curveto
145 448 126 443 110 443  curveto
98 443 88 447 80 456  curveto
71 464 67 474 67 486  curveto
67 498 71 508 79 516  curveto
87 524 97 528 110 528  curveto
125 528 146 523 174 512  curveto
190 505 203 500 211 499  curveto
217 497 226 496 239 495  curveto
238 509 237 519 235 525  curveto
231 538 224 559 213 588  curveto
206 606 202 615 202 618  curveto
200 624 200 631 200 640  curveto
200 656 204 669 214 679  curveto
223 689 235 694 249 694  curveto
263 694 274 689 283 680  curveto
292 670 296 656 296 638  curveto
296 628 295 619 294 613  curveto
292 606 286 592 276 569  curveto
266 546 260 521 258 495  curveto
273 496 283 497 289 498  curveto
295 500 308 504 326 512  curveto
351 523 371 528 388 528  curveto
401 528 411 524 419 516  curveto
428 508 432 498 432 486  curveto
432 473 427 463 419 455  curveto
410 446 399 442 386 442  curveto
370 442 350 448 324 458  curveto
308 466 296 471 290 472  curveto
283 474 273 475 258 476  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
389 635 moveto
389 -215 lineto
354 -215 lineto
354 635 lineto
263 635 lineto
263 -215 lineto
227 -215 lineto
227 293 lineto
165 296 118 304 88 318  curveto
57 331 33 353 17 382  curveto
1 410 -6 443 -6 479  curveto
-6 514 0 544 14 566  curveto
33 598 58 621 89 637  curveto
121 654 162 662 212 662  curveto
454 662 lineto
454 635 lineto
389 635 lineto
closepath
fill
		} def

	/bullet
		{
177 453 moveto
211 453 239 441 263 417  curveto
287 393 299 364 299 330  curveto
299 296 287 267 263 243  curveto
239 219 211 208 177 208  curveto
143 208 114 219 90 243  curveto
66 267 54 296 54 330  curveto
54 364 66 393 90 417  curveto
114 441 143 453 177 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
94 -166 moveto
94 -145 lineto
127 -133 153 -116 171 -93  curveto
190 -70 199 -45 199 -19  curveto
199 -13 198 -8 195 -3  curveto
192 0 190 0 188 0  curveto
184 0 176 -2 164 -9  curveto
158 -12 152 -13 146 -13  curveto
130 -13 117 -8 108 0  curveto
98 9 94 22 94 39  curveto
94 55 100 69 112 80  curveto
124 91 139 97 156 97  curveto
178 97 197 88 214 69  curveto
231 50 239 26 239 -4  curveto
239 -38 227 -69 204 -98  curveto
181 -127 144 -149 94 -166  curveto
closepath
fill
		} def

	/quotedblbase
		{
56 -154 moveto
56 -133 lineto
89 -115 110 -98 120 -83  curveto
131 -68 136 -50 136 -30  curveto
136 -21 134 -14 131 -10  curveto
127 -5 123 -3 119 -3  curveto
116 -3 111 -4 104 -7  curveto
96 -9 89 -11 82 -11  curveto
68 -11 57 -6 47 3  curveto
37 13 32 25 32 39  curveto
32 54 38 68 51 80  curveto
64 91 79 97 97 97  curveto
118 97 138 88 155 69  curveto
172 51 181 27 181 0  curveto
181 -34 170 -65 148 -94  curveto
126 -122 95 -142 56 -154  curveto
closepath
289 -154 moveto
289 -133 lineto
317 -119 337 -103 350 -87  curveto
362 -70 369 -52 369 -33  curveto
369 -22 367 -14 364 -9  curveto
361 -5 357 -3 353 -3  curveto
349 -3 343 -4 336 -7  curveto
328 -9 322 -11 316 -11  curveto
303 -11 291 -6 281 3  curveto
272 14 267 26 267 40  curveto
267 55 273 69 285 80  curveto
297 91 312 97 329 97  curveto
351 97 371 88 389 69  curveto
406 50 415 26 415 0  curveto
415 -33 404 -63 383 -92  curveto
361 -120 330 -140 289 -154  curveto
closepath
fill
		} def

	/quotedblright
		{
56 426 moveto
56 446 lineto
89 465 110 481 120 497  curveto
131 512 136 529 136 549  curveto
136 558 134 565 131 570  curveto
127 574 123 576 119 576  curveto
116 576 111 575 104 573  curveto
96 570 89 569 82 569  curveto
68 569 57 573 47 583  curveto
37 593 32 605 32 619  curveto
32 635 38 648 51 660  curveto
64 672 79 678 97 678  curveto
118 678 138 668 155 650  curveto
172 631 181 608 181 579  curveto
181 545 170 514 148 486  curveto
126 457 95 437 56 426  curveto
closepath
289 426 moveto
289 446 lineto
317 461 337 476 350 493  curveto
362 509 369 527 369 546  curveto
369 558 367 566 364 570  curveto
361 574 357 576 353 576  curveto
349 576 343 575 336 573  curveto
328 570 322 569 316 569  curveto
303 569 291 574 281 584  curveto
272 594 267 606 267 620  curveto
267 636 273 649 285 660  curveto
297 672 312 678 329 678  curveto
351 678 371 668 389 649  curveto
406 630 415 607 415 579  curveto
415 546 404 516 383 488  curveto
361 460 330 439 289 426  curveto
closepath
fill
		} def

	/guillemotright
		{
251 456 moveto
279 456 lineto
468 225 lineto
279 -3 lineto
251 -3 lineto
371 225 lineto
251 456 lineto
closepath
31 456 moveto
59 456 lineto
251 225 lineto
59 -3 lineto
31 -3 lineto
149 225 lineto
31 456 lineto
closepath
fill
		} def

	/ellipsis
		{
166 94 moveto
181 94 194 89 205 78  curveto
215 68 220 55 220 40  curveto
220 25 215 12 204 2  curveto
194 -8 181 -13 166 -13  curveto
151 -13 138 -8 128 2  curveto
117 12 112 25 112 40  curveto
112 55 117 68 128 79  curveto
138 89 151 94 166 94  curveto
closepath
500 94 moveto
514 94 527 89 538 78  curveto
548 68 554 55 554 40  curveto
554 25 548 12 538 2  curveto
527 -8 514 -13 500 -13  curveto
485 -13 472 -8 461 2  curveto
451 12 445 25 445 40  curveto
445 55 451 68 461 79  curveto
472 89 485 94 500 94  curveto
closepath
833 94 moveto
848 94 861 89 871 78  curveto
882 68 887 55 887 40  curveto
887 25 882 12 871 2  curveto
861 -8 848 -13 833 -13  curveto
818 -13 805 -8 795 2  curveto
784 12 779 25 779 40  curveto
779 55 784 68 794 79  curveto
805 89 818 94 833 94  curveto
closepath
fill
		} def

	/perthousand
		{
595 677 moveto
121 -26 lineto
77 -26 lineto
552 677 lineto
595 677 lineto
closepath
172 677 moveto
197 677 221 669 243 655  curveto
265 640 282 619 295 591  curveto
307 563 313 532 313 498  curveto
313 443 300 400 272 368  curveto
244 337 212 321 174 321  curveto
150 321 126 328 104 343  curveto
81 357 63 378 51 405  curveto
38 433 31 464 31 499  curveto
31 532 38 564 50 592  curveto
63 621 80 642 102 656  curveto
124 670 147 677 172 677  curveto
closepath
170 651 moveto
160 651 152 648 146 643  curveto
135 634 126 619 121 601  curveto
113 576 110 541 110 496  curveto
110 436 118 394 133 370  curveto
144 354 157 346 173 346  curveto
188 346 201 354 211 371  curveto
227 396 235 440 235 502  curveto
235 561 228 602 212 625  curveto
201 642 187 651 170 651  curveto
closepath
502 328 moveto
525 328 548 321 570 306  curveto
592 292 610 271 623 243  curveto
636 215 642 184 642 152  curveto
642 116 636 85 623 58  curveto
610 30 593 9 570 -4  curveto
547 -19 524 -26 500 -26  curveto
464 -26 431 -10 403 20  curveto
374 52 360 95 360 150  curveto
360 184 366 215 379 244  curveto
392 272 410 293 433 307  curveto
456 321 479 328 502 328  curveto
closepath
500 302 moveto
490 302 481 299 474 293  curveto
462 284 453 269 447 248  curveto
441 228 438 194 438 146  curveto
438 87 445 47 460 23  curveto
471 7 484 0 500 0  curveto
515 0 529 8 540 24  curveto
555 48 563 90 563 147  curveto
563 209 555 252 539 277  curveto
529 294 516 302 500 302  curveto
closepath
825 328 moveto
847 328 870 321 894 307  curveto
917 293 935 272 948 245  curveto
961 218 967 189 967 156  curveto
967 116 961 83 949 57  curveto
937 30 920 10 897 -4  curveto
873 -19 850 -26 826 -26  curveto
802 -26 779 -19 757 -5  curveto
735 9 717 30 705 56  curveto
692 83 686 113 686 146  curveto
686 185 692 218 705 246  curveto
717 274 735 294 759 308  curveto
783 321 805 328 825 328  curveto
closepath
825 302 moveto
809 302 796 295 786 279  curveto
771 256 764 212 764 148  curveto
764 88 772 47 787 24  curveto
797 8 811 0 827 0  curveto
837 0 846 3 853 9  curveto
864 18 873 34 879 55  curveto
885 76 889 111 889 160  curveto
889 215 881 255 866 277  curveto
854 294 841 302 825 302  curveto
closepath
fill
		} def

	/questiondown
		{
220 476 moveto
235 476 248 470 259 460  curveto
269 449 274 436 274 421  curveto
274 406 269 394 259 383  curveto
248 372 235 367 220 367  curveto
205 367 192 372 182 383  curveto
171 394 166 406 166 421  curveto
166 436 171 449 182 460  curveto
192 470 205 476 220 476  curveto
closepath
215 305 moveto
234 305 lineto
232 265 228 233 222 209  curveto
216 186 199 145 172 89  curveto
145 32 132 -14 132 -51  curveto
132 -94 143 -127 164 -151  curveto
186 -174 213 -186 247 -186  curveto
275 -186 298 -179 314 -166  curveto
330 -153 338 -138 338 -122  curveto
338 -112 333 -98 323 -81  curveto
313 -63 308 -49 308 -39  curveto
308 -28 312 -19 320 -11  curveto
328 -3 337 0 348 0  curveto
361 0 373 -6 385 -20  curveto
396 -33 402 -51 402 -74  curveto
402 -111 386 -144 354 -173  curveto
322 -201 279 -215 224 -215  curveto
169 -215 125 -200 92 -170  curveto
59 -139 43 -103 43 -61  curveto
43 -34 48 -9 57 13  curveto
71 45 96 81 130 121  curveto
165 161 187 192 197 214  curveto
207 236 213 267 215 305  curveto
closepath
fill
		} def

	/grave
		{
57 678 moveto
166 678 lineto
218 510 lineto
201 510 lineto
57 678 lineto
closepath
fill
		} def

	/acute
		{
275 678 moveto
131 510 lineto
115 510 lineto
166 678 lineto
275 678 lineto
closepath
fill
		} def

	/circumflex
		{
121 676 moveto
211 676 lineto
304 514 lineto
289 514 lineto
155 618 lineto
43 514 lineto
29 514 lineto
121 676 lineto
closepath
fill
		} def

	/tilde
		{
26 535 moveto
10 535 lineto
12 580 21 612 38 632  curveto
55 652 77 662 102 662  curveto
115 662 128 659 139 655  curveto
153 650 174 638 201 620  curveto
228 603 248 594 261 594  curveto
271 594 280 598 288 607  curveto
296 616 303 634 307 662  curveto
322 662 lineto
323 631 319 607 310 590  curveto
302 572 290 558 275 548  curveto
260 538 245 533 229 533  curveto
204 533 172 546 134 572  curveto
113 586 99 595 92 598  curveto
85 601 78 602 71 602  curveto
58 602 47 596 40 584  curveto
36 579 31 562 26 535  curveto
closepath
fill
		} def

	/macron
		{
508 713 moveto
-8 713 lineto
-8 754 lineto
508 754 lineto
508 713 lineto
closepath
fill
		} def

	/breve
		{
26 663 moveto
42 663 lineto
52 643 65 629 79 621  curveto
102 607 132 600 167 600  curveto
202 600 232 606 255 620  curveto
271 630 283 644 290 663  curveto
306 663 lineto
303 622 288 589 261 564  curveto
234 539 202 526 166 526  curveto
130 526 98 538 72 564  curveto
45 589 30 622 26 663  curveto
closepath
fill
		} def

	/dotaccent
		{
167 652 moveto
181 652 194 647 204 637  curveto
215 626 220 614 220 599  curveto
220 584 215 572 204 562  curveto
194 551 181 546 167 546  curveto
152 546 139 551 129 562  curveto
118 572 113 584 113 599  curveto
113 614 118 626 129 637  curveto
139 647 152 652 167 652  curveto
closepath
fill
		} def

	/dieresis
		{
252 652 moveto
267 652 280 647 290 637  curveto
300 626 305 614 305 599  curveto
305 584 300 572 290 562  curveto
280 552 267 546 252 546  curveto
238 546 225 552 215 562  curveto
204 572 199 584 199 599  curveto
199 614 204 626 215 637  curveto
225 647 238 652 252 652  curveto
closepath
80 652 moveto
95 652 108 647 118 637  curveto
128 626 133 614 133 599  curveto
133 584 128 572 118 562  curveto
107 552 95 546 81 546  curveto
66 546 53 552 43 562  curveto
33 572 27 584 27 599  curveto
27 614 32 626 43 637  curveto
53 647 65 652 80 652  curveto
closepath
fill
		} def

	/ring
		{
166 695 moveto
192 695 214 686 232 667  curveto
251 649 260 627 260 602  curveto
260 576 251 553 232 535  curveto
214 517 192 508 166 508  curveto
140 508 118 517 100 535  curveto
82 553 73 576 73 602  curveto
73 627 82 649 100 667  curveto
118 686 140 695 166 695  curveto
closepath
166 661 moveto
149 661 135 655 124 644  curveto
112 632 106 618 106 602  curveto
106 585 112 571 124 560  curveto
135 548 149 542 166 542  curveto
183 542 197 548 208 560  curveto
220 571 226 585 226 602  curveto
226 618 220 632 208 644  curveto
197 655 183 661 166 661  curveto
closepath
fill
		} def

	/cedilla
		{
176 7 moveto
205 7 lineto
181 -30 lineto
201 -35 216 -44 227 -57  curveto
237 -69 242 -84 242 -102  curveto
242 -125 232 -146 212 -163  curveto
193 -181 168 -190 137 -190  curveto
125 -190 109 -189 91 -187  curveto
91 -166 lineto
100 -167 108 -167 114 -167  curveto
131 -167 145 -162 156 -151  curveto
168 -140 173 -128 173 -114  curveto
173 -104 170 -96 162 -88  curveto
155 -81 145 -78 134 -78  curveto
131 -78 127 -78 122 -79  curveto
176 7 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
111 7 moveto
136 7 lineto
128 -9 124 -25 124 -40  curveto
124 -67 132 -89 149 -104  curveto
171 -125 198 -135 228 -135  curveto
247 -135 266 -132 286 -124  curveto
296 -140 lineto
268 -156 246 -166 232 -170  curveto
218 -175 201 -177 184 -177  curveto
148 -177 121 -168 101 -150  curveto
82 -133 72 -112 72 -87  curveto
72 -70 75 -52 82 -35  curveto
89 -17 99 -3 111 7  curveto
closepath
fill
		} def

	/caron
		{
211 514 moveto
122 514 lineto
29 676 lineto
44 676 lineto
177 572 lineto
289 676 lineto
304 676 lineto
211 514 lineto
closepath
fill
		} def

	/emdash
		{
40 261 moveto
292 261 lineto
292 187 lineto
40 187 lineto
40 261 lineto
closepath
fill
		} def

	/AE
		{
501 625 moveto
501 364 lineto
626 364 lineto
664 364 690 371 706 385  curveto
721 399 730 424 732 460  curveto
750 460 lineto
750 230 lineto
732 230 lineto
729 263 723 284 717 296  curveto
710 307 699 316 683 323  curveto
676 326 657 328 626 328  curveto
501 328 lineto
501 109 lineto
501 79 502 62 504 56  curveto
507 50 511 45 519 42  curveto
526 38 539 36 557 36  curveto
646 36 lineto
681 36 709 39 728 44  curveto
747 50 766 62 784 79  curveto
807 101 827 130 842 166  curveto
861 166 lineto
808 0 lineto
311 0 lineto
311 18 lineto
336 18 lineto
363 18 383 26 396 42  curveto
403 52 407 77 407 116  curveto
407 256 lineto
214 256 lineto
153 142 lineto
131 99 119 71 119 58  curveto
119 48 124 40 134 32  curveto
144 25 165 20 196 18  curveto
196 0 lineto
-11 0 lineto
-11 18 lineto
2 18 14 21 25 27  curveto
35 33 46 43 58 59  curveto
70 74 85 99 104 133  curveto
305 510 lineto
330 556 343 588 343 604  curveto
343 614 338 623 330 628  curveto
319 637 295 642 258 644  curveto
258 662 lineto
801 662 lineto
808 516 lineto
792 516 lineto
787 550 779 575 767 593  curveto
758 605 746 615 729 621  curveto
720 624 697 625 663 625  curveto
501 625 lineto
closepath
407 625 moveto
233 292 lineto
407 292 lineto
407 625 lineto
closepath
fill
		} def

	/ordfeminine
		{
166 576 moveto
166 611 161 634 153 645  curveto
144 656 131 662 114 662  curveto
98 662 87 658 79 651  curveto
72 644 68 633 68 618  curveto
68 604 65 593 60 586  curveto
54 579 48 576 40 576  curveto
32 576 26 579 20 584  curveto
15 590 12 597 12 605  curveto
12 623 21 639 40 654  curveto
58 668 87 675 126 675  curveto
156 675 179 670 196 660  curveto
212 650 222 640 226 629  curveto
231 618 233 600 233 576  curveto
233 469 lineto
233 452 233 442 234 439  curveto
235 435 237 432 239 430  curveto
242 428 244 427 246 427  curveto
250 427 260 432 274 441  curveto
274 418 lineto
250 401 234 390 226 387  curveto
218 384 210 382 201 382  curveto
193 382 186 385 179 392  curveto
173 399 168 411 166 428  curveto
145 414 126 402 108 395  curveto
91 388 75 384 61 384  curveto
43 384 28 390 16 402  curveto
3 415 -2 429 -2 444  curveto
-2 459 0 471 7 482  curveto
17 497 35 512 60 527  curveto
76 537 112 554 166 576  curveto
closepath
166 557 moveto
126 544 100 530 86 514  curveto
72 499 64 483 64 467  curveto
64 456 69 446 77 438  curveto
85 430 96 425 108 425  curveto
115 425 123 427 133 431  curveto
143 434 153 440 166 447  curveto
166 557 lineto
closepath
fill
		} def

	/Lslash
		{
530 0 moveto
18 0 lineto
18 18 lineto
38 18 lineto
53 18 68 21 83 29  curveto
94 34 101 42 105 53  curveto
109 64 111 85 111 118  curveto
111 264 lineto
10 183 lineto
10 228 lineto
111 313 lineto
111 542 lineto
111 580 110 602 106 611  curveto
102 620 95 627 84 634  curveto
73 640 57 644 38 644  curveto
18 644 lineto
18 662 lineto
312 662 lineto
312 644 lineto
282 644 lineto
259 644 242 640 231 633  curveto
220 625 213 614 208 600  curveto
206 592 205 573 205 542  curveto
205 391 lineto
316 482 lineto
316 436 lineto
205 342 lineto
205 121 lineto
205 92 207 73 210 66  curveto
214 58 221 52 230 48  curveto
237 44 256 42 286 42  curveto
360 42 lineto
408 42 439 45 455 50  curveto
477 56 498 70 518 92  curveto
538 113 555 143 569 183  curveto
585 179 lineto
530 0 lineto
closepath
fill
		} def

	/Oslash
		{
560 604 moveto
624 683 lineto
652 662 lineto
587 580 lineto
621 543 645 506 661 468  curveto
676 430 684 386 684 335  curveto
684 223 644 133 564 64  curveto
503 11 436 -15 363 -15  curveto
329 -15 294 -9 257 3  curveto
220 15 188 32 161 54  curveto
98 -22 lineto
69 0 lineto
133 80 lineto
68 147 35 233 35 337  curveto
35 433 67 514 131 579  curveto
195 644 271 677 361 677  curveto
435 677 501 653 560 604  curveto
closepath
519 554 moveto
481 613 428 642 359 642  curveto
329 642 305 639 287 631  curveto
263 622 241 606 222 584  curveto
196 556 177 521 165 479  curveto
153 438 147 392 147 340  curveto
147 265 159 198 183 141  curveto
519 554 lineto
closepath
537 519 moveto
203 105 lineto
220 79 239 59 259 47  curveto
288 29 320 20 356 20  curveto
390 20 418 25 440 35  curveto
462 45 482 61 501 83  curveto
520 104 537 134 550 173  curveto
564 212 571 261 571 320  curveto
571 360 568 397 562 431  curveto
557 456 549 485 537 519  curveto
closepath
fill
		} def

	/OE
		{
539 625 moveto
539 364 lineto
628 364 lineto
665 364 692 372 708 387  curveto
723 403 731 427 730 460  curveto
750 460 lineto
750 229 lineto
730 229 lineto
728 270 719 296 706 309  curveto
692 322 666 328 628 328  curveto
539 328 lineto
539 109 lineto
539 83 540 66 543 59  curveto
547 51 552 45 560 41  curveto
564 38 577 37 597 37  curveto
648 37 lineto
687 37 714 39 730 43  curveto
745 47 761 57 778 72  curveto
802 94 823 125 841 166  curveto
860 166 lineto
808 0 lineto
571 0 lineto
525 0 497 0 487 0  curveto
483 0 456 -1 406 -4  curveto
371 -6 347 -7 335 -7  curveto
280 -7 230 6 184 33  curveto
139 61 103 102 76 156  curveto
49 209 36 267 36 330  curveto
36 414 59 488 105 552  curveto
160 629 240 667 346 667  curveto
353 667 385 666 440 664  curveto
486 662 529 662 571 662  curveto
802 662 lineto
808 516 lineto
792 516 lineto
784 555 777 579 771 589  curveto
763 602 750 612 733 619  curveto
723 623 699 625 664 625  curveto
539 625 lineto
closepath
445 508 moveto
445 551 442 579 436 592  curveto
430 606 421 616 410 622  curveto
393 632 373 636 348 636  curveto
307 636 272 624 241 601  curveto
210 577 187 540 172 491  curveto
156 442 148 387 148 326  curveto
148 275 155 226 169 179  curveto
183 131 205 94 235 67  curveto
266 40 302 26 346 26  curveto
370 26 390 31 405 39  curveto
420 47 431 59 436 74  curveto
442 89 445 119 445 166  curveto
445 508 lineto
closepath
fill
		} def

	/ordmasculine
		{
158 675 moveto
198 675 232 662 258 634  curveto
285 607 298 573 298 532  curveto
298 492 283 457 254 428  curveto
225 398 191 384 151 384  curveto
113 384 80 397 54 424  curveto
27 450 14 484 14 524  curveto
14 569 27 606 54 634  curveto
81 661 115 675 158 675  curveto
closepath
144 654 moveto
127 654 113 647 101 632  curveto
89 618 83 594 83 562  curveto
83 511 94 469 116 437  curveto
129 418 146 409 166 409  curveto
185 409 200 416 212 430  curveto
224 445 230 468 230 499  curveto
230 550 219 592 196 624  curveto
181 644 164 654 144 654  curveto
closepath
fill
		} def

	/ae
		{
358 276 moveto
358 260 357 248 357 240  curveto
357 175 369 128 393 101  curveto
416 73 446 59 482 59  curveto
514 59 543 69 568 89  curveto
585 102 602 127 621 167  curveto
636 156 lineto
625 103 599 59 561 24  curveto
533 0 498 -13 456 -13  curveto
420 -13 390 -6 365 9  curveto
354 16 335 35 311 64  curveto
307 61 298 54 284 43  curveto
265 28 253 18 246 15  curveto
231 6 215 0 197 -5  curveto
180 -11 162 -13 144 -13  curveto
113 -13 88 -2 67 18  curveto
46 40 35 66 35 98  curveto
35 126 42 150 56 170  curveto
71 190 98 210 140 231  curveto
190 257 235 277 274 291  curveto
274 336 lineto
274 371 268 396 255 410  curveto
242 425 224 432 203 432  curveto
181 432 164 427 152 417  curveto
140 406 134 394 134 381  curveto
134 354 132 336 130 328  curveto
127 319 123 313 117 309  curveto
111 305 104 303 95 303  curveto
82 303 72 306 65 314  curveto
56 324 51 336 51 349  curveto
51 366 57 383 69 400  curveto
80 417 99 431 125 443  curveto
150 455 180 460 214 460  curveto
255 460 285 455 306 443  curveto
326 432 340 417 346 400  curveto
362 420 378 434 396 443  curveto
419 455 446 460 478 460  curveto
524 460 563 445 592 413  curveto
621 382 636 336 636 276  curveto
358 276 lineto
closepath
358 308 moveto
542 308 lineto
542 349 533 379 516 398  curveto
500 416 478 426 452 426  curveto
426 426 404 416 386 395  curveto
368 375 359 346 358 308  curveto
closepath
297 89 moveto
291 104 285 123 281 147  curveto
277 170 274 193 274 216  curveto
274 259 lineto
230 246 190 225 153 197  curveto
129 178 117 154 117 125  curveto
117 100 125 79 140 62  curveto
156 46 174 38 196 38  curveto
208 38 222 41 236 48  curveto
250 55 271 69 297 89  curveto
closepath
fill
		} def

	/dotlessi
		{
185 460 moveto
185 101 lineto
185 73 187 54 191 45  curveto
195 35 201 28 209 24  curveto
217 19 232 17 253 17  curveto
253 0 lineto
36 0 lineto
36 17 lineto
57 17 72 19 80 23  curveto
87 28 93 35 97 44  curveto
102 54 104 73 104 101  curveto
104 273 lineto
104 321 103 353 100 367  curveto
97 378 94 385 89 389  curveto
84 393 77 395 69 395  curveto
60 395 49 393 36 388  curveto
29 405 lineto
164 460 lineto
185 460 lineto
closepath
fill
		} def

	/lslash
		{
185 694 moveto
185 397 lineto
269 466 lineto
269 424 lineto
185 355 lineto
185 100 lineto
185 69 187 49 190 42  curveto
194 34 199 29 207 25  curveto
219 19 236 16 256 17  curveto
256 0 lineto
31 0 lineto
31 17 lineto
43 17 lineto
60 17 73 20 83 25  curveto
91 30 96 36 100 44  curveto
103 53 105 73 105 105  curveto
105 291 lineto
14 216 lineto
14 257 lineto
105 332 lineto
105 505 lineto
105 554 104 584 101 596  curveto
99 605 95 611 89 617  curveto
83 622 76 625 68 625  curveto
63 625 52 622 36 616  curveto
31 634 lineto
169 694 lineto
185 694 lineto
closepath
fill
		} def

	/oslash
		{
393 406 moveto
458 478 lineto
480 457 lineto
415 382 lineto
449 338 466 288 466 230  curveto
466 192 457 152 438 111  curveto
419 69 393 38 360 17  curveto
326 -3 289 -13 247 -13  curveto
220 -13 196 -9 175 -1  curveto
154 7 132 21 107 42  curveto
42 -32 lineto
19 -11 lineto
87 65 lineto
71 86 58 110 49 140  curveto
40 169 36 196 36 222  curveto
36 260 45 299 65 339  curveto
85 378 111 408 145 429  curveto
178 450 214 460 254 460  curveto
281 460 305 456 326 447  curveto
348 439 370 425 393 406  curveto
closepath
343 351 moveto
327 380 310 400 294 411  curveto
278 422 259 428 238 428  curveto
206 428 179 415 158 389  curveto
137 363 126 319 126 259  curveto
126 219 133 176 146 131  curveto
343 351 lineto
closepath
357 319 moveto
160 99 lineto
177 69 193 49 209 37  curveto
225 26 244 21 267 21  curveto
299 21 325 34 345 60  curveto
366 86 376 131 376 196  curveto
376 235 370 276 357 319  curveto
closepath
fill
		} def

	/oe
		{
421 279 moveto
420 271 420 265 420 261  curveto
420 230 425 198 436 165  curveto
447 132 463 107 485 91  curveto
506 75 530 66 556 66  curveto
582 66 605 75 625 91  curveto
645 108 661 135 672 173  curveto
688 165 lineto
677 102 656 56 627 28  curveto
598 0 563 -13 522 -13  curveto
491 -13 464 -6 442 9  curveto
419 24 402 43 391 64  curveto
371 38 348 19 322 6  curveto
296 -7 267 -13 236 -13  curveto
179 -13 130 7 91 49  curveto
52 90 32 146 32 216  curveto
32 290 52 350 93 394  curveto
133 438 181 460 239 460  curveto
274 460 304 453 330 438  curveto
355 424 376 406 391 383  curveto
410 410 430 430 452 442  curveto
473 454 499 460 529 460  curveto
577 460 616 444 646 412  curveto
676 380 690 336 688 279  curveto
421 279 lineto
closepath
221 433 moveto
209 433 195 429 179 420  curveto
163 412 150 397 142 376  curveto
130 349 124 311 124 263  curveto
124 179 140 113 173 64  curveto
194 35 218 21 248 21  curveto
277 21 301 33 320 57  curveto
339 81 349 123 349 184  curveto
349 260 338 320 316 365  curveto
294 411 262 433 221 433  curveto
closepath
421 311 moveto
592 311 lineto
593 334 589 356 581 376  curveto
575 392 565 405 551 414  curveto
537 423 522 428 507 428  curveto
485 428 466 418 449 398  curveto
432 379 423 350 421 311  curveto
closepath
fill
		} def

	/germandbls
		{
17 0 moveto
17 17 lineto
36 19 50 22 58 27  curveto
67 33 73 40 76 49  curveto
79 58 81 78 81 109  curveto
81 471 lineto
81 552 96 610 126 644  curveto
157 677 200 694 255 694  curveto
308 694 350 679 381 649  curveto
412 619 427 581 427 535  curveto
427 501 418 471 401 447  curveto
388 430 366 414 334 400  curveto
378 387 411 365 434 333  curveto
456 300 467 258 467 206  curveto
467 149 452 99 423 57  curveto
393 14 354 -6 304 -6  curveto
275 -6 253 1 236 17  curveto
218 32 210 51 210 72  curveto
210 86 213 96 220 104  curveto
227 111 237 115 249 115  curveto
261 115 271 111 278 104  curveto
285 97 289 88 289 76  curveto
289 71 288 66 287 60  curveto
285 52 284 47 284 43  curveto
284 37 286 32 291 27  curveto
296 23 303 21 311 21  curveto
331 21 347 29 359 46  curveto
376 69 384 104 384 152  curveto
384 220 372 273 348 313  curveto
324 353 288 374 240 377  curveto
240 405 lineto
275 405 301 415 319 436  curveto
336 456 345 490 345 538  curveto
345 581 337 613 320 632  curveto
302 652 280 662 251 662  curveto
225 662 204 651 187 630  curveto
170 610 162 568 162 506  curveto
162 0 lineto
17 0 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman exch definefont pop
/TimesNewRoman findfont 13.0 scalefont setfont
(sin\(x\)) show
Q
Q
newpath
0.0 0.0 m
0.0 16.0 l
75.0 16.0 l
75.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 315.0 177.0 ] defaultmatrix matrix concatmatrix setmatrix
-315.0 -177.0 translate
newpath
312.0 174.0 m
312.0 226.0 l
395.0 226.0 l
395.0 174.0 l
h
W
Q
q
315 192 78 16 rc
q
0.196078 0.803922 0.196078 RG
317.0 192.0 translate
1 0 7 OPL
34 7
-317.0 -192.0 translate
Q
315.0 192.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
37 0 40 15 rc
41.0 12.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(cos\(x\)) show
Q
Q
newpath
0.0 0.0 m
0.0 16.0 l
78.0 16.0 l
78.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 315.0 192.0 ] defaultmatrix matrix concatmatrix setmatrix
-315.0 -192.0 translate
newpath
312.0 174.0 m
312.0 226.0 l
395.0 226.0 l
395.0 174.0 l
h
W
Q
q
315 207 76 16 rc
q
0.854902 0.647059 0.12549 RG
317.0 207.0 translate
1 0 7 OPL
34 7
-317.0 -207.0 translate
Q
315.0 207.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
37 0 38 15 rc
41.0 12.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(tan\(x\)) show
Q
Q
newpath
0.0 0.0 m
0.0 16.0 l
76.0 16.0 l
76.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 315.0 207.0 ] defaultmatrix matrix concatmatrix setmatrix
-315.0 -207.0 translate
newpath
312.0 174.0 m
312.0 226.0 l
395.0 226.0 l
395.0 174.0 l
h
W
Q
Q
2 J
0 j
bias 313.0 175.0 79.0 48.0 rs unbias
0 J
1 j
Q
q
5.0 5.0 translate
0 0 307 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.0 0.0 0.0 RG
12.002891 6.01579 287.96756 375.984222 rc
154 13 195 OPL
15 190
16 185
18 180
19 176
22 169
25 162
28 156
31 152
32 150
34 149
35 148
35 148
36 148
37 148
38 148
38 148
39 148
40 149
41 150
43 152
46 156
49 161
51 168
54 176
57 185
60 194
63 204
66 212
70 221
73 228
75 233
78 237
80 239
81 240
82 241
83 241
84 241
84 241
85 241
86 241
87 241
87 240
89 239
90 237
93 233
96 227
99 220
102 213
103 208
105 204
107 199
108 194
111 185
114 177
117 169
120 161
123 156
126 152
127 150
129 149
129 148
130 148
131 148
132 148
132 148
133 148
134 148
135 149
136 150
138 151
141 156
144 162
146 168
149 176
152 185
155 194
157 199
158 204
160 208
162 213
164 220
167 227
170 233
173 237
175 239
176 240
177 241
178 241
178 241
179 241
180 241
181 241
181 241
182 240
184 239
185 238
188 234
191 228
194 220
197 212
200 203
203 194
205 190
206 185
208 180
209 176
212 168
215 162
218 156
221 151
222 150
224 149
224 148
225 148
226 148
227 148
227 148
228 148
229 148
230 149
231 150
233 151
236 156
238 161
242 168
245 177
248 186
250 195
254 204
257 213
260 221
263 228
265 233
268 237
270 239
271 240
272 241
273 241
274 241
274 241
275 241
276 241
276 241
277 240
279 239
280 238
283 233
286 228
289 221
292 213
293 209
295 204
296 199
298 195
newpath
0.0 0.0 m
0.0 390.0 l
307.0 390.0 l
307.0 0.0 l
h
W
Q
q
0.196078 0.803922 0.196078 RG
12.002891 6.01579 287.96756 375.984222 rc
158 13 148 OPL
14 148
15 148
15 148
16 149
18 150
19 152
22 156
25 161
28 168
31 176
32 181
34 185
35 190
37 195
38 199
40 204
41 209
43 213
46 221
49 227
51 233
54 237
56 239
57 240
58 241
59 241
60 241
60 241
61 241
62 241
63 241
63 240
65 239
66 238
70 233
73 227
75 220
78 213
80 208
81 204
83 199
84 194
86 190
87 185
89 180
90 176
93 168
96 161
99 156
102 152
103 150
105 149
106 148
107 148
107 148
108 148
109 148
110 148
110 148
111 149
112 150
114 151
117 156
120 162
123 168
126 176
127 180
129 185
130 190
132 194
135 203
138 212
141 220
144 228
146 233
149 237
151 239
152 240
153 241
154 241
155 241
155 241
156 241
157 241
158 241
158 240
160 239
162 237
164 233
167 228
170 221
173 213
175 209
176 204
178 200
179 195
182 186
185 177
188 169
191 162
194 156
197 151
199 150
200 149
201 148
202 148
202 148
203 148
204 148
205 148
205 148
206 149
208 150
209 152
212 156
215 161
218 169
221 177
224 185
227 194
230 203
233 212
236 220
238 227
242 233
245 238
246 239
248 240
248 241
249 241
250 241
250 241
251 241
252 241
253 241
254 240
255 239
257 237
260 233
263 227
265 220
268 213
270 208
271 204
273 199
274 194
277 185
280 177
283 169
286 162
289 156
292 152
293 150
295 149
296 148
296 148
297 148
298 148
newpath
0.0 0.0 m
0.0 390.0 l
307.0 390.0 l
307.0 0.0 l
h
W
Q
q
0.854902 0.647059 0.12549 RG
12.002891 6.01579 287.96756 375.984222 rc
41 278 395 OPL
278 369
279 348
279 331
280 319
280 307
281 297
281 289
282 282
282 275
283 270
283 264
284 260
284 255
285 251
285 248
286 244
286 241
287 238
287 236
288 233
288 230
289 228
289 226
290 223
290 221
291 219
291 218
292 216
292 214
293 212
293 210
294 209
294 207
295 205
295 204
295 202
296 201
296 199
297 198
297 196
298 195
41 13 195 OPL
14 193
14 192
14 190
15 188
15 187
16 185
16 184
17 182
17 180
18 179
18 177
19 175
19 173
20 171
20 170
21 168
21 166
22 163
22 161
23 159
23 156
24 154
24 151
25 148
25 145
26 141
26 138
27 134
27 130
28 125
28 119
29 114
29 107
30 100
30 92
31 82
31 71
32 58
32 41
33 20
33 -6
42 40 430 OPL
41 368
42 331
43 307
44 289
45 275
46 264
47 255
48 248
49 241
50 235
51 230
52 226
53 221
54 218
55 214
56 210
57 207
58 204
59 201
59 198
60 195
62 191
62 189
63 185
64 182
65 179
66 175
67 171
68 168
69 163
70 159
71 154
72 148
73 141
74 134
75 125
76 114
77 100
78 81
79 58
80 20
81 -38
42 87 430 OPL
88 368
89 331
90 307
91 289
92 275
93 264
94 255
95 248
96 241
97 235
98 230
99 226
100 221
101 218
102 214
103 210
104 207
105 204
106 201
107 198
108 195
109 191
110 189
111 185
112 182
113 179
114 175
115 171
116 168
117 163
118 159
119 154
120 148
121 141
122 134
123 125
124 114
125 100
126 81
127 58
128 20
129 -38
42 135 430 OPL
136 368
137 331
138 307
139 289
140 275
141 264
142 255
143 248
144 241
145 235
146 230
147 226
148 221
149 218
150 214
151 210
152 207
153 204
154 201
154 198
155 195
157 191
157 189
158 185
159 182
160 179
161 175
162 171
163 168
164 163
165 159
166 154
167 148
168 141
169 134
170 125
171 114
172 100
173 81
174 58
175 20
176 -38
42 182 430 OPL
183 368
184 331
185 307
186 289
187 275
188 264
189 255
190 248
191 241
192 235
193 230
194 226
195 221
196 218
197 214
198 210
199 207
200 204
201 201
202 198
203 195
204 191
205 189
206 185
207 182
208 179
209 175
210 171
211 168
212 163
213 159
214 154
215 148
216 141
217 134
218 125
219 114
220 100
221 81
222 58
223 20
224 -38
42 230 430 OPL
231 368
232 331
233 307
234 289
235 275
236 264
237 255
238 248
239 241
240 235
241 230
242 226
243 221
244 218
245 214
245 210
247 207
247 204
249 201
249 198
250 195
252 191
252 189
253 185
254 182
255 179
256 175
257 171
258 168
259 163
260 159
261 154
262 148
263 141
264 134
265 125
266 114
267 100
268 81
269 58
270 20
271 -38
newpath
0.0 0.0 m
0.0 390.0 l
307.0 390.0 l
307.0 0.0 l
h
W
Q
Q
q
2 J
0 j
q
1 13 195 OPL
298 195
Q
0.0 0.0 translate
q
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] concat
q
195 219 14 15 rc
199.0 231.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -237 1052 912 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -237 1052 912
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0078125 def
		/quotedbl 419.921875 def
		/numbersign 500.0 def
		/dollar 500.0 def
		/percent 833.0078125 def
		/ampersand 777.83203125 def
		/quoteright 213.8671875 def
		/parenleft 333.0078125 def
		/parenright 333.0078125 def
		/asterisk 500.0 def
		/plus 674.8046875 def
		/comma 250.0 def
		/hyphen 333.0078125 def
		/period 250.0 def
		/slash 277.83203125 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 333.0078125 def
		/semicolon 333.0078125 def
		/less 674.8046875 def
		/equal 674.8046875 def
		/greater 674.8046875 def
		/question 500.0 def
		/at 919.921875 def
		/A 610.83984375 def
		/B 610.83984375 def
		/C 666.9921875 def
		/D 722.16796875 def
		/E 610.83984375 def
		/F 610.83984375 def
		/G 722.16796875 def
		/H 722.16796875 def
		/I 333.0078125 def
		/J 443.84765625 def
		/K 666.9921875 def
		/L 556.15234375 def
		/M 833.0078125 def
		/N 666.9921875 def
		/O 722.16796875 def
		/P 610.83984375 def
		/Q 722.16796875 def
		/R 610.83984375 def
		/S 500.0 def
		/T 556.15234375 def
		/U 722.16796875 def
		/V 610.83984375 def
		/W 833.0078125 def
		/X 610.83984375 def
		/Y 556.15234375 def
		/Z 556.15234375 def
		/bracketleft 389.16015625 def
		/backslash 277.83203125 def
		/bracketright 389.16015625 def
		/asciicircum 421.875 def
		/underscore 500.0 def
		/quoteleft 333.0078125 def
		/a 500.0 def
		/b 500.0 def
		/c 443.84765625 def
		/d 500.0 def
		/e 443.84765625 def
		/f 277.83203125 def
		/g 500.0 def
		/h 500.0 def
		/i 277.83203125 def
		/j 277.83203125 def
		/k 443.84765625 def
		/l 277.83203125 def
		/m 722.16796875 def
		/n 500.0 def
		/o 500.0 def
		/p 500.0 def
		/q 500.0 def
		/r 389.16015625 def
		/s 389.16015625 def
		/t 277.83203125 def
		/u 500.0 def
		/v 443.84765625 def
		/w 666.9921875 def
		/x 443.84765625 def
		/y 443.84765625 def
		/z 389.16015625 def
		/braceleft 399.90234375 def
		/bar 274.90234375 def
		/braceright 399.90234375 def
		/asciitilde 541.015625 def
		/exclamdown 389.16015625 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 166.9921875 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 213.8671875 def
		/quotedblleft 556.15234375 def
		/guillemotleft 500.0 def
		/guilsinglleft 333.0078125 def
		/guilsinglright 333.0078125 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 333.0078125 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 250.0 def
		/paragraph 522.94921875 def
		/bullet 350.09765625 def
		/quotesinglbase 333.0078125 def
		/quotedblbase 556.15234375 def
		/quotedblright 556.15234375 def
		/guillemotright 500.0 def
		/ellipsis 889.16015625 def
		/perthousand 1000.0 def
		/questiondown 500.0 def
		/grave 333.0078125 def
		/acute 333.0078125 def
		/circumflex 333.0078125 def
		/tilde 333.0078125 def
		/macron 500.0 def
		/breve 333.0078125 def
		/dotaccent 333.0078125 def
		/dieresis 333.0078125 def
		/ring 333.0078125 def
		/cedilla 333.0078125 def
		/hungarumlaut 777.83203125 def
		/ogonek 333.0078125 def
		/caron 333.0078125 def
		/emdash 333.0078125 def
		/AE 889.16015625 def
		/ordfeminine 275.87890625 def
		/Lslash 556.15234375 def
		/Oslash 722.16796875 def
		/OE 943.84765625 def
		/ordmasculine 310.05859375 def
		/ae 666.9921875 def
		/dotlessi 277.83203125 def
		/lslash 277.83203125 def
		/oslash 500.0 def
		/oe 666.9921875 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
157 161 moveto
139 161 lineto
155 220 166 265 172 296  curveto
179 327 186 367 194 417  curveto
211 521 221 581 224 599  curveto
231 628 241 650 256 666  curveto
263 673 272 677 284 677  curveto
293 677 301 673 307 666  curveto
314 659 317 649 317 637  curveto
317 624 314 607 308 586  curveto
294 541 268 468 229 365  curveto
210 317 199 290 197 284  curveto
191 266 178 225 157 161  curveto
closepath
125 83 moveto
139 83 150 79 160 69  curveto
170 59 175 47 175 33  curveto
175 20 170 8 160 -1  curveto
150 -11 139 -16 125 -16  curveto
111 -16 99 -11 89 -1  curveto
80 8 75 20 75 33  curveto
75 47 80 59 89 69  curveto
99 79 111 83 125 83  curveto
closepath
fill
		} def

	/quotedbl
		{
322 392 moveto
336 534 lineto
340 571 343 593 344 600  curveto
349 620 354 636 361 647  curveto
366 656 374 663 384 668  curveto
393 674 404 677 416 677  curveto
427 677 436 674 442 667  curveto
448 661 452 653 452 643  curveto
452 635 449 624 445 611  curveto
432 577 422 551 414 535  curveto
345 392 lineto
322 392 lineto
closepath
143 392 moveto
158 536 lineto
162 577 167 605 171 620  curveto
177 640 186 654 198 663  curveto
209 672 222 677 235 677  curveto
247 677 256 673 262 667  curveto
269 660 272 652 272 643  curveto
272 635 271 626 268 617  curveto
263 603 251 576 232 536  curveto
164 392 lineto
143 392 lineto
closepath
fill
		} def

	/numbersign
		{
109 -13 moveto
155 208 lineto
71 208 lineto
71 248 lineto
163 248 lineto
196 416 lineto
71 416 lineto
71 455 lineto
206 455 lineto
250 677 lineto
291 677 lineto
246 455 lineto
411 455 lineto
458 677 lineto
499 677 lineto
452 455 lineto
535 455 lineto
535 416 lineto
445 416 lineto
411 248 lineto
535 248 lineto
535 208 lineto
402 208 lineto
357 -13 lineto
317 -13 lineto
362 208 lineto
196 208 lineto
150 -13 lineto
109 -13 lineto
closepath
204 248 moveto
369 248 lineto
404 416 lineto
238 416 lineto
204 248 lineto
closepath
fill
		} def

	/dollar
		{
380 626 moveto
312 392 lineto
363 352 399 315 419 280  curveto
434 255 441 227 441 196  curveto
441 160 430 125 409 90  curveto
388 56 361 31 326 14  curveto
292 -1 248 -9 194 -8  curveto
179 -65 lineto
146 -65 lineto
164 -8 lineto
138 -3 116 2 98 10  curveto
81 18 62 30 42 46  curveto
82 184 lineto
102 184 lineto
98 163 96 146 96 132  curveto
96 107 103 84 117 64  curveto
131 45 150 30 175 22  curveto
260 321 lineto
216 355 186 386 168 414  curveto
151 442 143 471 143 503  curveto
143 552 161 591 197 620  curveto
233 650 273 665 315 665  curveto
326 665 340 664 358 662  curveto
370 700 lineto
401 700 lineto
388 657 lineto
411 651 429 644 442 636  curveto
455 628 471 617 488 601  curveto
456 483 lineto
436 483 lineto
437 498 438 510 438 520  curveto
438 547 432 571 419 592  curveto
411 605 399 616 380 626  curveto
closepath
351 635 moveto
336 638 325 639 317 639  curveto
289 639 265 628 245 607  curveto
224 586 214 560 214 528  curveto
214 510 219 492 229 475  curveto
240 457 259 436 287 411  curveto
351 635 lineto
closepath
202 18 moveto
212 17 219 16 224 16  curveto
246 16 270 22 295 35  curveto
320 47 339 65 352 87  curveto
366 110 373 134 373 160  curveto
373 181 366 203 354 224  curveto
341 245 318 270 285 299  curveto
202 18 lineto
closepath
fill
		} def

	/percent
		{
816 677 moveto
116 -26 lineto
70 -26 lineto
770 677 lineto
816 677 lineto
closepath
264 677 moveto
294 677 321 665 343 640  curveto
366 616 377 584 377 544  curveto
377 483 357 431 317 388  curveto
278 344 236 322 191 322  curveto
158 322 130 335 107 360  curveto
85 385 73 417 73 456  curveto
73 514 94 566 135 610  curveto
175 655 218 677 264 677  curveto
closepath
267 656 moveto
251 656 236 649 223 637  curveto
200 615 179 580 162 532  curveto
145 484 136 440 136 399  curveto
136 381 141 367 151 357  curveto
161 346 172 341 186 341  curveto
200 341 212 346 223 355  curveto
246 377 267 412 286 460  curveto
306 508 315 553 315 596  curveto
315 614 311 629 301 640  curveto
291 650 280 656 267 656  curveto
closepath
699 326 moveto
730 326 757 314 780 289  curveto
803 265 814 232 814 191  curveto
814 154 805 118 786 83  curveto
768 49 743 21 714 2  curveto
684 -17 655 -26 628 -26  curveto
595 -26 568 -14 545 9  curveto
523 33 511 64 511 102  curveto
511 162 531 214 572 259  curveto
613 304 655 326 699 326  curveto
closepath
705 306 moveto
688 306 673 300 661 289  curveto
639 268 619 233 600 184  curveto
582 135 573 91 573 51  curveto
573 33 578 19 587 8  curveto
597 -1 608 -7 621 -7  curveto
637 -7 650 -1 661 8  curveto
684 30 705 65 724 114  curveto
742 162 751 206 751 244  curveto
751 263 747 279 738 290  curveto
728 301 717 306 705 306  curveto
closepath
fill
		} def

	/ampersand
		{
525 347 moveto
723 347 lineto
723 328 lineto
694 324 671 316 653 305  curveto
635 293 614 270 590 234  curveto
558 187 531 150 510 123  curveto
548 57 590 24 635 24  curveto
663 24 688 36 710 60  curveto
732 60 lineto
713 33 692 14 670 2  curveto
649 -9 623 -15 593 -15  curveto
562 -15 534 -9 512 2  curveto
489 13 466 33 444 60  curveto
408 33 373 14 341 2  curveto
308 -9 272 -15 232 -15  curveto
173 -15 128 0 95 30  curveto
63 61 47 101 47 150  curveto
47 208 72 259 121 304  curveto
153 332 219 363 318 397  curveto
316 409 315 421 314 432  curveto
313 443 313 453 313 462  curveto
313 528 330 581 365 619  curveto
400 658 442 677 491 677  curveto
524 677 551 668 570 649  curveto
589 631 599 608 599 580  curveto
599 545 585 512 557 480  curveto
529 448 479 420 407 397  curveto
430 300 459 219 493 153  curveto
544 214 569 263 569 299  curveto
569 307 566 314 560 319  curveto
553 324 542 327 525 328  curveto
525 347 lineto
closepath
400 428 moveto
450 449 483 470 500 489  curveto
524 515 536 545 536 576  curveto
536 597 530 613 519 625  curveto
508 638 493 644 475 644  curveto
451 644 431 633 415 613  curveto
399 592 391 558 391 511  curveto
391 500 391 488 393 474  curveto
395 460 397 445 400 428  curveto
closepath
323 366 moveto
260 343 215 314 187 280  curveto
159 246 146 211 146 174  curveto
146 133 159 99 185 73  curveto
211 46 245 32 287 32  curveto
310 32 331 36 349 43  curveto
368 50 393 65 425 87  curveto
404 120 384 162 365 215  curveto
346 267 332 318 323 366  curveto
closepath
fill
		} def

	/quoteright
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/parenleft
		{
187 -206 moveto
171 -213 lineto
132 -139 104 -74 87 -18  curveto
74 26 68 70 68 115  curveto
68 220 92 314 141 397  curveto
200 499 297 597 430 694  curveto
442 677 lineto
382 632 333 582 294 527  curveto
247 458 208 375 178 277  curveto
147 179 132 90 132 10  curveto
132 -50 151 -122 187 -206  curveto
closepath
fill
		} def

	/parenright
		{
145 685 moveto
162 694 lineto
200 620 228 555 245 499  curveto
258 454 265 410 265 365  curveto
265 260 240 166 192 83  curveto
132 -18 35 -117 -97 -213  curveto
-108 -198 lineto
-48 -153 0 -103 38 -48  curveto
86 20 124 103 155 201  curveto
185 299 200 388 200 468  curveto
200 529 182 601 145 685  curveto
closepath
fill
		} def

	/asterisk
		{
312 509 moveto
310 532 306 554 298 576  curveto
287 608 281 630 281 642  curveto
281 659 285 672 293 681  curveto
301 689 311 694 323 694  curveto
333 694 342 689 349 681  curveto
357 672 360 659 360 643  curveto
360 628 356 608 347 582  curveto
339 556 333 531 332 509  curveto
349 521 366 534 380 551  curveto
402 576 418 592 429 599  curveto
440 605 451 608 462 608  curveto
473 608 482 604 489 597  curveto
496 590 500 581 500 571  curveto
500 559 495 548 484 539  curveto
473 529 446 520 403 510  curveto
378 505 357 498 341 491  curveto
358 482 378 476 403 471  curveto
442 464 468 455 480 444  curveto
492 434 499 422 499 409  curveto
499 399 495 391 488 384  curveto
480 377 472 373 462 373  curveto
452 373 441 376 429 383  curveto
418 390 402 405 381 429  curveto
368 445 351 460 332 474  curveto
332 456 336 435 343 414  curveto
354 375 360 349 360 335  curveto
360 322 356 311 349 302  curveto
341 293 333 289 324 289  curveto
312 289 301 293 291 303  curveto
284 310 281 320 281 335  curveto
281 351 284 370 292 392  curveto
299 414 304 429 306 437  curveto
308 446 310 458 312 474  curveto
292 461 276 447 261 432  curveto
237 405 220 388 208 381  curveto
199 376 190 373 181 373  curveto
170 373 161 377 153 384  curveto
145 392 141 400 141 409  curveto
141 417 144 426 151 435  curveto
158 444 168 451 181 457  curveto
190 461 210 466 241 473  curveto
261 477 281 483 300 491  curveto
283 500 262 507 237 512  curveto
197 520 173 528 163 535  curveto
148 545 141 558 141 574  curveto
141 583 145 591 152 598  curveto
159 605 168 609 178 609  curveto
188 609 200 605 212 599  curveto
224 592 239 578 257 557  curveto
275 537 293 521 312 509  curveto
closepath
fill
		} def

	/plus
		{
335 68 moveto
335 312 lineto
92 312 lineto
92 352 lineto
335 352 lineto
335 595 lineto
375 595 lineto
375 352 lineto
619 352 lineto
619 312 lineto
375 312 lineto
375 68 lineto
335 68 lineto
closepath
fill
		} def

	/comma
		{
-10 -109 moveto
14 -98 34 -84 49 -67  curveto
61 -54 66 -42 66 -30  curveto
66 -24 65 -19 63 -14  curveto
62 -11 58 -6 50 1  curveto
42 9 38 14 37 17  curveto
34 23 33 29 33 36  curveto
33 50 38 62 48 72  curveto
57 82 69 87 82 87  curveto
95 87 107 82 117 71  curveto
127 61 132 47 132 31  curveto
132 2 121 -27 98 -56  curveto
75 -86 42 -109 0 -125  curveto
-10 -109 lineto
closepath
fill
		} def

	/hyphen
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/period
		{
83 87 moveto
97 87 108 82 118 73  curveto
128 63 132 51 132 38  curveto
132 24 127 12 118 3  curveto
108 -6 96 -11 83 -11  curveto
69 -11 57 -6 48 3  curveto
38 12 33 24 33 38  curveto
33 51 38 63 48 73  curveto
57 82 69 87 83 87  curveto
closepath
fill
		} def

	/slash
		{
381 694 moveto
9 -15 lineto
-33 -15 lineto
340 694 lineto
381 694 lineto
closepath
fill
		} def

	/zero
		{
345 675 moveto
387 675 422 658 450 623  curveto
479 588 493 533 493 458  curveto
493 394 483 328 461 261  curveto
440 194 410 136 372 86  curveto
341 48 309 20 276 2  curveto
256 -6 234 -11 208 -11  curveto
166 -11 130 5 102 40  curveto
73 75 59 130 59 206  curveto
59 280 73 355 102 430  curveto
136 518 178 585 230 630  curveto
265 660 303 675 345 675  curveto
closepath
346 650 moveto
327 650 308 642 288 628  curveto
269 613 249 582 228 535  curveto
208 488 188 428 169 354  curveto
145 257 132 175 132 107  curveto
132 73 140 48 154 31  curveto
169 14 187 6 208 6  curveto
227 6 244 12 258 25  curveto
296 61 328 121 354 206  curveto
398 345 419 458 419 544  curveto
419 581 412 607 397 624  curveto
383 641 366 650 346 650  curveto
closepath
fill
		} def

	/one
		{
417 675 moveto
260 128 lineto
251 96 246 72 246 58  curveto
246 46 250 37 259 31  curveto
267 24 286 20 317 18  curveto
312 0 lineto
61 0 lineto
67 18 lineto
94 18 112 20 120 24  curveto
134 30 144 38 151 47  curveto
162 62 173 89 184 128  curveto
297 521 lineto
304 545 307 558 308 562  curveto
309 569 310 575 310 581  curveto
310 592 306 601 300 608  curveto
294 614 286 618 275 618  curveto
266 618 253 616 235 612  curveto
229 629 lineto
394 675 lineto
417 675 lineto
closepath
fill
		} def

	/two
		{
345 0 moveto
15 0 lineto
15 18 lineto
183 165 294 280 348 364  curveto
373 402 386 443 386 486  curveto
386 520 375 547 354 569  curveto
334 590 307 601 273 601  curveto
228 601 190 579 160 535  curveto
143 542 lineto
160 584 184 617 216 640  curveto
248 664 282 675 319 675  curveto
361 675 397 661 425 632  curveto
454 603 468 568 468 527  curveto
468 499 463 472 453 448  curveto
437 410 409 367 367 320  curveto
303 248 218 164 111 70  curveto
277 70 lineto
304 70 326 76 343 87  curveto
361 98 373 113 380 131  curveto
400 131 lineto
345 0 lineto
closepath
fill
		} def

	/three
		{
152 361 moveto
152 375 lineto
231 388 290 411 329 446  curveto
357 471 371 500 371 534  curveto
371 560 362 581 346 598  curveto
330 615 310 623 287 623  curveto
251 623 218 600 190 555  curveto
172 561 lineto
189 598 211 627 237 646  curveto
264 666 293 675 324 675  curveto
363 675 394 664 417 641  curveto
441 618 453 589 453 554  curveto
453 524 442 495 420 467  curveto
397 440 359 415 305 393  curveto
339 379 364 359 381 333  curveto
399 307 407 275 407 238  curveto
407 198 396 157 372 116  curveto
349 75 316 44 276 21  curveto
235 0 192 -11 147 -11  curveto
106 -11 75 -4 54 9  curveto
40 19 33 30 33 43  curveto
33 55 37 65 45 73  curveto
53 81 64 85 76 85  curveto
84 85 93 84 101 81  curveto
106 79 119 73 139 62  curveto
160 50 176 43 187 39  curveto
198 35 210 33 222 33  curveto
251 33 276 50 295 84  curveto
314 118 323 154 323 193  curveto
323 224 317 252 304 276  curveto
291 301 271 321 243 336  curveto
215 351 185 359 152 361  curveto
closepath
fill
		} def

	/four
		{
486 662 moveto
360 226 lineto
439 226 lineto
421 166 lineto
341 166 lineto
290 -11 lineto
218 -11 lineto
270 166 lineto
31 166 lineto
51 234 lineto
449 662 lineto
486 662 lineto
closepath
378 536 moveto
93 226 lineto
289 226 lineto
378 536 lineto
closepath
fill
		} def

	/five
		{
257 662 moveto
479 662 lineto
456 581 lineto
257 581 lineto
221 500 lineto
273 491 314 475 344 450  curveto
389 412 412 359 412 291  curveto
412 245 403 204 386 168  curveto
370 131 349 100 325 76  curveto
301 51 275 31 247 17  curveto
209 -1 171 -11 133 -11  curveto
100 -11 74 -4 55 9  curveto
42 19 35 31 35 46  curveto
35 58 39 68 48 76  curveto
56 85 67 89 79 89  curveto
96 89 116 80 137 63  curveto
150 52 160 45 169 42  curveto
176 39 184 37 193 37  curveto
230 37 264 55 295 92  curveto
326 129 341 176 341 235  curveto
341 276 333 310 317 339  curveto
300 368 279 388 254 399  curveto
229 411 195 419 152 424  curveto
257 662 lineto
closepath
fill
		} def

	/six
		{
525 675 moveto
525 656 lineto
469 643 415 616 363 574  curveto
310 532 264 479 225 413  curveto
260 428 289 436 311 436  curveto
352 436 388 421 417 391  curveto
446 361 460 320 460 270  curveto
460 192 435 125 385 70  curveto
335 15 281 -11 223 -11  curveto
170 -11 130 7 103 46  curveto
76 85 62 130 62 181  curveto
62 248 78 314 109 379  curveto
140 444 182 499 235 546  curveto
288 592 342 627 399 649  curveto
433 662 475 671 525 675  curveto
closepath
202 372 moveto
155 273 132 189 132 122  curveto
132 87 141 60 158 40  curveto
176 20 196 10 219 10  curveto
256 10 291 37 323 92  curveto
356 146 372 209 372 281  curveto
372 320 363 349 344 370  curveto
325 391 302 401 275 401  curveto
264 401 253 399 243 396  curveto
233 392 219 384 202 372  curveto
closepath
fill
		} def

	/seven
		{
193 662 moveto
523 662 lineto
523 645 lineto
152 -11 lineto
113 6 lineto
437 584 lineto
280 584 lineto
237 584 207 580 192 573  curveto
176 565 158 546 137 517  curveto
117 517 lineto
193 662 lineto
closepath
fill
		} def

	/eight
		{
337 370 moveto
368 336 391 305 406 275  curveto
420 245 427 216 427 186  curveto
427 133 407 87 367 47  curveto
326 8 277 -11 217 -11  curveto
164 -11 121 4 88 36  curveto
54 68 38 106 38 149  curveto
38 186 51 222 78 257  curveto
106 293 157 327 232 360  curveto
203 395 184 425 174 448  curveto
163 471 158 494 158 517  curveto
158 560 174 597 207 628  curveto
239 660 280 675 329 675  curveto
376 675 414 662 444 635  curveto
473 608 488 576 488 540  curveto
488 504 476 472 452 442  curveto
428 413 390 389 337 370  curveto
closepath
318 391 moveto
353 403 380 422 400 450  curveto
419 477 429 508 429 544  curveto
429 577 419 603 401 622  curveto
382 641 357 651 327 651  curveto
298 651 275 642 257 624  curveto
239 605 230 582 230 553  curveto
230 531 235 511 244 492  curveto
258 465 282 431 318 391  curveto
closepath
250 340 moveto
202 320 165 290 140 252  curveto
115 214 103 173 103 129  curveto
103 93 114 65 136 43  curveto
158 22 187 11 223 11  curveto
260 11 291 24 316 50  curveto
342 76 354 107 354 143  curveto
354 170 347 199 332 229  curveto
317 259 290 296 250 340  curveto
closepath
fill
		} def

	/nine
		{
28 -11 moveto
28 3 lineto
62 11 91 21 116 35  curveto
160 59 199 89 234 124  curveto
269 159 300 201 328 248  curveto
308 238 292 231 281 229  curveto
270 226 258 224 244 224  curveto
195 224 157 241 131 274  curveto
105 308 92 347 92 392  curveto
92 469 118 536 168 592  curveto
219 647 273 675 330 675  curveto
381 675 421 656 449 617  curveto
476 578 490 533 490 480  curveto
490 414 475 349 444 285  curveto
414 220 372 165 320 118  curveto
267 72 212 37 155 15  curveto
121 1 78 -7 28 -11  curveto
closepath
352 288 moveto
398 381 421 464 421 538  curveto
421 573 412 601 395 620  curveto
377 640 357 649 334 649  curveto
296 649 260 623 229 569  curveto
197 515 181 451 181 377  curveto
181 338 190 309 208 289  curveto
226 269 249 259 276 259  curveto
289 259 300 261 311 264  curveto
321 268 335 276 352 288  curveto
closepath
fill
		} def

	/colon
		{
212 442 moveto
226 442 237 437 247 427  curveto
257 418 262 406 262 393  curveto
262 379 257 367 247 357  curveto
237 348 226 343 212 343  curveto
198 343 187 348 177 357  curveto
167 367 162 379 162 393  curveto
162 406 167 418 177 427  curveto
187 437 198 442 212 442  curveto
closepath
108 88 moveto
122 88 134 84 143 74  curveto
152 64 157 53 157 39  curveto
157 26 152 14 143 5  curveto
133 -4 122 -9 108 -9  curveto
95 -9 83 -4 73 5  curveto
64 14 59 26 59 39  curveto
59 53 64 64 73 74  curveto
83 84 95 88 108 88  curveto
closepath
fill
		} def

	/semicolon
		{
213 441 moveto
227 441 239 436 249 427  curveto
258 417 263 405 263 391  curveto
263 377 258 366 249 356  curveto
239 346 227 341 213 341  curveto
200 341 188 346 178 356  curveto
168 366 164 377 164 391  curveto
164 405 168 417 178 427  curveto
188 436 199 441 213 441  curveto
closepath
17 -108 moveto
51 -88 72 -73 81 -62  curveto
89 -51 93 -41 93 -30  curveto
93 -24 92 -18 89 -13  curveto
88 -10 84 -5 77 3  curveto
70 11 65 17 64 21  curveto
61 26 60 32 60 39  curveto
60 52 65 64 75 74  curveto
84 84 96 89 108 89  curveto
122 89 134 84 144 73  curveto
154 62 159 48 159 31  curveto
159 9 153 -11 141 -32  curveto
129 -53 112 -72 90 -89  curveto
83 -95 61 -107 25 -125  curveto
17 -108 lineto
closepath
fill
		} def

	/less
		{
73 344 moveto
598 572 lineto
598 529 lineto
146 333 lineto
598 135 lineto
598 91 lineto
73 320 lineto
73 344 lineto
closepath
fill
		} def

	/equal
		{
97 431 moveto
624 431 lineto
624 391 lineto
97 391 lineto
97 431 lineto
closepath
97 271 moveto
624 271 lineto
624 231 lineto
97 231 lineto
97 271 lineto
closepath
fill
		} def

	/greater
		{
598 318 moveto
73 91 lineto
73 133 lineto
525 329 lineto
73 527 lineto
73 572 lineto
598 342 lineto
598 318 lineto
closepath
fill
		} def

	/question
		{
175 162 moveto
157 162 lineto
161 203 171 239 187 269  curveto
202 299 232 338 276 385  curveto
321 432 350 471 365 500  curveto
375 520 380 541 380 563  curveto
380 589 371 610 353 628  curveto
334 646 311 655 282 655  curveto
255 655 232 649 215 637  curveto
205 631 200 623 200 613  curveto
200 607 203 598 208 586  curveto
214 575 216 566 216 558  curveto
216 547 212 538 205 530  curveto
197 523 187 519 176 519  curveto
164 519 155 523 147 531  curveto
139 539 135 550 135 563  curveto
135 592 149 618 177 642  curveto
204 665 242 677 291 677  curveto
341 677 381 663 412 635  curveto
443 606 458 574 458 538  curveto
458 509 451 484 437 462  curveto
418 434 382 402 329 366  curveto
276 330 240 298 220 270  curveto
200 242 185 206 175 162  curveto
closepath
146 83 moveto
160 83 171 79 181 69  curveto
191 59 196 48 196 34  curveto
196 20 191 8 181 0  curveto
171 -10 160 -15 146 -15  curveto
132 -15 121 -10 111 0  curveto
101 8 96 20 96 34  curveto
96 48 101 59 111 69  curveto
120 79 132 83 146 83  curveto
closepath
fill
		} def

	/at
		{
687 467 moveto
630 272 lineto
609 200 596 153 591 134  curveto
587 114 584 99 584 87  curveto
584 76 588 68 595 61  curveto
602 53 611 50 621 50  curveto
645 50 673 62 707 85  curveto
740 109 769 148 792 201  curveto
816 255 828 310 828 368  curveto
828 424 815 475 788 522  curveto
761 570 723 606 674 631  curveto
625 656 571 669 512 669  curveto
437 669 367 649 302 609  curveto
238 569 187 512 149 437  curveto
112 362 93 284 93 204  curveto
93 129 109 61 142 0  curveto
175 -61 222 -107 282 -138  curveto
342 -170 406 -186 475 -186  curveto
561 -186 638 -163 707 -117  curveto
776 -71 830 -4 868 83  curveto
896 83 lineto
867 -5 813 -77 736 -132  curveto
659 -188 571 -215 473 -215  curveto
395 -215 323 -197 257 -160  curveto
190 -124 139 -72 102 -5  curveto
65 62 47 136 47 216  curveto
47 302 67 382 107 457  curveto
148 531 204 589 277 631  curveto
350 673 427 694 509 694  curveto
576 694 637 680 691 652  curveto
745 624 787 584 815 530  curveto
843 476 857 420 857 359  curveto
857 300 844 241 818 182  curveto
791 124 757 81 716 55  curveto
675 28 632 15 588 15  curveto
563 15 545 21 532 32  curveto
519 44 513 60 513 82  curveto
513 100 516 124 522 153  curveto
474 95 435 57 406 40  curveto
377 23 352 14 330 14  curveto
306 14 286 24 268 45  curveto
250 66 241 93 241 128  curveto
241 175 257 228 287 287  curveto
318 345 359 393 410 430  curveto
447 457 481 470 510 470  curveto
532 470 550 465 565 453  curveto
579 442 589 425 594 403  curveto
610 457 lineto
687 467 lineto
closepath
516 447 moveto
491 447 466 434 441 409  curveto
405 371 373 320 347 256  curveto
328 209 318 171 318 143  curveto
318 122 324 105 336 93  curveto
347 80 360 73 375 73  curveto
393 73 413 80 434 95  curveto
455 109 477 131 500 161  curveto
522 191 539 221 549 250  curveto
568 302 577 344 577 377  curveto
577 398 571 416 559 428  curveto
547 441 533 447 516 447  curveto
closepath
fill
		} def

	/A
		{
515 677 moveto
464 126 lineto
462 100 460 83 460 75  curveto
460 62 463 52 468 45  curveto
474 36 482 29 493 24  curveto
503 20 521 18 546 18  curveto
541 0 lineto
280 0 lineto
286 18 lineto
297 18 lineto
318 18 335 22 349 31  curveto
358 37 365 48 371 62  curveto
374 72 378 96 381 133  curveto
389 217 lineto
199 217 lineto
132 126 lineto
117 105 107 91 103 82  curveto
99 73 97 64 97 57  curveto
97 46 101 37 110 30  curveto
118 22 132 18 152 18  curveto
146 0 lineto
-48 0 lineto
-43 18 lineto
-19 19 1 27 20 42  curveto
38 57 66 89 102 139  curveto
498 677 lineto
515 677 lineto
closepath
418 514 moveto
226 253 lineto
393 253 lineto
418 514 lineto
closepath
fill
		} def

	/B
		{
147 644 moveto
154 662 lineto
391 662 lineto
430 662 466 655 497 643  curveto
528 631 551 613 567 591  curveto
582 569 590 546 590 521  curveto
590 483 576 448 549 418  curveto
521 387 476 364 414 350  curveto
454 335 484 315 502 290  curveto
521 265 531 238 531 208  curveto
531 176 522 144 505 114  curveto
488 84 467 61 440 44  curveto
414 28 382 16 344 8  curveto
318 2 276 0 219 0  curveto
-22 0 lineto
-16 18 lineto
8 18 26 21 35 25  curveto
48 30 57 38 62 47  curveto
70 59 81 88 94 132  curveto
212 533 lineto
222 567 228 590 228 604  curveto
228 616 223 626 214 633  curveto
205 640 188 643 163 643  curveto
158 643 152 643 147 644  curveto
closepath
247 369 moveto
268 368 283 368 292 368  curveto
360 368 411 382 444 412  curveto
477 441 493 478 493 522  curveto
493 556 483 582 463 601  curveto
443 620 410 629 366 629  curveto
354 629 340 627 321 623  curveto
247 369 lineto
closepath
150 42 moveto
186 38 213 36 233 36  curveto
284 36 329 51 368 82  curveto
407 112 427 154 427 206  curveto
427 246 415 277 390 300  curveto
366 322 327 333 273 333  curveto
263 333 250 333 235 332  curveto
150 42 lineto
closepath
fill
		} def

	/C
		{
703 677 moveto
654 462 lineto
636 462 lineto
634 516 lineto
633 536 629 553 623 568  curveto
617 584 608 597 597 608  curveto
585 619 570 628 552 635  curveto
534 641 514 644 493 644  curveto
434 644 383 628 340 596  curveto
284 555 241 498 209 424  curveto
183 363 170 301 170 238  curveto
170 174 189 122 226 84  curveto
264 46 312 27 372 27  curveto
417 27 458 37 493 57  curveto
528 77 561 108 591 150  curveto
614 150 lineto
578 93 539 52 495 25  curveto
451 -1 399 -15 338 -15  curveto
284 -15 236 -3 195 18  curveto
153 41 121 73 100 114  curveto
78 155 67 199 67 246  curveto
67 318 86 389 125 457  curveto
164 525 217 579 284 618  curveto
352 657 420 677 489 677  curveto
521 677 557 669 597 654  curveto
615 647 627 644 635 644  curveto
643 644 650 646 656 649  curveto
662 652 671 661 685 677  curveto
703 677 lineto
closepath
fill
		} def

	/D
		{
146 644 moveto
152 662 lineto
363 662 lineto
453 662 519 651 562 631  curveto
605 610 640 578 666 534  curveto
691 490 704 443 704 392  curveto
704 349 697 307 682 266  curveto
667 225 650 192 632 168  curveto
613 143 584 116 545 86  curveto
507 57 465 35 419 21  curveto
374 7 318 0 250 0  curveto
-29 0 lineto
-23 18 lineto
2 18 19 21 28 24  curveto
41 30 50 37 57 47  curveto
66 61 77 88 88 129  curveto
206 530 lineto
215 561 219 586 219 604  curveto
219 617 215 626 207 633  curveto
198 640 181 644 157 644  curveto
146 644 lineto
closepath
319 625 moveto
176 129 lineto
165 92 160 69 160 61  curveto
160 55 161 50 165 45  curveto
168 41 173 37 179 36  curveto
187 33 201 31 220 31  curveto
271 31 318 37 362 47  curveto
406 58 442 73 470 94  curveto
509 125 541 166 565 219  curveto
589 272 601 333 601 400  curveto
601 477 582 534 546 571  curveto
509 608 456 627 386 627  curveto
369 627 347 626 319 625  curveto
closepath
fill
		} def

	/E
		{
323 626 moveto
248 364 lineto
310 364 lineto
354 364 386 371 406 385  curveto
426 398 443 423 457 459  curveto
475 459 lineto
407 219 lineto
388 219 lineto
394 239 396 257 396 271  curveto
396 285 394 296 388 305  curveto
382 313 374 319 364 323  curveto
355 328 334 330 302 330  curveto
239 330 lineto
175 110 lineto
169 89 166 73 166 62  curveto
166 54 170 46 178 40  curveto
183 35 197 33 219 33  curveto
278 33 lineto
341 33 392 44 430 66  curveto
469 89 503 128 533 184  curveto
551 184 lineto
489 0 lineto
-22 0 lineto
-16 18 lineto
9 18 26 21 35 24  curveto
48 30 57 38 63 47  curveto
72 60 82 88 94 131  curveto
210 530 lineto
220 562 224 587 224 604  curveto
224 616 220 626 211 633  curveto
203 640 186 644 161 644  curveto
150 644 lineto
156 662 lineto
632 662 lineto
591 502 lineto
573 502 lineto
575 517 576 529 576 540  curveto
576 557 572 571 563 583  curveto
552 598 536 609 515 617  curveto
500 623 464 626 407 626  curveto
323 626 lineto
closepath
fill
		} def

	/F
		{
325 626 moveto
247 364 lineto
333 364 lineto
373 364 402 370 421 382  curveto
441 394 460 420 481 459  curveto
500 459 lineto
431 218 lineto
411 218 lineto
416 238 418 254 418 267  curveto
418 286 412 302 399 313  curveto
385 324 361 329 325 329  curveto
237 329 lineto
179 129 lineto
169 94 164 70 164 59  curveto
164 47 168 37 177 31  curveto
186 24 208 20 243 18  curveto
237 0 lineto
-24 0 lineto
-18 18 lineto
7 18 24 21 32 24  curveto
45 30 55 37 61 47  curveto
70 60 80 88 92 129  curveto
209 528 lineto
218 561 223 586 223 604  curveto
223 612 221 620 217 626  curveto
213 632 206 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
668 662 lineto
619 494 lineto
601 494 lineto
604 514 606 531 606 544  curveto
606 565 600 582 588 595  curveto
576 607 561 616 542 622  curveto
529 625 500 626 455 626  curveto
325 626 lineto
closepath
fill
		} def

	/G
		{
719 677 moveto
670 468 lineto
651 468 lineto
654 493 656 511 656 522  curveto
656 554 642 583 614 607  curveto
585 632 547 644 497 644  curveto
396 644 313 597 249 501  curveto
198 426 172 342 172 249  curveto
172 187 188 134 220 89  curveto
251 44 300 21 366 21  curveto
382 21 397 23 412 26  curveto
426 29 448 35 478 45  curveto
526 216 lineto
533 239 536 258 536 272  curveto
536 284 532 293 523 299  curveto
510 308 488 313 457 313  curveto
443 313 lineto
449 332 lineto
724 332 lineto
719 313 lineto
694 313 676 310 665 304  curveto
653 299 643 289 635 276  curveto
630 267 621 242 608 199  curveto
560 32 lineto
515 13 479 0 452 -6  curveto
424 -12 396 -15 365 -15  curveto
296 -15 239 -2 196 23  curveto
152 49 121 84 100 127  curveto
79 170 69 213 69 256  curveto
69 313 81 368 105 419  curveto
129 471 159 514 195 550  curveto
231 586 270 614 312 634  curveto
371 663 432 677 496 677  curveto
543 677 586 669 624 653  curveto
639 647 651 644 658 644  curveto
666 644 673 646 678 650  curveto
684 653 692 662 701 677  curveto
719 677 lineto
closepath
fill
		} def

	/H
		{
246 366 moveto
552 366 lineto
600 530 lineto
609 562 614 586 614 604  curveto
614 612 612 620 608 626  curveto
604 632 597 636 589 639  curveto
580 642 564 644 539 644  curveto
544 662 lineto
811 662 lineto
805 644 lineto
782 644 765 642 754 637  curveto
739 630 727 621 720 610  curveto
709 595 698 568 687 530  curveto
570 130 lineto
561 97 556 73 556 59  curveto
556 46 560 37 569 31  curveto
577 24 598 20 630 18  curveto
625 0 lineto
367 0 lineto
374 18 lineto
399 18 416 21 425 24  curveto
438 30 447 38 453 47  curveto
462 60 472 87 484 130  curveto
544 333 lineto
237 333 lineto
177 130 lineto
167 97 163 74 163 59  curveto
163 46 167 37 175 31  curveto
184 24 204 20 237 18  curveto
233 0 lineto
-26 0 lineto
-20 18 lineto
5 18 22 21 31 24  curveto
44 30 53 38 60 47  curveto
68 60 78 88 91 130  curveto
208 530 lineto
217 562 222 587 222 604  curveto
222 612 220 620 216 626  curveto
212 632 206 636 197 639  curveto
188 642 172 644 146 644  curveto
152 662 lineto
414 662 lineto
408 644 lineto
386 644 370 642 360 637  curveto
345 630 333 622 326 611  curveto
316 597 306 569 294 530  curveto
246 366 lineto
closepath
fill
		} def

	/I
		{
246 18 moveto
241 0 lineto
-31 0 lineto
-24 18 lineto
2 18 21 21 29 24  curveto
44 30 54 38 61 47  curveto
72 63 83 90 94 129  curveto
209 529 lineto
219 562 224 587 224 604  curveto
224 612 222 620 218 625  curveto
214 631 207 636 198 639  curveto
190 642 173 644 148 644  curveto
154 662 lineto
410 662 lineto
404 644 lineto
383 644 368 642 358 637  curveto
343 630 332 621 324 609  curveto
317 597 307 570 295 529  curveto
180 129 lineto
170 93 165 69 165 59  curveto
165 51 167 44 171 38  curveto
175 33 181 28 190 25  curveto
199 22 218 20 246 18  curveto
closepath
fill
		} def

	/J
		{
286 662 moveto
546 662 lineto
541 644 lineto
507 643 484 637 470 625  curveto
457 613 442 582 427 530  curveto
343 238 lineto
327 183 311 141 295 112  curveto
273 73 244 42 207 19  curveto
170 -3 128 -15 83 -15  curveto
45 -15 16 -6 -3 10  curveto
-24 28 -34 49 -34 74  curveto
-34 93 -28 110 -15 123  curveto
-3 136 10 142 27 142  curveto
42 142 54 138 63 129  curveto
73 120 77 109 77 97  curveto
77 86 73 76 64 66  curveto
54 54 48 46 48 41  curveto
48 34 51 28 58 22  curveto
64 17 72 14 83 14  curveto
97 14 113 18 129 25  curveto
145 32 160 43 175 58  curveto
189 72 201 90 212 110  curveto
222 131 233 159 244 194  curveto
268 279 lineto
341 530 lineto
352 567 357 590 357 599  curveto
357 611 352 621 342 629  curveto
333 637 312 642 280 644  curveto
286 662 lineto
closepath
fill
		} def

	/K
		{
319 376 moveto
483 123 lineto
512 78 536 49 556 36  curveto
575 24 600 18 631 18  curveto
626 0 lineto
344 0 lineto
348 18 lineto
371 20 386 25 396 34  curveto
405 42 410 52 410 62  curveto
410 72 408 82 405 91  curveto
402 97 393 113 376 139  curveto
242 349 lineto
177 130 lineto
166 95 161 71 161 59  curveto
161 47 166 37 175 31  curveto
184 24 206 20 242 18  curveto
234 0 lineto
-26 0 lineto
-20 18 lineto
4 18 21 21 30 24  curveto
43 30 53 38 59 47  curveto
68 60 78 88 90 130  curveto
207 530 lineto
216 560 220 585 220 604  curveto
220 617 216 626 208 633  curveto
199 640 183 644 159 644  curveto
149 644 lineto
155 662 lineto
404 662 lineto
399 644 lineto
378 644 363 642 353 637  curveto
339 630 329 621 322 610  curveto
316 600 306 573 293 530  curveto
242 360 lineto
478 537 lineto
509 561 529 579 539 593  curveto
545 601 548 609 548 616  curveto
548 622 545 627 539 633  curveto
533 638 524 642 511 644  curveto
516 662 lineto
728 662 lineto
724 644 lineto
701 640 681 635 665 628  curveto
649 622 633 613 617 602  curveto
612 599 580 575 521 530  curveto
319 376 lineto
closepath
fill
		} def

	/L
		{
458 0 moveto
-32 0 lineto
-25 18 lineto
0 18 18 20 26 24  curveto
40 30 50 37 57 47  curveto
67 62 77 89 89 128  curveto
206 531 lineto
215 564 220 588 220 604  curveto
220 616 216 626 207 633  curveto
198 640 181 643 156 643  curveto
151 643 146 643 143 644  curveto
149 662 lineto
419 662 lineto
415 644 lineto
385 644 363 641 351 635  curveto
338 629 327 619 319 606  curveto
313 597 303 570 290 524  curveto
175 128 lineto
166 98 162 77 162 65  curveto
162 58 166 50 175 43  curveto
181 38 193 36 213 36  curveto
277 36 lineto
323 36 360 42 388 53  curveto
408 62 426 75 443 93  curveto
452 103 469 127 492 166  curveto
504 187 lineto
522 187 lineto
458 0 lineto
closepath
fill
		} def

	/M
		{
316 662 moveto
377 128 lineto
762 662 lineto
923 662 lineto
923 644 lineto
888 641 868 639 861 637  curveto
851 632 841 624 832 611  curveto
823 599 813 574 803 538  curveto
680 118 lineto
673 94 669 75 669 61  curveto
669 48 674 38 683 32  curveto
695 22 715 18 741 18  curveto
753 18 lineto
749 0 lineto
470 0 lineto
475 18 lineto
488 18 lineto
513 18 531 21 544 28  curveto
555 34 564 43 572 58  curveto
579 72 591 104 605 154  curveto
714 538 lineto
328 0 lineto
309 0 lineto
247 538 lineto
128 128 lineto
118 94 113 70 113 58  curveto
113 46 118 37 126 31  curveto
135 24 157 20 190 18  curveto
185 0 lineto
-32 0 lineto
-27 18 lineto
-14 18 lineto
18 18 41 26 55 42  curveto
66 54 76 79 88 118  curveto
232 612 lineto
221 623 211 630 201 634  curveto
191 638 173 641 147 644  curveto
152 662 lineto
316 662 lineto
closepath
fill
		} def

	/N
		{
286 662 moveto
491 143 lineto
602 530 lineto
611 562 615 587 615 604  curveto
615 617 611 626 603 633  curveto
594 640 578 643 555 643  curveto
551 643 547 643 543 644  curveto
548 662 lineto
761 662 lineto
755 644 lineto
733 644 717 642 706 637  curveto
691 630 679 621 672 610  curveto
661 595 651 568 640 530  curveto
484 -15 lineto
467 -15 lineto
247 543 lineto
129 130 lineto
120 99 116 75 116 59  curveto
116 46 120 37 128 31  curveto
136 24 155 20 185 18  curveto
180 0 lineto
-27 0 lineto
-21 18 lineto
5 18 22 21 31 24  curveto
44 30 54 38 61 47  curveto
70 62 81 89 92 130  curveto
224 591 lineto
211 610 197 624 183 631  curveto
168 638 146 643 115 644  curveto
121 662 lineto
286 662 lineto
closepath
fill
		} def

	/O
		{
492 677 moveto
536 677 575 667 609 648  curveto
643 629 669 601 688 564  curveto
708 526 717 488 717 448  curveto
717 377 697 302 656 224  curveto
614 146 561 87 494 46  curveto
428 5 359 -15 288 -15  curveto
237 -15 194 -3 160 18  curveto
126 41 100 71 84 108  curveto
67 145 59 181 59 216  curveto
59 278 74 339 104 399  curveto
134 460 169 510 210 551  curveto
252 591 296 622 343 644  curveto
390 666 439 677 492 677  curveto
closepath
476 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 288 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
335 16 364 23 392 38  curveto
421 52 451 77 481 113  curveto
520 157 553 214 579 283  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 476 646  curveto
closepath
fill
		} def

	/P
		{
156 662 moveto
417 662 lineto
485 662 536 647 570 617  curveto
604 588 621 552 621 510  curveto
621 476 610 444 588 412  curveto
567 381 535 355 493 335  curveto
450 316 405 306 355 306  curveto
325 306 286 311 239 322  curveto
186 142 lineto
174 99 167 70 167 57  curveto
167 46 172 38 181 31  curveto
189 24 210 20 244 18  curveto
239 0 lineto
-23 0 lineto
-18 18 lineto
15 18 39 24 53 35  curveto
66 47 81 80 97 134  curveto
206 511 lineto
219 556 226 586 226 602  curveto
226 613 221 622 212 630  curveto
202 637 182 642 150 644  curveto
156 662 lineto
closepath
247 353 moveto
284 344 313 339 336 339  curveto
371 339 404 346 433 361  curveto
462 375 485 397 501 427  curveto
518 456 526 486 526 518  curveto
526 551 516 577 496 596  curveto
475 615 445 625 404 625  curveto
382 625 355 622 323 617  curveto
247 353 lineto
closepath
fill
		} def

	/Q
		{
292 -15 moveto
166 -117 lineto
186 -113 204 -111 221 -111  curveto
237 -111 253 -112 266 -114  curveto
280 -116 310 -122 355 -133  curveto
401 -143 440 -148 474 -148  curveto
510 -148 541 -142 566 -129  curveto
591 -117 616 -96 640 -66  curveto
656 -74 lineto
622 -122 583 -157 537 -178  curveto
492 -200 443 -210 392 -210  curveto
364 -210 325 -205 276 -194  curveto
201 -177 148 -169 118 -169  curveto
107 -169 97 -170 90 -171  curveto
83 -173 72 -177 58 -183  curveto
47 -170 lineto
247 -12 lineto
185 -3 138 23 106 69  curveto
75 115 59 164 59 216  curveto
59 287 80 361 123 437  curveto
166 513 222 572 289 614  curveto
356 656 422 677 487 677  curveto
535 677 576 667 610 647  curveto
644 628 670 600 689 562  curveto
708 525 717 487 717 448  curveto
717 373 695 297 653 220  curveto
610 143 557 85 494 46  curveto
431 6 363 -13 292 -15  curveto
closepath
475 646 moveto
443 646 411 637 380 621  curveto
349 605 318 579 287 542  curveto
257 506 229 458 205 398  curveto
175 326 160 257 160 192  curveto
160 146 172 105 196 69  curveto
220 33 256 16 305 16  curveto
334 16 363 23 392 38  curveto
421 52 450 77 481 112  curveto
520 157 553 214 579 284  curveto
605 353 619 417 619 477  curveto
619 521 607 560 583 594  curveto
559 628 523 646 475 646  curveto
closepath
fill
		} def

	/R
		{
415 0 moveto
309 321 lineto
284 321 259 323 233 329  curveto
176 128 lineto
168 102 165 80 165 62  curveto
165 49 169 38 179 30  curveto
186 24 205 20 237 18  curveto
233 0 lineto
-22 0 lineto
-17 18 lineto
6 19 22 21 31 25  curveto
44 30 54 38 60 47  curveto
70 63 81 90 93 128  curveto
208 528 lineto
216 555 220 576 220 590  curveto
220 605 214 618 202 628  curveto
190 639 172 644 149 644  curveto
155 662 lineto
371 662 lineto
443 662 495 648 527 621  curveto
559 593 575 557 575 513  curveto
575 470 559 431 526 396  curveto
493 360 449 338 392 329  curveto
456 135 lineto
472 87 487 56 503 42  curveto
519 28 544 20 579 18  curveto
573 0 lineto
415 0 lineto
closepath
241 356 moveto
262 354 281 352 297 352  curveto
353 352 397 368 430 399  curveto
462 430 479 468 479 515  curveto
479 551 468 578 448 598  curveto
428 617 397 626 356 626  curveto
346 626 334 625 319 623  curveto
241 356 lineto
closepath
fill
		} def

	/S
		{
6 -15 moveto
61 230 lineto
78 230 lineto
75 206 74 187 74 171  curveto
74 126 88 90 117 62  curveto
145 34 183 20 229 20  curveto
271 20 304 33 326 59  curveto
348 86 359 116 359 150  curveto
359 172 354 192 344 210  curveto
328 237 288 285 221 353  curveto
189 386 168 410 159 426  curveto
144 452 137 480 137 509  curveto
137 555 154 595 188 627  curveto
223 660 267 677 321 677  curveto
340 677 357 675 373 671  curveto
383 669 402 663 428 652  curveto
447 644 458 640 459 640  curveto
464 639 469 638 475 638  curveto
484 638 492 641 499 646  curveto
506 650 514 661 523 677  curveto
542 677 lineto
491 457 lineto
474 457 lineto
475 477 476 492 476 504  curveto
476 544 463 576 437 601  curveto
411 626 377 639 334 639  curveto
300 639 273 629 251 609  curveto
230 589 220 566 220 540  curveto
220 517 226 496 240 475  curveto
253 454 285 420 333 374  curveto
382 327 413 291 428 264  curveto
442 238 449 210 449 181  curveto
449 147 440 115 423 83  curveto
405 52 379 27 346 10  curveto
313 -6 277 -15 237 -15  curveto
218 -15 200 -13 183 -9  curveto
166 -6 139 2 102 16  curveto
89 21 78 23 70 23  curveto
51 23 36 10 25 -15  curveto
6 -15 lineto
closepath
fill
		} def

	/T
		{
146 662 moveto
649 662 lineto
595 486 lineto
576 486 lineto
582 512 585 534 585 555  curveto
585 578 578 596 563 608  curveto
552 618 524 622 478 622  curveto
426 622 lineto
295 166 lineto
278 109 270 73 270 60  curveto
270 48 275 38 286 30  curveto
296 22 314 18 341 18  curveto
363 18 lineto
357 0 lineto
69 0 lineto
75 18 lineto
87 18 lineto
113 18 132 22 146 30  curveto
155 35 164 45 172 60  curveto
179 74 190 105 204 152  curveto
341 622 lineto
301 622 lineto
263 622 232 617 209 607  curveto
186 598 167 583 153 565  curveto
139 546 127 520 118 486  curveto
100 486 lineto
146 662 lineto
closepath
fill
		} def

	/U
		{
130 662 moveto
410 662 lineto
405 644 lineto
376 643 356 640 344 635  curveto
331 631 321 622 312 610  curveto
304 598 295 576 285 543  curveto
217 309 lineto
205 267 198 240 196 227  curveto
192 206 190 187 190 169  curveto
190 130 205 96 234 69  curveto
263 42 302 28 352 28  curveto
384 28 413 34 438 47  curveto
463 59 485 76 503 98  curveto
521 120 538 150 553 187  curveto
568 225 581 263 592 301  curveto
651 503 lineto
666 554 673 587 673 602  curveto
673 613 668 622 658 630  curveto
648 637 628 642 598 644  curveto
603 662 lineto
813 662 lineto
808 644 lineto
783 644 766 641 755 636  curveto
744 632 734 623 726 611  curveto
718 599 709 575 699 540  curveto
627 294 lineto
604 215 582 156 562 118  curveto
541 80 511 48 472 23  curveto
433 -2 385 -15 328 -15  curveto
261 -15 208 3 167 41  curveto
126 78 106 121 106 170  curveto
106 189 108 210 111 231  curveto
114 246 120 271 130 306  curveto
196 531 lineto
205 563 209 587 209 603  curveto
209 615 205 624 196 631  curveto
186 637 163 642 125 644  curveto
130 662 lineto
closepath
fill
		} def

	/V
		{
151 -15 moveto
206 536 lineto
209 564 210 583 210 592  curveto
210 607 205 619 194 629  curveto
183 639 166 644 142 644  curveto
125 644 lineto
129 662 lineto
391 662 lineto
385 644 lineto
357 643 337 640 327 635  curveto
316 629 308 620 302 606  curveto
298 599 295 579 292 545  curveto
252 150 lineto
511 503 lineto
539 541 556 568 563 583  curveto
568 593 571 601 571 609  curveto
571 618 567 625 560 632  curveto
552 638 538 642 518 644  curveto
523 662 lineto
723 662 lineto
718 644 lineto
702 642 689 639 680 634  curveto
662 626 644 613 626 596  curveto
608 578 580 544 542 491  curveto
169 -15 lineto
151 -15 lineto
closepath
fill
		} def

	/W
		{
135 -15 moveto
192 536 lineto
194 557 195 574 195 585  curveto
195 604 190 618 179 628  curveto
168 638 149 643 121 644  curveto
126 662 lineto
375 662 lineto
369 644 lineto
336 644 313 638 301 626  curveto
289 614 280 584 276 536  curveto
239 179 lineto
491 567 lineto
491 573 491 579 491 583  curveto
491 602 486 616 475 625  curveto
464 635 441 641 406 644  curveto
410 662 lineto
678 662 lineto
672 644 lineto
641 643 621 641 610 636  curveto
602 632 595 626 590 618  curveto
585 610 580 597 577 578  curveto
576 572 572 534 565 464  curveto
558 394 548 299 534 179  curveto
743 497 lineto
766 532 780 556 786 570  curveto
792 584 795 596 795 606  curveto
795 615 791 623 783 630  curveto
775 637 762 642 743 644  curveto
747 662 lineto
943 662 lineto
938 644 lineto
921 642 906 638 893 631  curveto
879 624 863 610 845 590  curveto
835 578 813 547 781 497  curveto
448 -15 lineto
430 -15 lineto
484 497 lineto
151 -15 lineto
135 -15 lineto
closepath
fill
		} def

	/X
		{
516 662 moveto
740 662 lineto
735 644 lineto
703 639 676 629 652 615  curveto
628 600 596 572 556 528  curveto
384 353 lineto
432 175 lineto
437 158 445 132 458 97  curveto
465 74 473 58 481 48  curveto
489 39 499 32 510 27  curveto
522 22 540 19 564 18  curveto
559 0 lineto
299 0 lineto
305 18 lineto
331 19 351 24 362 33  curveto
371 39 375 48 375 58  curveto
375 67 371 87 363 118  curveto
316 285 lineto
161 128 lineto
131 97 113 77 107 67  curveto
103 61 102 55 102 50  curveto
102 40 106 32 116 26  curveto
121 23 135 21 158 18  curveto
153 0 lineto
-66 0 lineto
-61 18 lineto
-33 20 -11 27 6 37  curveto
32 52 67 82 112 128  curveto
305 321 lineto
252 512 lineto
236 571 222 607 210 620  curveto
198 634 178 642 148 644  curveto
153 662 lineto
390 662 lineto
384 644 lineto
362 644 347 642 340 639  curveto
332 637 326 632 322 627  curveto
318 621 316 615 316 607  curveto
316 600 320 581 328 553  curveto
373 390 lineto
477 493 lineto
518 534 546 567 561 592  curveto
567 601 569 609 569 616  curveto
569 623 566 629 560 633  curveto
551 639 535 643 511 644  curveto
516 662 lineto
closepath
fill
		} def

	/Y
		{
349 352 moveto
475 528 lineto
508 574 524 603 524 616  curveto
524 623 520 629 513 634  curveto
506 638 486 642 454 644  curveto
458 662 lineto
667 662 lineto
663 644 lineto
642 641 629 638 621 635  curveto
609 630 598 623 586 612  curveto
571 599 549 572 520 532  curveto
358 308 lineto
309 145 lineto
297 104 291 75 291 60  curveto
291 49 293 42 297 37  curveto
300 31 307 27 316 24  curveto
329 20 348 18 373 18  curveto
368 0 lineto
89 0 lineto
95 18 lineto
123 18 141 21 150 24  curveto
165 30 176 38 183 48  curveto
194 63 206 90 217 128  curveto
275 322 lineto
205 550 lineto
192 591 180 616 170 625  curveto
159 635 141 641 114 644  curveto
119 662 lineto
364 662 lineto
358 644 lineto
327 641 310 639 306 638  curveto
298 635 293 631 288 624  curveto
284 617 281 609 281 600  curveto
281 587 286 564 295 532  curveto
349 352 lineto
closepath
fill
		} def

	/Z
		{
151 662 moveto
610 662 lineto
610 644 lineto
119 31 lineto
195 31 lineto
278 31 336 35 370 43  curveto
404 52 433 66 455 86  curveto
478 106 497 135 512 172  curveto
531 172 lineto
474 0 lineto
-1 0 lineto
-1 14 lineto
489 626 lineto
352 626 lineto
292 626 250 623 226 618  curveto
201 613 180 602 163 585  curveto
145 569 131 544 119 511  curveto
102 511 lineto
151 662 lineto
closepath
fill
		} def

	/bracketleft
		{
6 -199 moveto
263 677 lineto
471 677 lineto
460 643 lineto
324 643 lineto
87 -164 lineto
223 -164 lineto
213 -199 lineto
6 -199 lineto
closepath
fill
		} def

	/backslash
		{
141 694 moveto
231 -15 lineto
195 -15 lineto
106 694 lineto
141 694 lineto
closepath
fill
		} def

	/bracketright
		{
364 677 moveto
107 -199 lineto
-100 -199 lineto
-89 -165 lineto
46 -165 lineto
282 642 lineto
147 642 lineto
157 677 lineto
364 677 lineto
closepath
fill
		} def

	/asciicircum
		{
252 677 moveto
459 327 lineto
415 327 lineto
244 613 lineto
73 327 lineto
27 327 lineto
237 677 lineto
252 677 lineto
closepath
fill
		} def

	/underscore
		{
508 -215 moveto
-8 -215 lineto
-8 -174 lineto
508 -174 lineto
508 -215 lineto
closepath
fill
		} def

	/quoteleft
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/a
		{
469 441 moveto
374 110 lineto
363 66 lineto
362 62 361 58 361 55  curveto
361 50 363 45 366 42  curveto
369 39 372 37 376 37  curveto
380 37 386 40 393 45  curveto
405 54 422 74 443 104  curveto
460 92 lineto
437 58 414 32 391 14  curveto
367 -2 345 -11 325 -11  curveto
311 -11 300 -8 293 -1  curveto
286 5 283 15 283 29  curveto
283 45 286 66 293 92  curveto
304 128 lineto
261 73 222 34 186 12  curveto
160 -3 135 -11 110 -11  curveto
87 -11 66 -1 49 17  curveto
32 37 23 64 23 99  curveto
23 150 38 205 70 262  curveto
101 320 140 366 188 400  curveto
225 428 261 441 294 441  curveto
314 441 330 436 343 426  curveto
357 415 367 398 374 374  curveto
391 430 lineto
469 441 lineto
closepath
295 416 moveto
274 416 252 406 229 387  curveto
195 359 166 318 140 264  curveto
114 209 101 160 101 116  curveto
101 94 107 77 118 64  curveto
129 51 141 44 156 44  curveto
191 44 230 71 271 123  curveto
327 193 355 264 355 337  curveto
355 365 350 385 339 397  curveto
328 410 313 416 295 416  curveto
closepath
fill
		} def

	/b
		{
288 694 moveto
192 356 lineto
223 389 250 411 274 423  curveto
297 435 321 441 347 441  curveto
382 441 412 430 435 406  curveto
457 382 469 350 469 309  curveto
469 257 454 204 424 153  curveto
394 101 356 60 311 31  curveto
266 2 221 -11 177 -11  curveto
128 -11 78 6 26 43  curveto
174 554 lineto
186 594 191 617 191 624  curveto
191 632 189 638 184 643  curveto
176 648 165 651 150 651  curveto
144 651 133 650 119 648  curveto
119 667 lineto
288 694 lineto
closepath
99 38 moveto
132 20 160 11 185 11  curveto
214 11 243 21 274 42  curveto
305 63 332 99 354 148  curveto
377 198 388 249 388 299  curveto
388 329 381 353 366 370  curveto
351 387 334 395 313 395  curveto
283 395 254 383 225 359  curveto
196 334 175 301 163 257  curveto
99 38 lineto
closepath
fill
		} def

	/c
		{
386 106 moveto
352 65 318 35 283 16  curveto
249 -2 212 -11 174 -11  curveto
128 -11 92 1 66 27  curveto
40 53 27 88 27 132  curveto
27 182 41 231 69 279  curveto
96 327 134 366 181 396  curveto
228 426 274 441 319 441  curveto
355 441 381 434 399 419  curveto
416 404 425 386 425 365  curveto
425 345 419 327 407 313  curveto
398 302 386 296 373 296  curveto
363 296 355 300 348 306  curveto
341 313 338 321 338 331  curveto
338 337 339 342 342 348  curveto
344 353 349 359 357 366  curveto
364 374 369 379 371 382  curveto
372 386 373 389 373 393  curveto
373 399 370 405 364 410  curveto
354 416 341 419 324 419  curveto
292 419 260 408 229 386  curveto
198 363 171 331 149 290  curveto
122 240 109 190 109 140  curveto
109 106 118 80 137 61  curveto
156 41 182 32 214 32  curveto
239 32 264 38 289 51  curveto
313 63 341 86 372 119  curveto
386 106 lineto
closepath
fill
		} def

	/d
		{
541 694 moveto
373 118 lineto
363 86 359 66 359 56  curveto
359 53 360 50 363 47  curveto
366 44 369 42 372 42  curveto
376 42 381 45 387 49  curveto
398 57 416 76 442 107  curveto
459 97 lineto
436 65 412 38 388 18  curveto
364 -1 342 -11 321 -11  curveto
310 -11 301 -7 293 0  curveto
286 7 283 18 283 33  curveto
283 51 288 76 297 107  curveto
316 168 lineto
269 95 226 45 187 17  curveto
161 -2 135 -11 111 -11  curveto
86 -11 65 0 46 21  curveto
28 43 19 73 19 110  curveto
19 159 34 211 65 266  curveto
96 321 137 365 187 400  curveto
228 428 264 441 298 441  curveto
315 441 331 438 343 431  curveto
356 423 368 412 381 395  curveto
429 565 lineto
432 577 435 587 437 594  curveto
441 607 443 618 443 626  curveto
443 633 441 639 436 643  curveto
429 649 420 651 410 651  curveto
402 651 390 650 373 648  curveto
373 666 lineto
541 694 lineto
closepath
359 347 moveto
359 368 353 385 341 397  curveto
329 410 314 417 295 417  curveto
254 417 212 383 167 315  curveto
123 247 101 182 101 121  curveto
101 96 106 78 117 65  curveto
127 52 140 45 155 45  curveto
189 45 232 82 283 155  curveto
334 229 359 292 359 347  curveto
closepath
fill
		} def

	/e
		{
119 184 moveto
116 167 115 154 115 143  curveto
115 114 125 89 146 69  curveto
166 49 191 39 221 39  curveto
244 39 267 43 288 53  curveto
310 63 342 84 385 117  curveto
395 103 lineto
318 26 244 -11 174 -11  curveto
127 -11 91 3 67 33  curveto
43 63 31 96 31 132  curveto
31 180 46 230 76 281  curveto
106 332 143 371 188 399  curveto
234 427 280 441 328 441  curveto
363 441 388 434 405 420  curveto
421 406 430 390 430 371  curveto
430 344 419 318 397 293  curveto
369 261 327 235 272 215  curveto
236 201 185 191 119 184  curveto
closepath
122 208 moveto
170 213 209 222 240 236  curveto
280 254 310 275 330 300  curveto
350 325 360 349 360 371  curveto
360 385 356 396 347 404  curveto
338 413 326 417 310 417  curveto
277 417 242 399 204 364  curveto
167 329 140 277 122 208  curveto
closepath
fill
		} def

	/f
		{
296 430 moveto
287 397 lineto
216 397 lineto
162 184 lineto
138 90 114 17 90 -33  curveto
56 -106 19 -156 -19 -184  curveto
-49 -205 -79 -215 -109 -215  curveto
-128 -215 -145 -209 -159 -198  curveto
-169 -190 -174 -179 -174 -166  curveto
-174 -156 -170 -147 -161 -139  curveto
-153 -131 -143 -127 -131 -127  curveto
-122 -127 -115 -130 -109 -136  curveto
-103 -141 -100 -148 -100 -155  curveto
-100 -162 -103 -169 -110 -175  curveto
-115 -179 -118 -183 -118 -185  curveto
-118 -188 -117 -190 -114 -192  curveto
-111 -194 -107 -195 -101 -195  curveto
-87 -195 -72 -191 -56 -182  curveto
-41 -173 -27 -160 -15 -143  curveto
-3 -125 7 -100 18 -67  curveto
23 -54 35 -9 55 67  curveto
140 397 lineto
55 397 lineto
62 430 lineto
89 430 107 432 118 435  curveto
129 439 139 446 148 457  curveto
157 467 168 487 183 516  curveto
202 555 220 585 238 607  curveto
262 636 287 658 314 672  curveto
340 687 365 694 389 694  curveto
413 694 433 688 448 675  curveto
463 663 471 649 471 634  curveto
471 623 467 613 459 605  curveto
452 598 442 594 431 594  curveto
421 594 412 597 406 603  curveto
400 608 396 615 396 624  curveto
396 629 399 635 403 643  curveto
407 650 409 656 409 658  curveto
409 663 408 666 405 668  curveto
401 672 394 673 386 673  curveto
366 673 347 667 331 654  curveto
309 637 290 610 272 573  curveto
264 554 248 506 224 430  curveto
296 430 lineto
closepath
fill
		} def

	/g
		{
521 411 moveto
506 360 lineto
425 360 lineto
431 343 434 326 434 311  curveto
434 268 416 230 379 196  curveto
343 163 292 144 228 141  curveto
194 130 168 118 150 104  curveto
144 98 141 93 141 87  curveto
141 81 144 75 149 70  curveto
155 64 170 59 194 53  curveto
289 31 lineto
341 19 376 4 393 -12  curveto
409 -29 417 -49 417 -71  curveto
417 -98 408 -122 388 -145  curveto
368 -167 339 -184 302 -197  curveto
264 -209 222 -215 176 -215  curveto
135 -215 99 -211 65 -201  curveto
32 -191 8 -178 -5 -162  curveto
-19 -146 -26 -129 -26 -112  curveto
-26 -98 -22 -83 -12 -68  curveto
-3 -53 7 -41 21 -31  curveto
30 -25 55 -10 96 12  curveto
81 24 74 37 74 51  curveto
74 64 80 78 93 92  curveto
107 107 135 123 177 141  curveto
141 147 113 162 92 186  curveto
71 209 61 234 61 263  curveto
61 309 81 350 121 387  curveto
162 423 216 441 283 441  curveto
308 441 328 439 343 434  curveto
359 429 374 422 389 411  curveto
521 411 lineto
closepath
351 334 moveto
351 361 344 381 329 396  curveto
315 411 296 418 272 418  curveto
236 418 205 400 181 363  curveto
157 326 146 288 146 248  curveto
146 222 153 202 168 186  curveto
184 170 202 162 224 162  curveto
241 162 258 167 274 176  curveto
290 186 304 199 315 215  curveto
326 232 335 253 341 279  curveto
348 305 351 323 351 334  curveto
closepath
117 0 moveto
91 -12 71 -27 57 -46  curveto
44 -65 37 -83 37 -102  curveto
37 -123 47 -141 66 -155  curveto
94 -175 135 -185 189 -185  curveto
236 -185 276 -177 309 -161  curveto
342 -146 358 -125 358 -100  curveto
358 -87 352 -75 340 -64  curveto
328 -53 304 -43 269 -36  curveto
250 -32 199 -20 117 0  curveto
closepath
fill
		} def

	/h
		{
293 694 moveto
156 220 lineto
215 309 261 368 294 397  curveto
328 427 359 441 390 441  curveto
405 441 418 436 429 425  curveto
439 415 444 400 444 382  curveto
444 361 440 335 431 304  curveto
371 100 lineto
364 75 360 61 360 59  curveto
360 54 361 50 364 47  curveto
367 44 370 43 374 43  curveto
378 43 383 45 388 49  curveto
407 64 425 83 443 109  curveto
458 100 lineto
447 82 432 63 412 43  curveto
393 22 376 8 362 0  curveto
347 -7 335 -11 324 -11  curveto
312 -11 302 -7 294 0  curveto
287 7 283 17 283 29  curveto
283 43 288 70 300 109  curveto
356 304 lineto
363 329 367 348 367 362  curveto
367 368 365 374 361 377  curveto
357 381 351 383 345 383  curveto
335 383 325 380 312 373  curveto
290 359 265 333 236 296  curveto
228 286 202 246 158 174  curveto
144 152 133 127 124 100  curveto
93 0 lineto
20 0 lineto
180 558 lineto
197 619 lineto
197 627 194 635 187 641  curveto
180 648 171 651 161 651  curveto
155 651 146 650 134 648  curveto
124 646 lineto
124 666 lineto
293 694 lineto
closepath
fill
		} def

	/i
		{
223 635 moveto
237 635 248 631 258 621  curveto
267 612 272 600 272 586  curveto
272 573 267 562 258 552  curveto
248 542 236 538 223 538  curveto
210 538 198 542 189 552  curveto
179 562 174 573 174 586  curveto
174 600 179 612 188 621  curveto
198 631 209 635 223 635  curveto
closepath
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/j
		{
229 635 moveto
242 635 254 630 263 620  curveto
273 611 278 599 278 585  curveto
278 572 273 560 263 551  curveto
254 541 242 536 229 536  curveto
215 536 203 541 194 551  curveto
184 560 179 572 179 585  curveto
179 599 184 611 194 620  curveto
203 630 215 635 229 635  curveto
closepath
236 441 moveto
110 4 lineto
87 -73 57 -129 17 -164  curveto
-21 -198 -63 -215 -109 -215  curveto
-129 -215 -145 -211 -156 -201  curveto
-166 -192 -171 -180 -171 -167  curveto
-171 -157 -167 -149 -159 -141  curveto
-151 -133 -142 -129 -132 -129  curveto
-122 -129 -114 -132 -107 -139  curveto
-101 -144 -98 -149 -98 -155  curveto
-98 -164 -102 -171 -110 -177  curveto
-115 -181 -117 -184 -117 -186  curveto
-116 -188 lineto
-115 -190 -114 -191 -112 -191  curveto
-110 -192 -107 -192 -103 -192  curveto
-77 -192 -54 -184 -35 -167  curveto
-17 -150 0 -117 14 -67  curveto
123 307 lineto
134 344 139 364 139 368  curveto
139 376 136 383 129 389  curveto
122 395 113 398 102 398  curveto
98 398 93 398 87 397  curveto
83 396 77 395 69 394  curveto
69 411 lineto
236 441 lineto
closepath
fill
		} def

	/k
		{
286 694 moveto
147 214 lineto
203 261 lineto
264 313 303 351 321 375  curveto
327 384 330 390 330 394  curveto
330 397 329 400 327 402  curveto
325 405 321 407 316 409  curveto
310 410 300 411 286 411  curveto
269 411 lineto
274 430 lineto
487 430 lineto
482 411 lineto
458 410 437 406 419 400  curveto
401 393 384 384 368 372  curveto
335 347 313 330 303 321  curveto
261 284 lineto
268 260 277 228 287 186  curveto
305 116 317 75 323 62  curveto
329 48 335 42 342 42  curveto
347 42 354 45 361 50  curveto
378 63 396 82 416 109  curveto
433 97 lineto
397 53 370 23 351 9  curveto
332 -4 315 -11 299 -11  curveto
286 -11 275 -6 268 4  curveto
255 23 233 99 203 231  curveto
136 173 lineto
85 0 lineto
9 0 lineto
171 557 lineto
185 604 lineto
187 612 187 619 187 625  curveto
187 633 184 640 178 645  curveto
172 650 164 653 152 653  curveto
145 653 133 651 117 648  curveto
117 665 lineto
286 694 lineto
closepath
fill
		} def

	/l
		{
297 694 moveto
130 113 lineto
122 84 118 66 118 60  curveto
118 55 119 51 122 47  curveto
125 44 129 42 134 42  curveto
140 42 147 45 154 51  curveto
171 64 188 85 207 113  curveto
222 98 lineto
191 54 162 24 136 6  curveto
117 -5 99 -11 82 -11  curveto
69 -11 59 -7 51 0  curveto
42 9 38 19 38 30  curveto
38 42 43 66 54 102  curveto
186 560 lineto
197 597 202 619 202 625  curveto
202 632 199 639 193 644  curveto
187 649 177 651 164 651  curveto
157 651 145 650 130 648  curveto
130 666 lineto
297 694 lineto
closepath
fill
		} def

	/m
		{
216 441 moveto
153 221 lineto
181 273 205 312 225 338  curveto
256 378 286 408 315 426  curveto
333 436 351 441 370 441  curveto
386 441 399 436 410 426  curveto
421 415 426 402 426 386  curveto
426 370 423 349 415 323  curveto
380 199 lineto
433 298 484 368 531 408  curveto
558 430 584 441 609 441  curveto
624 441 637 436 646 426  curveto
656 416 661 400 661 378  curveto
661 360 658 340 652 318  curveto
598 128 lineto
586 87 581 64 581 60  curveto
581 55 582 51 585 48  curveto
587 46 590 44 593 44  curveto
596 44 602 48 610 54  curveto
628 68 646 87 662 110  curveto
678 100 lineto
670 87 656 69 635 46  curveto
614 24 597 8 582 0  curveto
567 -7 554 -11 542 -11  curveto
530 -11 521 -7 513 0  curveto
505 7 501 17 501 28  curveto
501 44 508 75 521 123  curveto
566 279 lineto
576 315 581 335 582 339  curveto
583 346 583 352 583 357  curveto
583 366 582 372 578 376  curveto
574 381 570 383 565 383  curveto
551 383 537 376 521 362  curveto
477 321 435 263 396 188  curveto
370 139 346 76 323 0  curveto
250 0 lineto
333 295 lineto
342 327 347 348 347 359  curveto
347 368 345 374 341 378  curveto
338 383 333 385 328 385  curveto
317 385 306 381 294 373  curveto
274 360 249 333 219 292  curveto
188 250 164 210 147 172  curveto
139 154 119 97 89 0  curveto
17 0 lineto
107 316 lineto
119 357 lineto
121 363 122 368 122 371  curveto
122 378 119 384 112 390  curveto
106 396 97 398 87 398  curveto
83 398 71 396 52 393  curveto
48 411 lineto
216 441 lineto
closepath
fill
		} def

	/n
		{
220 441 moveto
155 219 lineto
216 310 263 370 295 398  curveto
328 427 359 441 389 441  curveto
405 441 418 436 429 425  curveto
440 415 445 401 445 383  curveto
445 364 440 338 431 305  curveto
371 100 lineto
364 76 361 61 361 56  curveto
361 52 362 48 365 45  curveto
367 42 370 40 373 40  curveto
377 40 382 42 387 46  curveto
404 60 423 81 444 109  curveto
459 100 lineto
429 56 400 25 373 7  curveto
354 -5 337 -11 322 -11  curveto
310 -11 301 -8 293 0  curveto
286 6 283 16 283 28  curveto
283 44 288 71 299 109  curveto
356 305 lineto
363 330 367 349 367 362  curveto
367 369 365 374 360 378  curveto
356 382 351 384 345 384  curveto
336 384 325 380 312 373  curveto
288 358 263 334 237 300  curveto
211 266 183 223 154 171  curveto
139 143 126 113 116 80  curveto
92 0 lineto
19 0 lineto
107 305 lineto
118 342 123 364 123 372  curveto
123 379 120 385 114 390  curveto
109 396 102 398 93 398  curveto
89 398 83 398 73 396  curveto
54 394 lineto
51 411 lineto
220 441 lineto
closepath
fill
		} def

	/o
		{
462 289 moveto
462 240 449 191 423 144  curveto
397 96 361 58 315 30  curveto
269 2 224 -11 180 -11  curveto
136 -11 99 2 71 31  curveto
43 59 29 96 29 141  curveto
29 189 43 237 70 285  curveto
98 333 134 371 180 399  curveto
226 427 271 441 314 441  curveto
357 441 392 427 420 399  curveto
448 371 462 334 462 289  curveto
closepath
381 322 moveto
381 353 373 376 359 392  curveto
344 408 325 416 301 416  curveto
253 416 209 382 169 313  curveto
129 245 109 177 109 109  curveto
109 78 117 54 132 37  curveto
148 21 168 12 191 12  curveto
237 12 280 46 321 114  curveto
361 183 381 252 381 322  curveto
closepath
fill
		} def

	/p
		{
221 441 moveto
187 329 lineto
222 371 254 400 282 416  curveto
310 433 338 441 367 441  curveto
396 441 421 430 441 407  curveto
462 384 472 354 472 317  curveto
472 246 443 173 385 99  curveto
326 25 259 -11 181 -11  curveto
165 -11 150 -9 138 -6  curveto
125 -2 111 3 96 12  curveto
60 -113 lineto
53 -138 49 -154 49 -161  curveto
49 -168 51 -174 55 -179  curveto
59 -184 65 -188 73 -191  curveto
82 -194 98 -195 124 -195  curveto
119 -213 lineto
-110 -213 lineto
-105 -195 lineto
-75 -194 -54 -189 -44 -180  curveto
-33 -171 -22 -145 -10 -104  curveto
112 323 lineto
120 350 124 367 124 373  curveto
124 382 121 389 116 394  curveto
111 398 103 401 93 401  curveto
83 401 70 400 53 397  curveto
53 417 lineto
221 441 lineto
closepath
107 51 moveto
127 27 154 15 188 15  curveto
205 15 223 19 240 29  curveto
258 38 275 52 292 71  curveto
309 89 324 111 337 135  curveto
350 159 362 188 373 221  curveto
383 254 389 286 389 318  curveto
389 344 383 364 371 378  curveto
359 392 345 399 329 399  curveto
294 399 259 379 225 338  curveto
191 298 165 251 149 197  curveto
107 51 lineto
closepath
fill
		} def

	/q
		{
474 441 moveto
314 -109 lineto
307 -135 303 -151 303 -158  curveto
303 -166 305 -172 309 -177  curveto
313 -183 318 -187 324 -189  curveto
334 -193 347 -195 364 -195  curveto
359 -213 lineto
125 -213 lineto
130 -195 lineto
162 -193 182 -190 189 -187  curveto
202 -182 212 -174 220 -163  curveto
228 -152 237 -129 247 -93  curveto
314 146 lineto
271 84 231 40 194 14  curveto
167 -3 143 -12 120 -12  curveto
88 -12 63 1 46 27  curveto
30 54 21 82 21 113  curveto
21 162 37 214 67 268  curveto
97 322 137 366 187 401  curveto
225 428 260 441 291 441  curveto
314 441 333 436 348 425  curveto
363 413 374 395 382 371  curveto
397 425 lineto
474 441 lineto
closepath
362 346 moveto
362 367 356 384 343 397  curveto
331 411 315 417 296 417  curveto
257 417 215 383 171 315  curveto
127 247 105 182 105 122  curveto
105 97 110 79 121 66  curveto
132 53 146 47 161 47  curveto
181 47 203 58 229 80  curveto
267 114 298 157 324 209  curveto
350 262 362 307 362 346  curveto
closepath
fill
		} def

	/r
		{
52 414 moveto
220 441 lineto
150 204 lineto
207 301 259 369 305 408  curveto
332 430 353 441 370 441  curveto
380 441 389 438 395 432  curveto
401 426 404 416 404 404  curveto
404 383 399 362 388 343  curveto
380 328 369 321 354 321  curveto
347 321 340 323 335 328  curveto
329 333 326 340 325 351  curveto
324 357 323 361 320 363  curveto
318 365 315 367 311 367  curveto
305 367 300 365 295 363  curveto
287 358 274 346 257 325  curveto
230 293 201 251 169 201  curveto
155 179 144 155 134 128  curveto
120 91 112 69 110 61  curveto
95 0 lineto
20 0 lineto
110 303 lineto
121 338 126 363 126 378  curveto
126 384 124 389 119 393  curveto
112 398 104 400 93 400  curveto
86 400 73 399 55 396  curveto
52 414 lineto
closepath
fill
		} def

	/s
		{
362 441 moveto
333 292 lineto
314 292 lineto
313 335 304 367 287 387  curveto
270 407 249 417 224 417  curveto
203 417 187 411 176 400  curveto
164 389 158 375 158 360  curveto
158 349 160 339 165 329  curveto
170 319 180 306 196 288  curveto
238 242 265 207 278 184  curveto
290 160 296 138 296 117  curveto
296 83 282 53 254 27  curveto
226 1 190 -11 147 -11  curveto
124 -11 97 -6 66 4  curveto
56 8 47 10 42 10  curveto
27 10 16 3 8 -11  curveto
-9 -11 lineto
20 146 lineto
38 146 lineto
40 97 50 62 69 41  curveto
87 21 113 10 145 10  curveto
170 10 189 17 204 31  curveto
218 45 226 62 226 82  curveto
226 95 223 107 218 118  curveto
209 138 190 165 160 199  curveto
131 234 113 260 104 277  curveto
96 294 92 311 92 329  curveto
92 360 103 387 126 409  curveto
149 430 179 441 215 441  curveto
225 441 235 441 243 439  curveto
248 438 258 434 275 428  curveto
292 422 303 418 309 418  curveto
323 418 334 426 344 441  curveto
362 441 lineto
closepath
fill
		} def

	/t
		{
259 562 moveto
221 430 lineto
298 430 lineto
290 399 lineto
213 399 lineto
129 111 lineto
120 80 116 60 116 51  curveto
116 45 117 41 120 38  curveto
122 35 125 34 129 34  curveto
137 34 148 39 161 51  curveto
169 57 186 77 213 111  curveto
229 99 lineto
200 55 171 24 145 6  curveto
126 -5 108 -11 89 -11  curveto
75 -11 63 -7 54 1  curveto
45 10 41 22 41 36  curveto
41 53 46 80 56 116  curveto
138 399 lineto
64 399 lineto
69 418 lineto
105 428 134 442 158 462  curveto
182 481 208 515 238 562  curveto
259 562 lineto
closepath
fill
		} def

	/u
		{
470 430 moveto
385 139 lineto
373 95 366 68 366 57  curveto
366 51 367 46 369 44  curveto
371 41 374 40 378 40  curveto
383 40 390 42 396 47  curveto
403 52 420 72 447 107  curveto
461 96 lineto
436 55 409 26 382 6  curveto
364 -5 347 -11 331 -11  curveto
318 -11 308 -8 301 0  curveto
294 6 290 15 290 26  curveto
290 37 292 52 296 70  curveto
302 94 316 147 341 228  curveto
285 137 239 74 202 40  curveto
165 5 130 -11 98 -11  curveto
83 -11 70 -6 60 3  curveto
50 14 44 27 44 43  curveto
44 67 52 105 66 155  curveto
108 306 lineto
119 342 124 365 124 374  curveto
124 377 123 381 120 384  curveto
117 386 114 388 111 388  curveto
104 388 97 385 90 380  curveto
83 375 68 357 44 326  curveto
29 337 lineto
53 375 79 403 106 420  curveto
127 434 146 441 164 441  curveto
176 441 186 438 194 430  curveto
201 422 205 412 205 400  curveto
205 383 199 351 186 306  curveto
140 148 lineto
127 105 121 78 121 67  curveto
121 61 123 56 127 52  curveto
131 48 136 46 143 46  curveto
154 46 168 52 185 62  curveto
202 73 225 97 254 134  curveto
283 171 307 206 325 238  curveto
344 270 364 322 385 393  curveto
396 430 lineto
470 430 lineto
closepath
fill
		} def

	/v
		{
21 411 moveto
162 441 lineto
172 417 180 393 187 368  curveto
195 331 202 287 208 237  curveto
211 211 214 158 219 76  curveto
259 121 284 148 292 159  curveto
334 217 359 252 366 262  curveto
376 279 384 294 388 307  curveto
392 317 394 326 394 335  curveto
394 343 386 353 371 364  curveto
356 375 348 388 348 401  curveto
348 412 352 421 361 429  curveto
369 437 379 441 390 441  curveto
404 441 416 436 426 425  curveto
437 413 442 399 442 383  curveto
442 366 439 350 434 335  curveto
426 310 410 280 387 244  curveto
364 209 326 161 275 101  curveto
268 94 232 56 167 -11  curveto
148 -11 lineto
141 194 124 322 100 374  curveto
91 390 78 398 59 398  curveto
51 398 39 397 24 394  curveto
21 411 lineto
closepath
fill
		} def

	/w
		{
418 441 moveto
452 75 lineto
509 142 554 204 588 262  curveto
608 296 618 321 618 336  curveto
618 344 616 350 613 355  curveto
611 358 606 363 597 368  curveto
588 374 582 380 579 386  curveto
575 392 573 398 573 405  curveto
573 415 577 424 584 431  curveto
592 438 602 441 613 441  curveto
627 441 638 436 647 427  curveto
656 417 661 403 661 387  curveto
661 370 659 354 654 339  curveto
644 311 625 275 597 231  curveto
562 178 527 129 490 83  curveto
453 38 426 6 408 -11  curveto
390 -11 lineto
358 326 lineto
157 -11 lineto
135 -11 lineto
133 127 126 236 114 317  curveto
109 350 101 372 90 383  curveto
82 390 69 394 53 394  curveto
43 394 31 393 17 391  curveto
17 409 lineto
157 441 lineto
176 387 189 304 195 191  curveto
197 148 198 121 200 110  curveto
400 441 lineto
418 441 lineto
closepath
fill
		} def

	/x
		{
173 441 moveto
189 424 201 408 209 391  curveto
215 379 224 348 238 298  curveto
281 363 lineto
292 378 306 393 322 407  curveto
339 422 353 431 365 437  curveto
373 440 382 441 391 441  curveto
405 441 416 438 425 430  curveto
433 423 437 414 437 403  curveto
437 390 435 382 430 377  curveto
421 369 410 365 398 365  curveto
392 365 384 367 376 370  curveto
361 375 351 377 346 377  curveto
338 377 329 373 318 364  curveto
298 347 274 314 246 266  curveto
286 98 lineto
292 72 297 57 301 52  curveto
305 46 310 44 314 44  curveto
321 44 329 48 338 55  curveto
356 70 371 90 384 114  curveto
401 105 lineto
380 67 354 35 323 9  curveto
305 -4 290 -11 277 -11  curveto
259 -11 245 -1 234 19  curveto
227 31 213 86 191 183  curveto
141 94 100 38 69 12  curveto
49 -3 30 -11 12 -11  curveto
0 -11 -12 -7 -23 2  curveto
-31 9 -35 19 -35 31  curveto
-35 41 -31 50 -24 58  curveto
-17 65 -8 68 1 68  curveto
12 68 23 63 35 53  curveto
43 45 50 42 54 42  curveto
58 42 63 44 69 49  curveto
85 62 105 88 132 129  curveto
158 170 175 200 184 218  curveto
163 297 153 339 151 344  curveto
143 365 134 380 122 389  curveto
110 397 92 402 68 402  curveto
61 402 52 402 42 401  curveto
42 418 lineto
173 441 lineto
closepath
fill
		} def

	/y
		{
159 441 moveto
170 423 178 405 182 388  curveto
186 372 191 340 195 292  curveto
216 51 lineto
236 75 264 112 301 163  curveto
319 187 341 221 368 264  curveto
384 290 393 308 397 318  curveto
399 324 400 329 400 334  curveto
400 338 399 341 396 343  curveto
394 346 388 348 379 351  curveto
369 354 361 360 355 368  curveto
348 377 345 386 345 397  curveto
345 410 349 421 357 429  curveto
365 437 375 441 386 441  curveto
401 441 413 435 423 424  curveto
433 412 438 395 438 375  curveto
438 349 429 319 412 286  curveto
394 253 360 203 310 134  curveto
260 66 199 -8 128 -88  curveto
79 -144 42 -179 19 -194  curveto
-4 -208 -25 -215 -42 -215  curveto
-52 -215 -60 -212 -68 -204  curveto
-76 -196 -80 -187 -80 -177  curveto
-80 -165 -74 -153 -64 -143  curveto
-53 -132 -42 -127 -29 -127  curveto
-23 -127 -17 -128 -13 -131  curveto
-11 -133 -8 -138 -5 -145  curveto
-2 -153 0 -158 3 -161  curveto
5 -162 7 -163 9 -163  curveto
11 -163 14 -161 19 -158  curveto
37 -147 58 -130 82 -105  curveto
113 -74 136 -48 151 -27  curveto
124 281 lineto
119 332 112 363 103 375  curveto
94 386 79 391 57 391  curveto
50 391 38 390 21 388  curveto
16 406 lineto
159 441 lineto
closepath
fill
		} def

	/z
		{
83 430 moveto
394 430 lineto
394 417 lineto
56 66 lineto
199 66 lineto
233 66 254 67 263 70  curveto
272 72 281 78 288 86  curveto
296 95 305 110 314 132  curveto
332 132 lineto
290 0 lineto
-27 0 lineto
-27 14 lineto
310 365 lineto
169 365 lineto
139 365 121 364 115 363  curveto
106 361 97 356 88 347  curveto
79 339 70 325 61 306  curveto
42 306 lineto
83 430 lineto
closepath
fill
		} def

	/braceleft
		{
218 -198 moveto
213 -215 lineto
170 -209 137 -193 113 -166  curveto
89 -140 77 -109 77 -72  curveto
77 -39 90 0 115 48  curveto
140 95 153 128 153 147  curveto
153 168 146 186 132 201  curveto
117 216 96 225 68 229  curveto
74 249 lineto
108 253 137 264 161 282  curveto
185 299 202 319 211 342  curveto
218 357 222 387 225 432  curveto
228 477 238 517 256 551  curveto
274 585 303 615 343 643  curveto
383 671 427 688 474 694  curveto
469 677 lineto
432 668 403 655 380 638  curveto
357 620 340 599 330 575  curveto
323 558 318 528 316 486  curveto
313 444 306 410 295 383  curveto
283 357 262 330 231 303  curveto
200 277 160 256 112 240  curveto
145 226 170 208 187 184  curveto
204 161 212 135 212 107  curveto
212 79 200 41 174 -6  curveto
149 -54 136 -89 136 -110  curveto
136 -132 142 -149 155 -164  curveto
167 -179 188 -190 218 -198  curveto
closepath
fill
		} def

	/bar
		{
156 694 moveto
156 -215 lineto
115 -215 lineto
115 694 lineto
156 694 lineto
closepath
fill
		} def

	/braceright
		{
181 677 moveto
186 694 lineto
228 688 262 672 286 646  curveto
310 619 322 588 322 551  curveto
322 518 309 477 284 430  curveto
258 383 246 350 246 331  curveto
246 310 253 292 267 277  curveto
281 262 303 253 331 249  curveto
325 229 lineto
291 225 263 214 239 196  curveto
215 179 198 159 187 136  curveto
181 121 176 91 174 46  curveto
171 0 161 -38 143 -72  curveto
125 -106 96 -137 56 -165  curveto
16 -192 -27 -209 -74 -215  curveto
-69 -198 lineto
-33 -189 -3 -176 19 -159  curveto
42 -142 58 -121 69 -96  curveto
76 -79 81 -49 83 -7  curveto
86 34 92 67 102 89  curveto
115 119 137 147 168 174  curveto
199 201 239 222 287 238  curveto
254 251 229 270 212 294  curveto
195 317 187 343 187 371  curveto
187 399 199 437 225 485  curveto
250 533 263 567 263 589  curveto
263 610 257 628 244 643  curveto
232 658 211 669 181 677  curveto
closepath
fill
		} def

	/asciitilde
		{
508 329 moveto
530 329 lineto
529 287 517 254 494 230  curveto
471 206 444 194 411 194  curveto
396 194 380 196 362 201  curveto
345 206 300 224 229 253  curveto
178 274 143 284 122 284  curveto
99 284 80 277 64 263  curveto
48 249 37 226 31 195  curveto
9 195 lineto
11 239 23 272 45 296  curveto
68 319 94 331 124 331  curveto
138 331 153 328 167 324  curveto
201 314 246 297 301 274  curveto
356 250 395 238 417 238  curveto
442 238 462 246 479 262  curveto
496 277 505 300 508 329  curveto
closepath
fill
		} def

	/exclamdown
		{
262 478 moveto
276 478 288 473 297 463  curveto
307 453 312 441 312 427  curveto
312 414 307 402 297 392  curveto
288 382 276 377 262 377  curveto
248 377 236 382 227 392  curveto
217 402 212 414 212 427  curveto
212 441 217 453 227 463  curveto
236 473 248 478 262 478  curveto
closepath
229 300 moveto
248 300 lineto
232 241 221 196 214 165  curveto
208 134 201 94 192 43  curveto
176 -59 166 -119 163 -137  curveto
156 -166 146 -188 131 -204  curveto
124 -212 114 -215 102 -215  curveto
93 -215 86 -212 79 -205  curveto
73 -197 70 -188 70 -176  curveto
70 -162 73 -145 79 -124  curveto
93 -78 119 -5 158 96  curveto
177 144 187 171 189 176  curveto
195 194 209 235 229 300  curveto
closepath
fill
		} def

	/cent
		{
415 107 moveto
386 68 356 40 324 21  curveto
291 2 254 -8 210 -11  curveto
158 -184 lineto
129 -184 lineto
182 -11 lineto
142 -7 111 7 89 32  curveto
66 58 55 90 55 130  curveto
55 202 81 269 133 331  curveto
184 392 245 429 316 441  curveto
375 636 lineto
402 636 lineto
345 441 lineto
383 441 411 434 427 420  curveto
444 405 453 386 453 362  curveto
453 343 448 327 437 315  curveto
427 303 416 297 402 297  curveto
392 297 383 300 377 306  curveto
370 312 367 320 367 330  curveto
367 336 368 342 371 348  curveto
374 353 380 360 389 370  curveto
398 380 402 388 402 395  curveto
402 398 401 402 398 405  curveto
394 410 388 414 381 416  curveto
373 418 359 419 339 419  curveto
224 33 lineto
244 32 lineto
298 32 351 61 402 120  curveto
415 107 lineto
closepath
197 40 moveto
309 414 lineto
280 401 256 386 237 369  curveto
205 338 181 303 164 263  curveto
147 224 138 183 138 142  curveto
138 115 144 92 155 74  curveto
163 62 177 50 197 40  curveto
closepath
fill
		} def

	/sterling
		{
281 362 moveto
413 362 lineto
400 320 lineto
271 320 lineto
253 241 231 171 205 109  curveto
217 104 233 98 251 90  curveto
281 76 304 68 321 63  curveto
337 58 353 56 366 56  curveto
380 56 393 59 406 66  curveto
418 72 430 82 440 95  curveto
461 95 lineto
443 58 421 31 395 12  curveto
370 -5 341 -15 309 -15  curveto
289 -15 269 -11 251 -2  curveto
232 5 206 22 172 49  curveto
158 27 143 11 129 0  curveto
114 -9 99 -15 83 -15  curveto
66 -15 52 -9 41 1  curveto
29 12 23 26 23 43  curveto
23 65 33 84 51 101  curveto
69 117 92 125 120 125  curveto
125 125 130 125 136 125  curveto
143 125 150 124 157 123  curveto
164 158 172 223 182 320  curveto
69 320 lineto
82 362 lineto
188 362 lineto
216 486 252 571 298 618  curveto
335 656 379 675 430 675  curveto
458 675 481 667 498 652  curveto
515 636 524 618 524 598  curveto
524 584 520 573 512 565  curveto
504 557 494 553 482 553  curveto
469 553 458 558 449 568  curveto
444 573 439 585 435 603  curveto
430 621 427 631 423 635  curveto
416 643 408 647 398 647  curveto
386 647 375 642 365 632  curveto
349 616 335 586 321 542  curveto
315 522 302 462 281 362  curveto
closepath
142 70 moveto
132 76 124 79 116 82  curveto
108 85 102 86 96 86  curveto
83 86 72 82 63 73  curveto
54 64 49 54 49 42  curveto
49 33 52 24 59 18  curveto
65 11 72 7 81 7  curveto
91 7 102 12 113 21  curveto
123 31 133 47 142 70  curveto
closepath
fill
		} def

	/fraction
		{
333 675 moveto
-123 -26 lineto
-166 -26 lineto
290 675 lineto
333 675 lineto
closepath
fill
		} def

	/yen
		{
296 216 moveto
517 216 lineto
506 184 lineto
286 184 lineto
271 135 lineto
261 100 256 74 256 57  curveto
256 45 260 37 268 31  curveto
278 23 299 19 331 18  curveto
324 0 lineto
72 0 lineto
77 18 lineto
104 19 122 22 129 25  curveto
142 32 152 41 160 53  curveto
165 61 174 85 186 125  curveto
204 184 lineto
-6 184 lineto
2 216 lineto
214 216 lineto
245 318 lineto
23 318 lineto
33 351 lineto
236 351 lineto
176 547 lineto
164 585 153 610 144 621  curveto
134 633 120 640 102 643  curveto
106 662 lineto
324 662 lineto
319 643 lineto
290 643 271 639 261 632  curveto
251 624 247 614 247 602  curveto
247 588 251 567 259 540  curveto
314 351 lineto
449 536 lineto
478 577 493 604 493 618  curveto
493 623 489 628 483 633  curveto
474 639 456 642 429 643  curveto
434 662 lineto
622 662 lineto
617 643 lineto
598 641 580 634 564 623  curveto
548 612 527 588 500 551  curveto
354 351 lineto
547 351 lineto
537 318 lineto
330 318 lineto
324 309 lineto
296 216 lineto
closepath
fill
		} def

	/florin
		{
335 427 moveto
422 427 lineto
414 395 lineto
329 395 lineto
312 307 284 192 245 49  curveto
214 -61 181 -134 145 -169  curveto
117 -196 89 -210 60 -210  curveto
42 -210 27 -205 17 -195  curveto
6 -185 0 -173 0 -159  curveto
0 -146 4 -136 12 -127  curveto
20 -119 28 -115 38 -115  curveto
47 -115 54 -118 60 -124  curveto
67 -130 70 -136 70 -143  curveto
70 -150 68 -156 63 -161  curveto
60 -165 58 -168 58 -170  curveto
58 -173 59 -175 62 -177  curveto
64 -180 67 -181 70 -181  curveto
77 -181 83 -179 88 -176  curveto
98 -170 108 -160 117 -145  curveto
127 -129 136 -100 146 -58  curveto
148 -51 162 16 188 144  curveto
191 155 211 239 249 395  curveto
162 395 lineto
169 427 lineto
202 429 222 432 230 434  curveto
239 437 245 442 251 450  curveto
259 461 269 483 280 515  curveto
304 584 327 628 349 648  curveto
370 667 394 677 420 677  curveto
441 677 457 671 469 661  curveto
481 650 487 637 487 622  curveto
487 611 484 602 478 595  curveto
471 588 463 584 454 584  curveto
446 584 438 587 432 593  curveto
426 599 423 605 423 612  curveto
423 617 425 623 429 629  curveto
432 635 434 639 434 642  curveto
434 645 433 648 430 651  curveto
427 653 423 654 417 654  curveto
407 654 397 650 389 643  curveto
377 632 370 618 366 602  curveto
357 562 347 504 335 427  curveto
closepath
fill
		} def

	/section
		{
265 374 moveto
244 402 230 426 222 446  curveto
215 466 211 488 211 511  curveto
211 560 227 601 259 634  curveto
291 666 330 683 376 683  curveto
413 683 445 671 471 649  curveto
496 626 509 604 509 580  curveto
509 570 505 560 497 551  curveto
492 545 484 542 475 542  curveto
465 542 457 545 451 552  curveto
445 558 441 573 437 596  curveto
433 618 426 634 415 643  curveto
399 655 380 662 360 662  curveto
332 662 307 651 286 630  curveto
265 609 254 583 254 554  curveto
254 528 259 506 269 486  curveto
278 466 300 436 336 397  curveto
371 358 395 323 409 292  curveto
418 271 422 249 422 224  curveto
422 187 411 157 387 133  curveto
364 109 335 97 302 97  curveto
288 97 272 101 254 108  curveto
277 76 293 49 301 29  curveto
309 8 313 -12 313 -34  curveto
313 -81 297 -120 264 -153  curveto
231 -186 191 -203 143 -203  curveto
100 -203 65 -191 38 -167  curveto
11 -143 -1 -117 -1 -88  curveto
-1 -76 1 -66 8 -59  curveto
15 -51 22 -47 30 -47  curveto
39 -47 48 -51 55 -59  curveto
63 -67 69 -81 72 -103  curveto
77 -131 87 -151 102 -164  curveto
116 -177 135 -183 158 -183  curveto
188 -183 215 -173 237 -152  curveto
259 -131 270 -106 270 -76  curveto
270 -54 265 -33 256 -12  curveto
248 7 231 32 207 61  curveto
159 115 130 154 119 177  curveto
108 201 102 226 102 254  curveto
102 292 113 322 136 345  curveto
159 368 189 379 225 379  curveto
236 379 250 377 265 374  curveto
closepath
221 362 moveto
200 362 183 355 168 341  curveto
153 327 146 310 146 292  curveto
146 249 163 209 198 171  curveto
233 134 268 115 303 115  curveto
321 115 338 122 352 136  curveto
366 150 373 167 373 187  curveto
373 215 364 244 348 273  curveto
332 302 312 324 288 339  curveto
264 355 242 362 221 362  curveto
closepath
fill
		} def

	/currency
		{
418 497 moveto
488 566 lineto
516 539 lineto
446 470 lineto
479 427 496 381 496 333  curveto
496 282 479 236 446 194  curveto
516 123 lineto
488 96 lineto
418 166 lineto
374 132 330 116 286 116  curveto
257 116 230 121 202 131  curveto
175 141 155 152 142 166  curveto
71 96 lineto
43 123 lineto
114 194 lineto
81 232 64 278 64 332  curveto
64 383 81 429 114 470  curveto
43 539 lineto
71 566 lineto
142 497 lineto
159 512 180 524 207 533  curveto
233 542 257 547 281 547  curveto
304 547 327 543 352 534  curveto
377 526 399 513 418 497  curveto
closepath
280 507 moveto
231 507 189 490 155 455  curveto
121 421 104 379 104 330  curveto
104 282 121 241 155 207  curveto
190 172 231 155 280 155  curveto
328 155 370 172 405 207  curveto
440 242 457 283 457 331  curveto
457 361 449 390 433 418  curveto
417 447 395 469 367 484  curveto
339 500 310 507 280 507  curveto
closepath
fill
		} def

	/quotesingle
		{
131 392 moveto
146 536 lineto
150 577 154 605 159 619  curveto
165 640 174 654 185 663  curveto
196 672 209 677 223 677  curveto
234 677 244 673 250 667  curveto
257 660 261 652 261 642  curveto
261 635 259 626 256 617  curveto
252 605 240 578 220 536  curveto
152 392 lineto
131 392 lineto
closepath
fill
		} def

	/quotedblleft
		{
334 662 moveto
310 652 289 636 271 616  curveto
263 606 258 595 258 581  curveto
258 574 259 569 261 564  curveto
262 562 266 557 273 548  curveto
281 539 285 533 287 529  curveto
289 523 291 518 291 512  curveto
291 499 286 487 276 476  curveto
266 466 254 461 241 461  curveto
227 461 216 466 206 477  curveto
197 487 192 501 192 519  curveto
192 538 197 557 207 578  curveto
217 598 232 616 252 633  curveto
266 644 289 659 323 677  curveto
334 662 lineto
closepath
559 662 moveto
526 643 505 628 496 616  curveto
486 605 482 593 482 582  curveto
482 575 483 569 485 564  curveto
486 562 490 556 498 548  curveto
505 539 510 534 511 530  curveto
514 525 515 519 515 513  curveto
515 499 510 487 500 476  curveto
490 466 479 461 465 461  curveto
451 461 440 466 430 476  curveto
420 487 416 500 416 518  curveto
416 546 426 573 446 600  curveto
466 627 500 651 549 673  curveto
559 662 lineto
closepath
fill
		} def

	/guillemotleft
		{
295 449 moveto
129 215 lineto
183 -15 lineto
161 -15 lineto
41 215 lineto
270 449 lineto
295 449 lineto
closepath
482 449 moveto
316 215 lineto
370 -15 lineto
349 -15 lineto
228 215 lineto
456 449 lineto
482 449 lineto
closepath
fill
		} def

	/guilsinglleft
		{
311 449 moveto
145 216 lineto
199 -15 lineto
178 -15 lineto
56 216 lineto
284 449 lineto
311 449 lineto
closepath
fill
		} def

	/guilsinglright
		{
22 -15 moveto
188 218 lineto
134 449 lineto
155 449 lineto
277 218 lineto
48 -15 lineto
22 -15 lineto
closepath
fill
		} def

	/fi
		{
199 398 moveto
146 183 lineto
128 112 108 49 86 -5  curveto
64 -59 40 -102 13 -133  curveto
-12 -164 -39 -187 -66 -202  curveto
-83 -211 -101 -215 -120 -215  curveto
-140 -215 -158 -209 -172 -198  curveto
-183 -189 -188 -179 -188 -167  curveto
-188 -157 -184 -148 -176 -140  curveto
-167 -132 -157 -128 -145 -128  curveto
-136 -128 -129 -131 -123 -136  curveto
-117 -141 -114 -147 -114 -154  curveto
-114 -161 -117 -167 -123 -173  curveto
-128 -178 -132 -182 -133 -185  curveto
-132 -188 lineto
-131 -190 -129 -192 -125 -193  curveto
-122 -194 -119 -195 -115 -195  curveto
-94 -195 -76 -187 -60 -173  curveto
-33 -149 -12 -114 3 -68  curveto
6 -60 29 26 72 192  curveto
124 398 lineto
37 398 lineto
45 430 lineto
64 430 lineto
86 430 104 434 119 442  curveto
127 448 135 459 144 475  curveto
178 544 204 589 221 612  curveto
238 634 262 653 293 669  curveto
324 686 358 694 395 694  curveto
431 694 457 687 474 674  curveto
491 660 500 644 500 625  curveto
500 612 496 602 488 594  curveto
480 586 471 582 460 582  curveto
449 582 440 586 432 593  curveto
425 598 422 606 422 615  curveto
422 622 425 629 431 636  curveto
437 644 439 649 439 651  curveto
439 656 437 659 432 663  curveto
424 669 413 671 399 671  curveto
373 671 348 663 322 647  curveto
296 630 276 608 260 581  curveto
245 554 227 504 208 430  curveto
336 430 lineto
371 430 395 430 409 432  curveto
422 433 437 437 454 441  curveto
468 441 lineto
370 97 lineto
364 77 361 63 361 55  curveto
361 52 362 49 365 46  curveto
368 43 371 42 374 42  curveto
380 42 386 45 394 50  curveto
408 60 427 80 450 110  curveto
468 97 lineto
438 56 409 26 380 7  curveto
361 -5 342 -11 326 -11  curveto
312 -11 301 -7 292 0  curveto
284 7 280 17 280 28  curveto
280 39 284 59 292 86  curveto
362 329 lineto
369 353 372 369 372 377  curveto
372 381 371 384 369 386  curveto
365 391 360 395 354 396  curveto
349 398 337 398 317 398  curveto
199 398 lineto
closepath
fill
		} def

	/fl
		{
388 398 moveto
204 398 lineto
148 182 lineto
110 33 68 -70 21 -128  curveto
-24 -186 -73 -215 -122 -215  curveto
-143 -215 -160 -211 -171 -201  curveto
-183 -192 -188 -181 -188 -168  curveto
-188 -157 -184 -147 -176 -139  curveto
-167 -131 -157 -126 -145 -126  curveto
-135 -126 -127 -129 -121 -135  curveto
-115 -141 -112 -147 -112 -153  curveto
-112 -160 -115 -166 -123 -172  curveto
-126 -176 -128 -179 -129 -180  curveto
-130 -183 lineto
-130 -185 -129 -188 -126 -190  curveto
-123 -193 -118 -194 -113 -194  curveto
-93 -194 -76 -187 -61 -174  curveto
-34 -150 -13 -115 3 -68  curveto
16 -34 40 52 75 193  curveto
127 398 lineto
40 398 lineto
49 430 lineto
69 430 lineto
94 430 112 432 122 438  curveto
131 444 140 455 149 473  curveto
190 558 229 617 267 647  curveto
305 678 349 694 399 694  curveto
412 694 424 693 434 690  curveto
444 687 457 682 474 674  curveto
488 675 498 677 505 679  curveto
512 682 520 687 530 694  curveto
549 694 lineto
374 98 lineto
369 79 366 66 366 58  curveto
366 54 368 50 370 48  curveto
373 45 376 43 379 43  curveto
386 43 393 46 400 52  curveto
418 64 436 84 456 110  curveto
474 98 lineto
443 55 414 25 386 7  curveto
366 -5 348 -11 332 -11  curveto
318 -11 307 -7 299 0  curveto
290 8 286 18 286 31  curveto
286 43 290 62 297 86  curveto
388 398 lineto
closepath
397 430 moveto
443 587 lineto
435 596 431 604 431 612  curveto
431 619 434 627 441 635  curveto
447 642 451 648 451 651  curveto
451 655 448 658 443 662  curveto
435 667 423 669 406 669  curveto
379 669 353 662 328 647  curveto
303 632 282 611 267 583  curveto
252 556 234 505 212 430  curveto
397 430 lineto
closepath
fill
		} def

	/endash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/dagger
		{
334 328 moveto
305 276 279 219 255 158  curveto
231 97 190 -22 133 -202  curveto
114 -202 lineto
191 36 229 207 229 311  curveto
229 328 lineto
247 344 262 361 273 379  curveto
285 396 295 417 303 441  curveto
279 439 251 431 221 418  curveto
191 405 170 399 158 399  curveto
143 399 130 404 120 413  curveto
111 420 107 430 107 441  curveto
107 453 112 463 122 471  curveto
131 479 144 483 160 483  curveto
175 483 197 479 224 469  curveto
242 463 256 459 264 457  curveto
272 455 286 454 308 453  curveto
314 475 317 502 317 533  curveto
315 599 lineto
315 622 322 642 336 659  curveto
346 671 359 677 375 677  curveto
387 677 397 672 406 664  curveto
414 655 418 644 418 630  curveto
418 618 416 606 412 596  curveto
406 581 394 562 375 537  curveto
357 513 346 496 340 488  curveto
335 479 330 467 326 453  curveto
346 454 359 456 366 457  curveto
373 458 385 462 400 467  curveto
432 478 456 483 472 483  curveto
486 483 498 479 507 470  curveto
516 462 521 452 521 441  curveto
521 430 516 420 507 411  curveto
498 402 486 398 472 398  curveto
463 398 454 399 446 401  curveto
438 404 422 410 397 421  curveto
373 431 348 438 321 441  curveto
318 421 316 404 316 392  curveto
316 371 322 349 334 328  curveto
closepath
fill
		} def

	/daggerdbl
		{
337 370 moveto
309 347 285 315 267 275  curveto
249 235 240 197 240 159  curveto
240 145 243 128 250 107  curveto
218 80 195 44 180 0  curveto
209 1 235 6 258 14  curveto
281 22 298 26 311 26  curveto
321 26 329 23 337 16  curveto
344 8 348 0 348 -9  curveto
348 -19 345 -28 337 -35  curveto
330 -42 322 -45 312 -45  curveto
301 -45 281 -40 252 -29  curveto
231 -21 205 -16 173 -15  curveto
166 -45 162 -77 162 -109  curveto
161 -152 155 -181 145 -195  curveto
135 -208 123 -215 109 -215  curveto
102 -215 94 -212 87 -204  curveto
80 -196 76 -188 76 -178  curveto
76 -158 86 -132 107 -101  curveto
127 -69 143 -41 153 -15  curveto
125 -18 97 -24 71 -34  curveto
51 -41 35 -44 22 -44  curveto
12 -44 4 -41 -3 -34  curveto
-10 -27 -14 -18 -14 -9  curveto
-14 0 -10 8 -2 15  curveto
4 23 12 27 21 27  curveto
34 27 53 22 78 14  curveto
103 5 130 0 160 0  curveto
165 19 167 34 167 46  curveto
167 66 161 87 148 107  curveto
178 129 201 161 220 201  curveto
238 241 247 280 247 319  curveto
247 334 244 351 237 370  curveto
253 383 266 396 276 410  curveto
285 424 296 447 309 478  curveto
282 476 256 472 232 463  curveto
208 455 189 451 175 451  curveto
166 451 157 455 150 462  curveto
142 470 139 479 139 488  curveto
139 498 142 506 150 513  curveto
158 521 167 524 177 524  curveto
190 524 208 520 234 510  curveto
259 501 286 496 314 495  curveto
323 524 327 557 327 595  curveto
327 633 332 659 342 673  curveto
353 687 365 694 378 694  curveto
387 694 394 690 401 683  curveto
408 676 412 668 412 659  curveto
412 637 401 610 381 580  curveto
360 549 344 521 333 495  curveto
360 497 385 502 409 510  curveto
433 519 451 523 465 523  curveto
475 523 483 519 491 511  curveto
499 504 503 495 503 486  curveto
503 477 500 469 492 462  curveto
484 454 475 451 465 451  curveto
452 451 432 455 407 464  curveto
381 472 355 477 328 478  curveto
322 456 320 439 320 425  curveto
320 408 326 390 337 370  curveto
closepath
fill
		} def

	/periodcentered
		{
125 385 moveto
140 385 153 379 163 369  curveto
173 358 179 346 179 331  curveto
179 316 173 303 163 292  curveto
152 282 139 276 125 276  curveto
110 276 97 282 86 292  curveto
76 303 70 316 70 331  curveto
70 346 76 358 86 369  curveto
97 379 110 385 125 385  curveto
closepath
fill
		} def

	/paragraph
		{
449 635 moveto
449 -215 lineto
414 -215 lineto
414 635 lineto
322 635 lineto
322 -215 lineto
287 -215 lineto
287 293 lineto
224 296 178 304 147 318  curveto
116 331 93 353 77 382  curveto
60 410 52 443 52 479  curveto
52 514 59 544 73 566  curveto
92 598 117 621 149 637  curveto
180 654 221 662 272 662  curveto
514 662 lineto
514 635 lineto
449 635 lineto
closepath
fill
		} def

	/bullet
		{
207 453 moveto
240 453 269 441 293 417  curveto
317 393 329 364 329 330  curveto
329 296 317 267 293 243  curveto
269 219 240 208 207 208  curveto
173 208 144 219 120 243  curveto
96 267 84 296 84 330  curveto
84 364 96 393 120 417  curveto
143 441 172 453 207 453  curveto
closepath
fill
		} def

	/quotesinglbase
		{
31 -109 moveto
56 -98 76 -84 91 -67  curveto
103 -54 108 -42 108 -30  curveto
108 -24 107 -19 105 -14  curveto
104 -11 100 -6 92 1  curveto
84 9 80 14 79 17  curveto
76 23 75 29 75 36  curveto
75 50 80 62 90 72  curveto
99 82 111 87 124 87  curveto
137 87 149 82 159 71  curveto
169 61 174 47 174 31  curveto
174 2 163 -27 140 -56  curveto
117 -86 84 -109 41 -125  curveto
31 -109 lineto
closepath
fill
		} def

	/quotedblbase
		{
238 -109 moveto
263 -99 284 -84 301 -64  curveto
310 -54 314 -43 314 -29  curveto
314 -23 313 -17 312 -13  curveto
311 -11 307 -6 300 2  curveto
292 10 288 17 286 21  curveto
283 26 282 32 282 38  curveto
282 51 287 63 297 73  curveto
307 83 318 88 332 88  curveto
345 88 357 83 366 72  curveto
376 61 381 48 381 30  curveto
381 11 376 -8 366 -28  curveto
356 -48 341 -66 321 -83  curveto
307 -94 283 -109 249 -127  curveto
238 -109 lineto
closepath
14 -109 moveto
47 -91 68 -77 77 -65  curveto
86 -53 91 -42 91 -31  curveto
91 -24 90 -18 87 -13  curveto
86 -11 82 -6 75 2  curveto
68 10 63 16 62 20  curveto
59 25 58 30 58 36  curveto
58 50 63 62 73 73  curveto
83 83 94 88 107 88  curveto
121 88 133 83 143 72  curveto
152 62 157 48 157 30  curveto
157 -33 113 -86 24 -127  curveto
14 -109 lineto
closepath
fill
		} def

	/quotedblright
		{
406 479 moveto
430 489 451 504 469 524  curveto
478 534 482 546 482 559  curveto
482 566 481 571 479 575  curveto
478 577 474 583 467 591  curveto
460 600 455 606 453 610  curveto
451 615 449 621 449 627  curveto
449 640 454 652 464 662  curveto
474 672 486 677 500 677  curveto
513 677 524 672 534 661  curveto
544 651 548 637 548 620  curveto
548 600 543 580 533 560  curveto
523 540 508 522 488 505  curveto
475 494 451 479 417 461  curveto
406 479 lineto
closepath
182 479 moveto
215 497 236 512 245 523  curveto
254 535 258 547 258 558  curveto
258 564 257 570 255 575  curveto
254 577 250 583 242 591  curveto
235 600 231 606 229 609  curveto
227 614 226 620 226 625  curveto
226 639 230 652 240 662  curveto
250 672 262 677 275 677  curveto
289 677 301 672 310 661  curveto
320 651 325 637 325 619  curveto
325 555 280 502 191 461  curveto
182 479 lineto
closepath
fill
		} def

	/guillemotright
		{
204 -15 moveto
370 217 lineto
316 449 lineto
338 449 lineto
459 217 lineto
230 -15 lineto
204 -15 lineto
closepath
18 -15 moveto
183 217 lineto
129 449 lineto
151 449 lineto
272 217 lineto
43 -15 lineto
18 -15 lineto
closepath
fill
		} def

	/ellipsis
		{
184 94 moveto
199 94 212 89 222 78  curveto
233 68 238 55 238 40  curveto
238 25 232 12 222 2  curveto
211 -8 199 -13 184 -13  curveto
169 -13 156 -8 145 2  curveto
135 12 129 25 129 40  curveto
129 55 135 68 145 79  curveto
156 89 169 94 184 94  curveto
closepath
442 94 moveto
457 94 470 89 480 78  curveto
491 68 496 55 496 40  curveto
496 25 491 12 480 2  curveto
470 -8 457 -13 442 -13  curveto
427 -13 414 -8 404 2  curveto
393 12 388 25 388 40  curveto
388 55 393 68 404 79  curveto
414 89 427 94 442 94  curveto
closepath
700 94 moveto
715 94 728 89 739 78  curveto
749 68 754 55 754 40  curveto
754 25 749 12 739 2  curveto
728 -8 715 -13 700 -13  curveto
685 -13 672 -8 662 2  curveto
651 12 646 25 646 40  curveto
646 55 651 68 662 79  curveto
672 89 685 94 700 94  curveto
closepath
fill
		} def

	/perthousand
		{
646 677 moveto
104 -26 lineto
62 -26 lineto
605 677 lineto
646 677 lineto
closepath
254 677 moveto
284 677 311 664 334 639  curveto
357 614 368 582 368 543  curveto
368 483 348 431 309 388  curveto
269 344 227 322 181 322  curveto
147 322 119 334 97 358  curveto
75 382 64 414 64 453  curveto
64 491 74 528 93 564  curveto
113 600 138 628 169 647  curveto
200 667 229 677 254 677  curveto
closepath
257 656 moveto
242 656 229 650 217 639  curveto
193 616 172 581 153 533  curveto
135 486 126 441 126 399  curveto
126 382 131 367 140 356  curveto
150 346 161 340 174 340  curveto
190 340 203 345 213 355  curveto
236 375 257 410 276 460  curveto
295 509 305 555 305 598  curveto
305 615 300 629 290 640  curveto
280 651 269 656 257 656  curveto
closepath
528 327 moveto
560 327 588 314 611 290  curveto
634 266 646 234 646 195  curveto
646 134 626 82 586 39  curveto
546 -4 504 -26 459 -26  curveto
426 -26 398 -14 375 9  curveto
352 33 341 64 341 103  curveto
341 163 361 215 401 260  curveto
442 304 484 327 528 327  curveto
closepath
535 307 moveto
519 307 504 300 491 288  curveto
469 267 449 232 431 183  curveto
413 134 404 90 404 52  curveto
404 33 408 19 417 8  curveto
427 -1 438 -6 451 -6  curveto
467 -6 481 -1 492 8  curveto
515 29 535 63 554 111  curveto
573 159 583 203 583 243  curveto
583 263 578 279 569 290  curveto
559 301 548 307 535 307  curveto
closepath
872 326 moveto
903 326 930 314 953 290  curveto
975 266 986 233 986 192  curveto
986 154 976 117 957 82  curveto
938 47 914 20 885 1  curveto
856 -16 828 -26 800 -26  curveto
767 -26 740 -14 717 10  curveto
694 34 683 66 683 104  curveto
683 163 703 215 744 260  curveto
784 304 827 326 872 326  curveto
closepath
877 306 moveto
861 306 847 301 835 290  curveto
814 271 794 237 774 187  curveto
755 138 746 92 746 50  curveto
746 33 750 19 760 9  curveto
770 -1 782 -6 795 -6  curveto
810 -6 822 -2 832 5  curveto
852 25 873 59 894 108  curveto
915 157 925 203 925 244  curveto
925 263 920 278 909 292  curveto
901 301 890 306 877 306  curveto
closepath
fill
		} def

	/questiondown
		{
347 477 moveto
361 477 373 472 383 462  curveto
392 453 397 441 397 427  curveto
397 413 392 401 382 392  curveto
373 382 361 377 347 377  curveto
333 377 322 382 312 392  curveto
302 401 297 413 297 427  curveto
297 441 302 453 312 462  curveto
322 472 333 477 347 477  curveto
closepath
318 299 moveto
336 299 lineto
332 257 322 222 307 192  curveto
291 162 259 121 211 69  curveto
170 26 143 -9 128 -38  curveto
118 -58 113 -79 113 -101  curveto
113 -127 122 -149 141 -166  curveto
159 -184 182 -193 211 -193  curveto
239 -193 261 -187 278 -175  curveto
288 -169 293 -161 293 -152  curveto
293 -145 290 -136 285 -125  curveto
280 -113 277 -104 277 -96  curveto
277 -85 281 -76 289 -69  curveto
296 -61 306 -58 317 -58  curveto
329 -58 338 -62 346 -70  curveto
354 -78 358 -89 358 -102  curveto
358 -119 352 -137 341 -154  curveto
329 -172 311 -186 286 -198  curveto
262 -210 234 -215 203 -215  curveto
153 -215 112 -201 81 -173  curveto
51 -145 35 -112 35 -76  curveto
35 -47 42 -22 57 0  curveto
76 27 111 59 164 95  curveto
217 131 253 163 273 191  curveto
293 218 308 254 318 299  curveto
closepath
fill
		} def

	/grave
		{
283 684 moveto
336 516 lineto
321 516 lineto
175 684 lineto
283 684 lineto
closepath
fill
		} def

	/acute
		{
359 684 moveto
216 517 lineto
199 517 lineto
250 684 lineto
359 684 lineto
closepath
fill
		} def

	/circumflex
		{
349 677 moveto
385 522 lineto
375 522 lineto
292 621 lineto
137 522 lineto
124 522 lineto
275 677 lineto
349 677 lineto
closepath
fill
		} def

	/tilde
		{
393 666 moveto
407 666 lineto
408 625 400 593 381 571  curveto
363 549 342 538 317 538  curveto
294 538 266 548 235 567  curveto
204 587 185 599 178 602  curveto
172 605 166 606 159 606  curveto
147 606 137 602 130 593  curveto
122 585 116 567 112 540  curveto
96 540 lineto
98 585 108 618 125 637  curveto
143 657 164 667 188 667  curveto
212 667 241 655 275 632  curveto
309 610 333 598 346 598  curveto
357 598 366 602 374 611  curveto
383 622 389 640 393 666  curveto
closepath
fill
		} def

	/macron
		{
613 713 moveto
96 713 lineto
96 754 lineto
613 754 lineto
613 713 lineto
closepath
fill
		} def

	/breve
		{
406 686 moveto
421 686 lineto
399 638 372 602 341 578  curveto
310 554 280 542 251 542  curveto
220 542 195 554 175 577  curveto
155 601 144 637 143 686  curveto
159 686 lineto
164 662 174 644 190 632  curveto
206 619 228 613 255 613  curveto
310 613 360 637 406 686  curveto
closepath
fill
		} def

	/dotaccent
		{
271 654 moveto
285 654 298 649 308 638  curveto
318 628 323 616 323 602  curveto
323 587 318 575 308 565  curveto
298 554 285 549 271 549  curveto
257 549 244 554 234 565  curveto
224 575 219 587 219 602  curveto
219 616 224 628 234 638  curveto
244 649 256 654 271 654  curveto
closepath
fill
		} def

	/dieresis
		{
356 654 moveto
371 654 383 649 394 638  curveto
404 628 409 616 409 601  curveto
409 587 404 574 394 564  curveto
383 554 371 549 356 549  curveto
342 549 330 554 320 564  curveto
309 574 304 587 304 601  curveto
304 616 309 628 319 638  curveto
329 649 342 654 356 654  curveto
closepath
183 654 moveto
197 654 210 649 220 638  curveto
230 628 235 616 235 601  curveto
235 587 230 574 220 564  curveto
210 554 197 549 183 549  curveto
168 549 156 554 146 564  curveto
135 574 130 587 130 601  curveto
130 616 135 628 146 638  curveto
156 649 168 654 183 654  curveto
closepath
fill
		} def

	/ring
		{
278 693 moveto
304 693 325 684 343 666  curveto
361 649 370 627 370 601  curveto
370 576 361 554 343 536  curveto
325 518 303 509 278 509  curveto
252 509 231 518 213 536  curveto
195 554 186 576 186 601  curveto
186 627 194 649 212 666  curveto
230 684 252 693 278 693  curveto
closepath
278 662 moveto
261 662 247 656 235 644  curveto
223 632 217 618 217 601  curveto
217 584 223 570 235 558  curveto
247 546 261 541 278 541  curveto
295 541 309 546 321 558  curveto
333 570 339 584 339 601  curveto
339 618 333 632 321 644  curveto
310 656 295 662 278 662  curveto
closepath
fill
		} def

	/cedilla
		{
126 14 moveto
104 -22 lineto
124 -26 139 -35 149 -47  curveto
159 -60 165 -75 165 -93  curveto
165 -115 155 -134 137 -149  curveto
112 -170 83 -180 50 -180  curveto
32 -180 9 -177 -18 -169  curveto
-12 -153 lineto
4 -157 18 -159 29 -159  curveto
50 -159 66 -154 78 -144  curveto
89 -134 95 -122 95 -108  curveto
95 -96 92 -87 85 -82  curveto
76 -74 62 -70 44 -70  curveto
98 14 lineto
126 14 lineto
closepath
fill
		} def

	/hungarumlaut
		{
138 0 moveto
138 625 lineto
638 625 lineto
638 0 lineto
138 0 lineto
closepath
154 15 moveto
623 15 lineto
623 609 lineto
154 609 lineto
154 15 lineto
closepath
fill
		} def

	/ogonek
		{
77 0 moveto
102 0 lineto
94 -21 90 -38 90 -51  curveto
90 -76 99 -97 118 -114  curveto
137 -132 162 -141 192 -141  curveto
208 -141 228 -137 251 -129  curveto
262 -144 lineto
238 -159 218 -170 201 -176  curveto
185 -181 168 -184 150 -184  curveto
115 -184 87 -175 67 -156  curveto
48 -138 38 -115 38 -87  curveto
38 -56 51 -27 77 0  curveto
closepath
fill
		} def

	/caron
		{
201 522 moveto
165 677 lineto
175 677 lineto
257 578 lineto
413 677 lineto
426 677 lineto
274 522 lineto
201 522 lineto
closepath
fill
		} def

	/emdash
		{
299 249 moveto
279 184 lineto
26 184 lineto
46 249 lineto
299 249 lineto
closepath
fill
		} def

	/AE
		{
536 331 moveto
470 106 lineto
464 85 461 70 461 63  curveto
461 56 465 50 472 43  curveto
479 37 490 34 504 34  curveto
563 34 lineto
675 34 756 84 806 184  curveto
825 184 lineto
761 0 lineto
273 0 lineto
278 18 lineto
306 18 327 22 341 32  curveto
359 45 374 70 386 109  curveto
423 235 lineto
219 235 lineto
148 148 lineto
123 116 107 94 100 80  curveto
95 71 93 62 93 53  curveto
93 43 97 35 105 28  curveto
113 22 128 18 148 18  curveto
143 0 lineto
-52 0 lineto
-47 18 lineto
-27 19 -9 25 7 36  curveto
23 46 50 75 87 121  curveto
435 553 lineto
451 574 462 588 466 596  curveto
470 604 472 611 472 618  curveto
472 623 470 627 467 631  curveto
464 635 460 638 454 640  curveto
447 642 436 644 420 644  curveto
427 662 lineto
909 662 lineto
868 504 lineto
848 504 lineto
851 520 852 533 852 544  curveto
852 560 848 573 840 584  curveto
829 599 812 611 791 619  curveto
775 626 741 629 690 629  curveto
622 629 lineto
545 366 lineto
594 366 lineto
634 366 664 372 682 383  curveto
708 399 727 425 739 460  curveto
761 460 lineto
690 220 lineto
670 220 lineto
676 242 679 260 679 274  curveto
679 295 671 311 654 321  curveto
644 328 619 331 582 331  curveto
536 331 lineto
closepath
435 272 moveto
536 629 lineto
248 272 lineto
435 272 lineto
closepath
fill
		} def

	/ordfeminine
		{
376 677 moveto
314 478 lineto
309 461 307 450 307 443  curveto
307 441 307 439 309 437  curveto
311 435 313 434 315 434  curveto
318 434 322 436 327 439  curveto
335 445 346 457 359 474  curveto
371 467 lineto
341 426 311 405 283 405  curveto
274 405 267 407 262 411  curveto
258 416 255 422 255 429  curveto
255 439 258 452 262 467  curveto
269 489 lineto
241 456 216 432 193 419  curveto
176 410 160 405 144 405  curveto
128 405 114 411 103 423  curveto
92 435 86 451 86 472  curveto
86 501 96 533 115 567  curveto
135 602 159 628 187 648  curveto
215 667 240 677 261 677  curveto
275 677 286 674 294 668  curveto
302 662 309 652 314 637  curveto
326 670 lineto
376 677 lineto
closepath
265 664 moveto
241 664 217 648 192 617  curveto
155 571 137 526 137 482  curveto
137 469 141 458 148 450  curveto
155 442 163 438 173 438  curveto
197 438 224 458 256 496  curveto
288 534 304 574 304 617  curveto
304 632 300 644 293 652  curveto
286 660 277 664 265 664  curveto
closepath
fill
		} def

	/Lslash
		{
458 0 moveto
-28 0 lineto
-22 18 lineto
5 19 22 21 28 24  curveto
41 30 51 38 57 48  curveto
66 61 77 88 89 129  curveto
127 261 lineto
10 177 lineto
26 232 lineto
145 317 lineto
207 532 lineto
216 563 220 586 220 601  curveto
220 614 215 624 206 631  curveto
196 638 175 643 145 644  curveto
151 662 lineto
418 662 lineto
413 644 lineto
383 643 362 639 349 634  curveto
337 628 327 618 319 605  curveto
313 596 303 570 291 526  curveto
253 396 lineto
391 494 lineto
375 437 lineto
236 338 lineto
176 129 lineto
167 96 162 75 162 66  curveto
162 59 166 52 175 45  curveto
181 40 194 37 214 37  curveto
277 37 lineto
334 37 377 46 408 65  curveto
438 84 466 118 493 167  curveto
504 189 lineto
523 189 lineto
458 0 lineto
closepath
fill
		} def

	/Oslash
		{
646 621 moveto
710 688 lineto
737 662 lineto
670 594 lineto
702 547 718 498 718 448  curveto
718 377 697 303 655 226  curveto
613 149 558 89 490 47  curveto
422 5 355 -15 289 -15  curveto
231 -15 180 3 136 40  curveto
62 -35 lineto
35 -11 lineto
111 67 lineto
93 93 80 117 72 140  curveto
64 163 60 188 60 216  curveto
60 290 82 364 125 440  curveto
168 515 223 573 289 615  curveto
356 656 422 677 488 677  curveto
523 677 556 671 585 660  curveto
605 652 625 639 646 621  curveto
closepath
598 571 moveto
586 595 572 612 555 623  curveto
532 637 506 645 475 645  curveto
443 645 414 638 388 625  curveto
353 606 319 578 287 541  curveto
255 503 226 452 200 387  curveto
174 322 161 256 161 191  curveto
161 173 164 152 170 127  curveto
598 571 lineto
closepath
612 533 moveto
184 89 lineto
210 41 251 18 306 18  curveto
336 18 365 25 393 39  curveto
421 53 452 80 486 119  curveto
519 158 550 211 578 280  curveto
605 349 619 414 619 478  curveto
619 493 617 511 612 533  curveto
closepath
fill
		} def

	/OE
		{
883 183 moveto
821 0 lineto
496 0 lineto
445 0 402 0 366 -1  curveto
251 -6 lineto
206 -6 166 3 130 23  curveto
94 44 67 72 49 109  curveto
31 146 21 184 21 222  curveto
21 281 36 339 64 394  curveto
93 450 127 497 168 537  curveto
209 577 254 608 304 632  curveto
355 656 399 667 437 667  curveto
441 667 458 667 487 665  curveto
533 663 579 662 627 662  curveto
969 662 lineto
926 501 lineto
908 501 lineto
910 516 911 528 911 538  curveto
911 554 906 570 896 584  curveto
886 598 873 609 858 615  curveto
842 621 810 625 763 625  curveto
664 625 lineto
588 363 lineto
627 363 lineto
665 363 693 366 711 371  curveto
729 377 744 386 757 398  curveto
769 410 781 430 792 458  curveto
811 458 lineto
740 217 lineto
722 217 lineto
728 243 731 261 731 271  curveto
731 288 726 302 714 313  curveto
703 324 687 329 667 329  curveto
641 329 lineto
578 329 lineto
517 121 lineto
508 92 504 74 504 65  curveto
504 59 506 53 510 47  curveto
513 42 518 38 523 36  curveto
529 35 544 34 568 34  curveto
621 34 lineto
659 34 690 37 712 45  curveto
746 55 775 72 801 95  curveto
826 119 847 148 864 183  curveto
883 183 lineto
closepath
537 482 moveto
548 521 554 549 554 567  curveto
554 583 546 598 531 611  curveto
515 624 492 630 460 630  curveto
403 630 354 616 312 586  curveto
257 548 213 490 177 415  curveto
142 339 125 265 125 194  curveto
125 142 138 102 166 73  curveto
194 44 234 29 285 29  curveto
331 29 365 39 388 57  curveto
410 76 431 118 450 183  curveto
537 482 lineto
closepath
fill
		} def

	/ordmasculine
		{
393 587 moveto
393 539 374 497 336 460  curveto
299 423 257 405 209 405  curveto
179 405 156 413 138 431  curveto
120 448 111 470 111 497  curveto
111 541 130 583 168 620  curveto
206 658 249 677 295 677  curveto
324 677 348 668 366 651  curveto
384 634 393 613 393 587  curveto
closepath
340 605 moveto
340 623 335 637 326 647  curveto
316 657 304 662 288 662  curveto
256 662 228 641 202 599  curveto
176 558 163 517 163 478  curveto
163 459 168 445 178 435  curveto
188 425 201 419 217 419  curveto
247 419 274 440 301 481  curveto
327 522 340 563 340 605  curveto
closepath
fill
		} def

	/ae
		{
447 434 moveto
436 386 lineto
478 423 519 441 560 441  curveto
588 441 610 434 627 420  curveto
644 406 652 389 652 370  curveto
652 351 646 332 633 311  curveto
621 291 604 273 583 258  curveto
562 243 534 228 498 214  curveto
462 200 424 190 384 185  curveto
380 162 378 143 378 128  curveto
378 99 385 77 400 61  curveto
415 45 436 37 461 37  curveto
484 37 506 43 528 55  curveto
550 66 576 88 605 119  curveto
618 104 lineto
590 67 558 38 523 18  curveto
489 -1 456 -11 425 -11  curveto
389 -11 360 0 337 22  curveto
314 46 302 75 302 111  curveto
302 120 303 132 304 146  curveto
260 82 228 42 208 26  curveto
177 1 144 -11 109 -11  curveto
85 -11 64 -1 47 17  curveto
30 37 21 65 21 101  curveto
21 151 38 205 70 263  curveto
102 322 142 368 189 402  curveto
226 428 259 441 291 441  curveto
313 441 330 435 343 422  curveto
356 409 364 387 367 355  curveto
384 423 lineto
447 434 lineto
closepath
151 45 moveto
169 45 191 55 216 76  curveto
251 104 281 145 307 201  curveto
332 257 345 307 345 351  curveto
345 375 341 392 331 402  curveto
322 413 309 418 292 418  curveto
251 418 209 381 165 306  curveto
121 232 99 167 99 113  curveto
99 94 105 77 118 61  curveto
127 50 138 45 151 45  curveto
closepath
389 208 moveto
458 223 509 247 541 279  curveto
574 312 590 342 590 370  curveto
590 382 585 393 576 402  curveto
567 411 557 416 545 416  curveto
529 416 511 409 489 395  curveto
468 382 450 361 434 334  curveto
418 307 403 265 389 208  curveto
closepath
fill
		} def

	/dotlessi
		{
229 441 moveto
133 99 lineto
126 76 123 62 123 58  curveto
123 52 125 48 128 45  curveto
131 42 134 40 139 40  curveto
144 40 149 43 156 48  curveto
175 62 194 83 212 110  curveto
229 99 lineto
207 65 181 37 151 14  curveto
129 -3 108 -11 88 -11  curveto
75 -11 64 -7 55 0  curveto
47 8 42 18 42 30  curveto
42 42 47 62 55 90  curveto
118 309 lineto
129 344 134 367 134 376  curveto
134 383 131 389 126 394  curveto
121 398 114 400 105 400  curveto
98 400 83 399 61 395  curveto
61 414 lineto
229 441 lineto
closepath
fill
		} def

	/lslash
		{
300 694 moveto
208 386 lineto
289 437 lineto
278 397 lineto
199 347 lineto
130 112 lineto
121 81 117 63 117 61  curveto
117 55 118 51 121 48  curveto
124 44 128 42 132 42  curveto
138 42 145 46 155 53  curveto
171 65 189 84 208 112  curveto
224 101 lineto
197 59 169 29 141 9  curveto
119 -4 99 -11 81 -11  curveto
68 -11 58 -7 50 0  curveto
41 9 37 19 37 32  curveto
37 43 42 66 52 101  curveto
108 291 lineto
24 238 lineto
37 278 lineto
120 331 lineto
185 560 lineto
199 608 lineto
201 617 202 623 202 628  curveto
202 635 199 641 193 646  curveto
188 651 180 653 169 653  curveto
162 653 149 652 130 649  curveto
130 668 lineto
300 694 lineto
closepath
fill
		} def

	/oslash
		{
469 471 moveto
488 451 lineto
429 388 lineto
451 356 462 323 462 288  curveto
462 239 448 189 421 140  curveto
393 91 356 54 311 27  curveto
266 1 222 -11 177 -11  curveto
158 -11 142 -8 127 -3  curveto
113 2 97 11 81 24  curveto
21 -35 lineto
2 -15 lineto
62 45 lineto
39 77 27 108 27 140  curveto
27 187 42 235 70 284  curveto
99 333 136 371 183 399  curveto
230 427 275 441 319 441  curveto
335 441 350 439 364 434  curveto
378 430 393 421 410 409  curveto
469 471 lineto
closepath
374 370 moveto
362 388 351 400 341 406  curveto
331 412 318 416 302 416  curveto
275 416 249 404 224 382  curveto
190 352 161 307 138 247  curveto
119 198 109 154 109 113  curveto
109 109 110 104 110 96  curveto
374 370 lineto
closepath
382 338 moveto
118 62 lineto
130 42 141 29 152 22  curveto
162 15 176 12 193 12  curveto
210 12 226 16 243 25  curveto
259 34 277 52 297 77  curveto
317 102 336 139 354 187  curveto
373 235 382 280 382 321  curveto
382 323 382 329 382 338  curveto
closepath
fill
		} def

	/oe
		{
600 117 moveto
613 103 lineto
579 64 544 35 509 16  curveto
473 -2 442 -11 417 -11  curveto
393 -11 373 -4 356 9  curveto
339 24 328 45 322 74  curveto
274 16 221 -12 161 -12  curveto
122 -12 90 1 64 29  curveto
39 56 26 93 26 137  curveto
26 178 35 217 54 255  curveto
73 293 95 326 122 354  curveto
148 381 177 403 207 418  curveto
237 434 265 441 291 441  curveto
321 441 347 433 368 417  curveto
389 401 402 380 407 354  curveto
458 412 512 441 568 441  curveto
594 441 613 435 627 422  curveto
641 410 648 393 648 373  curveto
648 354 643 337 633 319  curveto
619 295 600 273 574 255  curveto
549 236 518 220 482 207  curveto
446 193 414 185 388 182  curveto
385 163 384 149 384 138  curveto
384 109 392 85 407 68  curveto
423 50 442 42 464 42  curveto
481 42 497 45 512 53  curveto
534 64 563 85 600 117  curveto
closepath
167 9 moveto
209 9 248 46 283 118  curveto
327 208 349 281 349 338  curveto
349 362 342 381 329 395  curveto
316 409 301 416 282 416  curveto
263 416 244 409 227 394  curveto
202 373 177 335 151 280  curveto
119 211 103 146 103 84  curveto
103 61 109 42 121 29  curveto
133 16 148 9 167 9  curveto
closepath
392 206 moveto
454 219 502 242 535 275  curveto
567 309 583 341 583 373  curveto
583 386 580 396 573 404  curveto
566 412 557 416 546 416  curveto
518 416 490 398 464 364  curveto
438 329 414 276 392 206  curveto
closepath
fill
		} def

	/germandbls
		{
256 404 moveto
309 404 351 423 382 462  curveto
412 500 427 542 427 588  curveto
427 611 420 630 406 646  curveto
391 661 374 668 354 668  curveto
335 668 318 663 302 652  curveto
287 641 272 622 257 593  curveto
248 574 234 533 215 469  curveto
122 147 lineto
62 -38 lineto
51 -70 42 -94 33 -109  curveto
21 -130 7 -149 -9 -166  curveto
-26 -184 -42 -196 -59 -204  curveto
-75 -212 -91 -215 -105 -215  curveto
-121 -215 -135 -210 -147 -199  curveto
-156 -191 -160 -181 -160 -167  curveto
-160 -157 -157 -148 -150 -142  curveto
-143 -135 -135 -131 -125 -131  curveto
-118 -131 -111 -134 -106 -139  curveto
-101 -144 -98 -150 -98 -156  curveto
-98 -160 -100 -166 -104 -174  curveto
-108 -179 -109 -183 -109 -186  curveto
-109 -188 -108 -190 -106 -191  curveto
-104 -194 -100 -195 -95 -195  curveto
-82 -195 -70 -189 -58 -176  curveto
-41 -159 -24 -120 -6 -59  curveto
64 201 lineto
133 441 lineto
155 518 175 571 192 599  curveto
209 627 232 650 260 667  curveto
289 685 321 694 356 694  curveto
399 694 433 681 459 656  curveto
485 632 498 600 498 562  curveto
498 530 489 502 472 477  curveto
454 452 430 432 400 417  curveto
378 406 348 397 309 390  curveto
343 381 368 371 385 358  curveto
402 346 417 329 427 307  curveto
438 285 444 261 444 236  curveto
444 195 434 155 413 116  curveto
393 78 366 47 333 23  curveto
299 0 269 -11 242 -11  curveto
219 -11 201 -3 186 11  curveto
171 27 164 48 164 74  curveto
164 92 167 105 175 114  curveto
183 123 192 127 204 127  curveto
213 127 221 124 227 118  curveto
234 112 237 104 237 94  curveto
237 84 233 71 226 56  curveto
220 45 217 37 217 32  curveto
217 26 220 20 224 16  curveto
229 11 235 9 242 9  curveto
254 9 264 14 274 22  curveto
298 43 317 73 332 112  curveto
351 163 360 211 360 256  curveto
360 293 348 324 324 349  curveto
307 367 282 379 250 384  curveto
256 404 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/TimesNewRoman-Italic exch definefont pop
/TimesNewRoman-Italic findfont 13.0 scalefont setfont
(x) show
Q
Q
newpath
0.0 0.0 m
0.0 390.0 l
307.0 390.0 l
307.0 0.0 l
h
W
Q
[ 1.0 0.0 0.0 1.0 5.0 5.0 ] defaultmatrix matrix concatmatrix setmatrix
0.0 0.0 translate
q
q
1 13 195 OPL
13 199
-5.0 -5.0 translate
q
6 210 7 13 rc
6.0 221.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -206 1090 806 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -206 1090 806
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 1000.0 def
		/quotedbl 500.0 def
		/numbersign 792.0 def
		/dollar 450.0 def
		/percent 500.0 def
		/ampersand 1000.0 def
		/quoteright 500.0 def
		/parenleft 1000.0 def
		/parenright 1000.0 def
		/asterisk 1000.0 def
		/plus 1000.0 def
		/comma 660.0 def
		/hyphen 1090.0 def
		/period 1090.0 def
		/slash 1090.0 def
		/zero 1090.0 def
		/one 1090.0 def
		/two 1000.0 def
		/three 1000.0 def
		/four 1000.0 def
		/five 1000.0 def
		/six 950.0 def
		/seven 1000.0 def
		/eight 950.0 def
		/nine 1000.0 def
		/colon 1000.0 def
		/semicolon 1000.0 def
		/less 1000.0 def
		/equal 1000.0 def
		/greater 1000.0 def
		/question 1000.0 def
		/at 1000.0 def
		/A 1000.0 def
		/B 1000.0 def
		/C 1000.0 def
		/D 1000.0 def
		/E 1000.0 def
		/F 1000.0 def
		/G 1000.0 def
		/H 1000.0 def
		/I 1000.0 def
		/J 1000.0 def
		/K 1000.0 def
		/L 1000.0 def
		/M 1000.0 def
		/N 1000.0 def
		/O 1000.0 def
		/P 1000.0 def
		/Q 500.0 def
		/R 1000.0 def
		/S 1000.0 def
		/T 790.0 def
		/U 1000.0 def
		/V 1000.0 def
		/W 1000.0 def
		/X 1000.0 def
		/Y 738.0 def
		/Z 536.0 def
		/bracketleft 430.0 def
		/backslash 500.0 def
		/bracketright 1000.0 def
		/asciicircum 1000.0 def
		/underscore 1000.0 def
		/quoteleft 500.0 def
		/a 750.0 def
		/b 750.0 def
		/c 750.0 def
		/d 1000.0 def
		/e 750.0 def
		/f 750.0 def
		/g 750.0 def
		/h 750.0 def
		/i 750.0 def
		/j 750.0 def
		/k 1000.0 def
		/l 1000.0 def
		/m 624.0 def
		/n 624.0 def
		/o 624.0 def
		/p 624.0 def
		/q 624.0 def
		/r 624.0 def
		/s 624.0 def
		/t 624.0 def
		/u 500.0 def
		/v 500.0 def
		/w 500.0 def
		/x 500.0 def
		/y 500.0 def
		/z 500.0 def
		/braceleft 500.0 def
		/bar 500.0 def
		/braceright 500.0 def
		/asciitilde 500.0 def
		/exclamdown 500.0 def
		/cent 500.0 def
		/sterling 500.0 def
		/fraction 500.0 def
		/yen 500.0 def
		/florin 500.0 def
		/section 500.0 def
		/currency 500.0 def
		/quotesingle 500.0 def
		/quotedblleft 500.0 def
		/guillemotleft 500.0 def
		/guilsinglleft 500.0 def
		/guilsinglright 500.0 def
		/fi 500.0 def
		/fl 500.0 def
		/endash 1090.0 def
		/dagger 500.0 def
		/daggerdbl 500.0 def
		/periodcentered 500.0 def
		/paragraph 500.0 def
		/bullet 500.0 def
		/quotesinglbase 500.0 def
		/quotedblbase 500.0 def
		/quotedblright 500.0 def
		/guillemotright 500.0 def
		/ellipsis 500.0 def
		/perthousand 500.0 def
		/questiondown 500.0 def
		/grave 500.0 def
		/acute 500.0 def
		/circumflex 500.0 def
		/tilde 500.0 def
		/macron 500.0 def
		/breve 500.0 def
		/dotaccent 500.0 def
		/dieresis 500.0 def
		/ring 500.0 def
		/cedilla 500.0 def
		/hungarumlaut 500.0 def
		/ogonek 500.0 def
		/caron 500.0 def
		/emdash 1090.0 def
		/AE 500.0 def
		/ordfeminine 500.0 def
		/Lslash 500.0 def
		/Oslash 500.0 def
		/OE 500.0 def
		/ordmasculine 500.0 def
		/ae 500.0 def
		/dotlessi 500.0 def
		/lslash 500.0 def
		/oslash 500.0 def
		/oe 500.0 def
		/germandbls 500.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
464 300 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
fill
		} def

	/quotedbl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/numbersign
		{
622 128 moveto
568 74 lineto
396 246 lineto
224 75 lineto
170 129 lineto
342 300 lineto
170 471 lineto
224 525 lineto
396 354 lineto
568 526 lineto
622 472 lineto
450 300 lineto
622 128 lineto
closepath
fill
		} def

	/dollar
		{
281 300 moveto
281 285 275 272 264 260  curveto
252 248 239 243 224 243  curveto
210 243 198 248 186 258  curveto
174 268 168 282 168 300  curveto
168 315 173 328 184 339  curveto
195 350 208 356 224 356  curveto
241 356 255 349 267 337  curveto
276 325 281 313 281 300  curveto
closepath
fill
		} def

	/percent
		{
334 300 moveto
334 277 325 257 308 240  curveto
291 223 271 215 249 215  curveto
229 215 210 222 194 236  curveto
174 252 165 274 165 300  curveto
165 323 173 343 189 359  curveto
205 375 225 384 249 384  curveto
275 384 296 374 313 355  curveto
327 338 334 320 334 300  curveto
closepath
fill
		} def

	/ampersand
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
464 300 lineto
closepath
fill
		} def

	/quoteright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/parenleft
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
830 8 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
778 60 lineto
closepath
fill
		} def

	/parenright
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
170 593 lineto
207 630 lineto
499 337 lineto
793 630 lineto
830 593 lineto
830 8 lineto
closepath
778 60 moveto
778 541 lineto
536 300 lineto
778 60 lineto
closepath
462 300 moveto
222 541 lineto
222 60 lineto
462 300 lineto
closepath
fill
		} def

	/asterisk
		{
830 8 moveto
793 -29 lineto
501 263 lineto
207 -29 lineto
170 8 lineto
793 630 lineto
830 593 lineto
538 300 lineto
830 8 lineto
closepath
fill
		} def

	/plus
		{
830 8 moveto
793 -29 lineto
499 263 lineto
207 -29 lineto
170 8 lineto
462 300 lineto
170 593 lineto
207 630 lineto
830 8 lineto
closepath
fill
		} def

	/comma
		{
492 12 moveto
466 -30 lineto
387 -2 336 34 314 79  curveto
296 113 287 176 287 267  curveto
287 418 lineto
287 455 282 483 273 501  curveto
264 519 244 538 214 558  curveto
168 588 lineto
194 630 lineto
259 597 lineto
308 572 340 540 356 502  curveto
368 472 374 427 374 365  curveto
374 349 374 325 374 293  curveto
373 261 373 238 373 222  curveto
373 125 397 63 446 36  curveto
453 32 468 24 492 12  curveto
closepath
fill
		} def

	/hyphen
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/period
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
678 274 moveto
412 274 lineto
412 326 lineto
678 326 lineto
678 274 lineto
closepath
fill
		} def

	/slash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
662 518 moveto
486 82 lineto
428 82 lineto
604 518 lineto
662 518 lineto
closepath
fill
		} def

	/zero
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
667 300 moveto
667 266 655 238 631 214  curveto
607 190 578 178 545 178  curveto
511 178 483 190 459 214  curveto
435 238 423 266 423 300  curveto
423 333 435 362 459 386  curveto
483 410 511 422 545 422  curveto
578 422 607 410 631 386  curveto
655 362 667 333 667 300  curveto
closepath
615 300 moveto
615 319 608 335 594 349  curveto
580 363 564 370 545 370  curveto
525 370 509 363 495 349  curveto
481 335 475 319 475 300  curveto
475 280 481 264 495 250  curveto
509 236 525 230 545 230  curveto
564 230 580 236 594 250  curveto
608 264 615 280 615 300  curveto
closepath
fill
		} def

	/one
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
602 323 moveto
602 308 596 295 585 283  curveto
573 271 560 266 545 266  curveto
531 266 519 271 507 281  curveto
495 291 489 305 489 323  curveto
489 338 494 351 505 362  curveto
516 373 529 379 545 379  curveto
562 379 576 372 588 360  curveto
597 348 602 336 602 323  curveto
closepath
fill
		} def

	/two
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
770 396 740 456 687 505  curveto
634 553 572 578 500 578  curveto
428 578 365 553 312 505  curveto
259 456 229 396 223 326  curveto
777 326 lineto
closepath
777 274 moveto
223 274 lineto
229 203 259 143 312 95  curveto
365 46 428 22 500 22  curveto
572 22 634 46 687 95  curveto
740 143 770 203 777 274  curveto
closepath
fill
		} def

	/three
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 372 753 434 705 487  curveto
656 540 596 570 526 577  curveto
526 23 lineto
596 29 656 59 705 112  curveto
753 165 778 228 778 300  curveto
closepath
474 23 moveto
474 577 lineto
403 570 343 540 295 487  curveto
246 434 222 372 222 300  curveto
222 228 246 165 295 112  curveto
343 59 403 29 474 23  curveto
closepath
fill
		} def

	/four
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
777 326 moveto
771 392 744 449 697 497  curveto
649 544 592 571 526 577  curveto
526 326 lineto
777 326 lineto
closepath
474 326 moveto
474 577 lineto
407 571 350 544 303 497  curveto
255 449 229 392 223 326  curveto
474 326 lineto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 649 55 697 103  curveto
744 150 771 207 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 207 255 150 303 103  curveto
350 55 407 29 474 23  curveto
closepath
fill
		} def

	/five
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
677 514 moveto
625 556 566 578 500 578  curveto
433 578 374 556 323 514  curveto
500 337 lineto
677 514 lineto
closepath
778 300 moveto
778 366 756 425 714 477  curveto
537 300 lineto
714 123 lineto
756 174 778 233 778 300  curveto
closepath
463 300 moveto
286 477 lineto
243 425 222 366 222 300  curveto
222 233 243 174 286 123  curveto
463 300 lineto
closepath
677 86 moveto
500 263 lineto
323 86 lineto
374 43 433 22 500 22  curveto
566 22 625 43 677 86  curveto
closepath
fill
		} def

	/six
		{
782 274 moveto
524 274 lineto
524 -30 lineto
424 -30 340 -1 273 58  curveto
203 120 168 200 168 300  curveto
168 399 203 480 273 542  curveto
339 601 423 630 524 630  curveto
524 326 lineto
782 326 lineto
782 274 lineto
closepath
472 326 moveto
472 577 lineto
406 570 349 543 302 496  curveto
254 448 227 392 221 326  curveto
472 326 lineto
closepath
472 23 moveto
472 274 lineto
221 274 lineto
227 208 254 151 302 104  curveto
349 56 406 29 472 23  curveto
closepath
fill
		} def

	/seven
		{
792 82 moveto
755 45 lineto
540 260 lineto
364 84 lineto
415 42 473 22 538 22  curveto
538 -30 lineto
446 -30 368 2 304 66  curveto
240 130 208 208 208 300  curveto
208 391 240 469 304 533  curveto
368 597 446 630 538 630  curveto
538 578 lineto
471 578 412 556 360 513  curveto
540 333 lineto
755 548 lineto
792 511 lineto
577 296 lineto
792 82 lineto
closepath
503 296 moveto
323 476 lineto
281 424 260 366 260 300  curveto
260 232 282 172 327 120  curveto
503 296 lineto
closepath
fill
		} def

	/eight
		{
782 300 moveto
782 200 747 120 677 58  curveto
610 0 526 -30 426 -30  curveto
426 274 lineto
168 274 lineto
168 326 lineto
426 326 lineto
426 630 lineto
526 630 610 600 677 542  curveto
747 480 782 399 782 300  curveto
closepath
729 326 moveto
722 392 695 448 648 496  curveto
600 543 544 570 478 577  curveto
478 326 lineto
729 326 lineto
closepath
729 274 moveto
478 274 lineto
478 23 lineto
544 29 600 56 648 104  curveto
695 151 722 208 729 274  curveto
closepath
fill
		} def

	/nine
		{
792 300 moveto
792 208 759 130 695 66  curveto
631 2 553 -30 462 -30  curveto
462 22 lineto
526 22 584 42 636 84  curveto
460 260 lineto
245 45 lineto
208 82 lineto
423 296 lineto
208 511 lineto
245 548 lineto
460 333 lineto
640 513 lineto
588 556 528 578 462 578  curveto
462 630 lineto
553 630 631 597 695 533  curveto
759 469 792 391 792 300  curveto
closepath
740 300 moveto
740 366 719 424 677 476  curveto
497 296 lineto
673 120 lineto
717 172 740 232 740 300  curveto
closepath
fill
		} def

	/colon
		{
830 300 moveto
830 209 797 131 733 67  curveto
668 2 590 -30 500 -30  curveto
419 -30 348 -4 287 48  curveto
210 -30 lineto
170 10 lineto
247 88 lineto
195 149 170 220 170 300  curveto
170 390 202 468 267 533  curveto
331 597 409 630 500 630  curveto
580 630 650 604 712 553  curveto
789 630 lineto
829 590 lineto
752 513 lineto
804 451 830 380 830 300  curveto
closepath
778 300 moveto
778 366 757 424 715 476  curveto
324 85 lineto
375 43 434 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
675 516 moveto
624 557 566 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 234 242 175 284 125  curveto
675 516 lineto
closepath
fill
		} def

	/semicolon
		{
830 300 moveto
830 208 797 130 733 66  curveto
669 2 591 -30 500 -30  curveto
408 -30 330 2 266 66  curveto
202 130 170 208 170 300  curveto
170 391 202 469 266 533  curveto
330 597 408 630 500 630  curveto
591 630 669 597 733 533  curveto
797 469 830 391 830 300  curveto
closepath
778 300 moveto
778 376 750 442 696 496  curveto
642 550 576 578 500 578  curveto
423 578 357 550 303 496  curveto
249 442 222 376 222 300  curveto
222 223 249 157 303 103  curveto
357 49 423 22 500 22  curveto
576 22 642 49 696 103  curveto
750 157 778 223 778 300  curveto
closepath
672 201 moveto
652 193 635 190 621 190  curveto
608 190 597 192 587 198  curveto
579 202 567 216 551 239  curveto
537 259 522 274 507 285  curveto
508 269 514 249 525 225  curveto
536 200 542 182 542 172  curveto
542 151 527 127 499 101  curveto
469 124 455 148 455 173  curveto
455 181 460 198 472 223  curveto
482 245 488 266 490 284  curveto
474 273 460 258 446 238  curveto
439 228 427 215 410 199  curveto
400 193 388 190 375 190  curveto
361 190 344 193 326 201  curveto
334 238 348 262 367 273  curveto
377 279 394 283 418 285  curveto
442 287 463 292 481 300  curveto
464 307 443 312 419 315  curveto
407 315 389 319 367 325  curveto
346 337 333 362 327 400  curveto
347 406 363 409 376 409  curveto
388 409 400 406 410 401  curveto
417 397 429 383 445 361  curveto
458 342 473 327 489 316  curveto
487 333 480 353 470 377  curveto
460 400 455 417 455 427  curveto
455 451 470 475 500 499  curveto
528 473 542 449 542 427  curveto
542 417 536 400 525 376  curveto
515 354 509 333 507 314  curveto
518 322 531 337 547 359  curveto
563 381 576 395 586 401  curveto
596 407 608 410 622 410  curveto
635 410 651 407 670 401  curveto
664 363 650 338 630 326  curveto
620 320 603 316 578 314  curveto
565 312 545 308 517 300  curveto
535 292 555 287 577 285  curveto
593 283 602 283 604 283  curveto
614 281 622 278 630 274  curveto
649 262 663 238 672 201  curveto
closepath
fill
		} def

	/less
		{
980 274 moveto
829 274 lineto
822 188 787 115 724 57  curveto
660 0 586 -30 500 -30  curveto
414 -30 339 0 276 58  curveto
212 116 177 188 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 411 212 483 276 542  curveto
339 600 414 630 500 630  curveto
586 630 660 600 724 542  curveto
787 484 822 412 829 326  curveto
980 326 lineto
980 274 lineto
closepath
777 326 moveto
770 397 740 457 687 505  curveto
633 553 571 578 500 578  curveto
428 578 366 553 313 505  curveto
259 457 229 397 223 326  curveto
777 326 lineto
closepath
777 274 moveto
223 274 lineto
229 202 259 142 313 94  curveto
366 46 428 22 500 22  curveto
571 22 633 46 687 94  curveto
740 142 770 202 777 274  curveto
closepath
fill
		} def

	/equal
		{
980 274 moveto
829 274 lineto
823 193 791 124 733 66  curveto
675 8 606 -23 526 -29  curveto
526 -200 lineto
474 -200 lineto
474 -29 lineto
393 -23 324 8 266 66  curveto
208 124 177 193 171 274  curveto
20 274 lineto
20 326 lineto
171 326 lineto
177 406 208 475 266 533  curveto
324 591 393 623 474 629  curveto
474 800 lineto
526 800 lineto
526 629 lineto
606 622 675 590 733 533  curveto
790 475 822 406 829 326  curveto
980 326 lineto
980 274 lineto
closepath
777 326 moveto
771 392 744 448 696 496  curveto
648 544 592 571 526 577  curveto
526 326 lineto
777 326 lineto
closepath
474 326 moveto
474 577 lineto
408 571 351 544 303 496  curveto
255 448 229 392 223 326  curveto
474 326 lineto
closepath
777 274 moveto
526 274 lineto
526 23 lineto
592 29 648 55 696 103  curveto
744 151 771 208 777 274  curveto
closepath
474 23 moveto
474 274 lineto
223 274 lineto
229 208 255 151 303 103  curveto
351 55 408 29 474 23  curveto
closepath
fill
		} def

	/greater
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 326 moveto
778 578 lineto
222 578 lineto
222 326 lineto
778 326 lineto
closepath
778 22 moveto
778 274 lineto
222 274 lineto
222 22 lineto
778 22 lineto
closepath
fill
		} def

	/question
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 326 moveto
778 578 lineto
526 578 lineto
526 326 lineto
778 326 lineto
closepath
474 326 moveto
474 578 lineto
222 578 lineto
222 326 lineto
474 326 lineto
closepath
778 22 moveto
778 274 lineto
526 274 lineto
526 22 lineto
778 22 lineto
closepath
474 22 moveto
474 274 lineto
222 274 lineto
222 22 lineto
474 22 lineto
closepath
fill
		} def

	/at
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 60 moveto
778 541 lineto
538 300 lineto
778 60 lineto
closepath
741 578 moveto
259 578 lineto
501 337 lineto
741 578 lineto
closepath
464 300 moveto
222 541 lineto
222 60 lineto
464 300 lineto
closepath
742 22 moveto
501 263 lineto
258 22 lineto
742 22 lineto
closepath
fill
		} def

	/A
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
778 22 moveto
778 578 lineto
222 578 lineto
222 22 lineto
778 22 lineto
closepath
fill
		} def

	/B
		{
830 -30 moveto
170 -30 lineto
170 630 lineto
830 630 lineto
830 -30 lineto
closepath
fill
		} def

	/C
		{
830 274 moveto
526 274 lineto
526 -30 lineto
474 -30 lineto
474 274 lineto
170 274 lineto
170 326 lineto
474 326 lineto
474 630 lineto
526 630 lineto
526 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/D
		{
830 261 moveto
539 261 lineto
539 -30 lineto
461 -30 lineto
461 261 lineto
170 261 lineto
170 339 lineto
461 339 lineto
461 630 lineto
539 630 lineto
539 339 lineto
830 339 lineto
830 261 lineto
closepath
fill
		} def

	/E
		{
830 394 moveto
526 394 lineto
526 90 lineto
474 90 lineto
474 394 lineto
170 394 lineto
170 446 lineto
474 446 lineto
474 750 lineto
526 750 lineto
526 446 lineto
830 446 lineto
830 394 lineto
closepath
555 -95 moveto
555 -110 549 -123 539 -134  curveto
528 -144 515 -150 500 -150  curveto
484 -150 471 -144 461 -134  curveto
450 -123 445 -110 445 -95  curveto
445 -79 450 -66 461 -56  curveto
471 -45 484 -40 500 -40  curveto
515 -40 528 -45 539 -56  curveto
549 -66 555 -79 555 -95  curveto
closepath
fill
		} def

	/F
		{
555 695 moveto
555 679 549 666 539 656  curveto
528 645 515 640 500 640  curveto
484 640 471 645 461 656  curveto
450 666 445 679 445 695  curveto
445 710 450 723 461 734  curveto
471 744 484 750 500 750  curveto
515 750 528 744 539 734  curveto
549 723 555 710 555 695  curveto
closepath
830 154 moveto
526 154 lineto
526 -150 lineto
474 -150 lineto
474 154 lineto
170 154 lineto
170 206 lineto
474 206 lineto
474 510 lineto
526 510 lineto
526 206 lineto
830 206 lineto
830 154 lineto
closepath
fill
		} def

	/G
		{
830 337 moveto
526 337 lineto
526 33 lineto
474 33 lineto
474 337 lineto
170 337 lineto
170 389 lineto
474 389 lineto
474 693 lineto
526 693 lineto
526 389 lineto
830 389 lineto
830 337 lineto
closepath
830 -94 moveto
170 -94 lineto
170 -42 lineto
830 -42 lineto
830 -94 lineto
closepath
fill
		} def

	/H
		{
830 641 moveto
170 641 lineto
170 693 lineto
830 693 lineto
830 641 lineto
closepath
830 210 moveto
526 210 lineto
526 -94 lineto
474 -94 lineto
474 210 lineto
170 210 lineto
170 262 lineto
474 262 lineto
474 566 lineto
526 566 lineto
526 262 lineto
830 262 lineto
830 210 lineto
closepath
fill
		} def

	/I
		{
526 404 moveto
474 404 lineto
474 630 lineto
526 630 lineto
526 404 lineto
closepath
830 274 moveto
604 274 lineto
604 326 lineto
830 326 lineto
830 274 lineto
closepath
396 326 moveto
396 274 lineto
170 274 lineto
170 326 lineto
396 326 lineto
closepath
526 -30 moveto
474 -30 lineto
474 196 lineto
526 196 lineto
526 -30 lineto
closepath
fill
		} def

	/J
		{
555 523 moveto
555 507 549 494 539 484  curveto
528 473 515 468 500 468  curveto
484 468 471 473 461 484  curveto
450 494 445 507 445 523  curveto
445 538 450 551 461 562  curveto
471 572 484 578 500 578  curveto
515 578 528 572 539 562  curveto
549 551 555 538 555 523  curveto
closepath
830 8 moveto
793 -30 lineto
501 263 lineto
207 -30 lineto
170 8 lineto
438 274 lineto
170 274 lineto
170 326 lineto
438 326 lineto
170 593 lineto
207 630 lineto
501 337 lineto
793 630 lineto
830 593 lineto
564 326 lineto
830 326 lineto
830 274 lineto
564 274 lineto
830 8 lineto
closepath
555 78 moveto
555 62 549 49 539 39  curveto
528 28 515 23 500 23  curveto
484 23 471 28 461 39  curveto
450 49 445 62 445 78  curveto
445 93 450 106 461 117  curveto
471 127 484 133 500 133  curveto
515 133 528 127 539 117  curveto
549 106 555 93 555 78  curveto
closepath
fill
		} def

	/K
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/L
		{
830 261 moveto
170 261 lineto
170 339 lineto
830 339 lineto
830 261 lineto
closepath
fill
		} def

	/M
		{
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/N
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/O
		{
555 485 moveto
555 469 549 456 539 446  curveto
528 435 515 430 500 430  curveto
484 430 471 435 461 446  curveto
450 456 445 469 445 485  curveto
445 500 450 513 461 524  curveto
471 534 484 540 500 540  curveto
515 540 528 534 539 524  curveto
549 513 555 500 555 485  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
555 115 moveto
555 99 549 86 539 76  curveto
528 65 515 60 500 60  curveto
484 60 471 65 461 76  curveto
450 86 445 99 445 115  curveto
445 130 450 143 461 154  curveto
471 164 484 170 500 170  curveto
515 170 528 164 539 154  curveto
549 143 555 130 555 115  curveto
closepath
fill
		} def

	/P
		{
778 485 moveto
778 469 772 456 762 446  curveto
751 435 738 430 723 430  curveto
707 430 694 435 684 446  curveto
673 456 668 469 668 485  curveto
668 500 673 513 684 524  curveto
694 534 707 540 723 540  curveto
738 540 751 534 762 524  curveto
772 513 778 500 778 485  curveto
closepath
778 115 moveto
778 99 772 86 762 76  curveto
751 65 738 60 723 60  curveto
707 60 694 65 684 76  curveto
673 86 668 99 668 115  curveto
668 130 673 143 684 154  curveto
694 164 707 170 723 170  curveto
738 170 751 164 762 154  curveto
772 143 778 130 778 115  curveto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
332 485 moveto
332 469 326 456 316 446  curveto
305 435 292 430 277 430  curveto
261 430 248 435 238 446  curveto
227 456 222 469 222 485  curveto
222 500 227 513 238 524  curveto
248 534 261 540 277 540  curveto
292 540 305 534 316 524  curveto
326 513 332 500 332 485  curveto
closepath
332 115 moveto
332 99 326 86 316 76  curveto
305 65 292 60 277 60  curveto
261 60 248 65 238 76  curveto
227 86 222 99 222 115  curveto
222 130 227 143 238 154  curveto
248 164 261 170 277 170  curveto
292 170 305 164 316 154  curveto
326 143 332 130 332 115  curveto
closepath
fill
		} def

	/Q
		{
500 201 moveto
0 201 lineto
0 250 lineto
500 250 lineto
500 201 lineto
closepath
fill
		} def

	/R
		{
1000 201 moveto
0 201 lineto
0 250 lineto
1000 250 lineto
1000 201 lineto
closepath
fill
		} def

	/S
		{
726 446 moveto
654 446 lineto
500 597 lineto
346 446 lineto
274 446 lineto
500 668 lineto
726 446 lineto
closepath
830 274 moveto
170 274 lineto
170 326 lineto
830 326 lineto
830 274 lineto
closepath
fill
		} def

	/T
		{
621 479 moveto
621 463 615 450 605 440  curveto
594 429 581 424 566 424  curveto
550 424 537 429 527 440  curveto
516 450 511 463 511 479  curveto
511 494 516 507 527 518  curveto
537 528 550 534 566 534  curveto
581 534 594 528 605 518  curveto
615 507 621 494 621 479  curveto
closepath
278 479 moveto
278 463 272 450 262 440  curveto
251 429 238 424 223 424  curveto
207 424 194 429 184 440  curveto
173 450 168 463 168 479  curveto
168 494 173 507 184 518  curveto
194 528 207 534 223 534  curveto
238 534 251 528 262 518  curveto
272 507 278 494 278 479  curveto
closepath
621 121 moveto
621 105 615 92 605 82  curveto
594 71 581 66 566 66  curveto
550 66 537 71 527 82  curveto
516 92 511 105 511 121  curveto
511 136 516 149 527 160  curveto
537 170 550 176 566 176  curveto
581 176 594 170 605 160  curveto
615 149 621 136 621 121  curveto
closepath
278 121 moveto
278 105 272 92 262 82  curveto
251 71 238 66 223 66  curveto
207 66 194 71 184 82  curveto
173 92 168 105 168 121  curveto
168 136 173 149 184 160  curveto
194 170 207 176 223 176  curveto
238 176 251 170 262 160  curveto
272 149 278 136 278 121  curveto
closepath
fill
		} def

	/U
		{
830 25 moveto
170 300 lineto
830 575 lineto
830 25 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
778 103 moveto
778 497 lineto
305 300 lineto
778 103 lineto
closepath
fill
		} def

	/V
		{
830 300 moveto
170 25 lineto
170 575 lineto
830 300 lineto
closepath
830 -100 moveto
170 -100 lineto
170 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
695 300 moveto
222 497 lineto
222 103 lineto
695 300 lineto
closepath
fill
		} def

	/W
		{
830 -100 moveto
426 -100 lineto
386 -205 lineto
329 -205 lineto
370 -100 lineto
170 -100 lineto
170 -48 lineto
390 -48 lineto
475 173 lineto
170 300 lineto
592 476 lineto
666 667 lineto
721 667 lineto
658 503 lineto
830 575 lineto
830 25 lineto
523 153 lineto
446 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
778 103 moveto
778 497 lineto
632 436 lineto
542 201 lineto
778 103 lineto
closepath
566 409 moveto
305 300 lineto
494 221 lineto
566 409 lineto
closepath
fill
		} def

	/X
		{
830 -100 moveto
346 -100 lineto
306 -204 lineto
249 -204 lineto
289 -100 lineto
170 -100 lineto
170 -48 lineto
310 -48 lineto
370 109 lineto
170 25 lineto
170 575 lineto
498 438 lineto
568 617 lineto
623 617 lineto
546 418 lineto
830 300 lineto
437 136 lineto
366 -48 lineto
830 -48 lineto
830 -100 lineto
closepath
695 300 moveto
528 370 lineto
463 204 lineto
695 300 lineto
closepath
480 390 moveto
222 497 lineto
222 103 lineto
397 176 lineto
480 390 lineto
closepath
fill
		} def

	/Y
		{
697 148 moveto
671 100 632 59 580 27  curveto
528 -5 476 -22 426 -22  curveto
315 -22 230 11 172 77  curveto
116 138 87 223 83 333  curveto
5 333 lineto
5 373 lineto
84 373 lineto
88 449 118 520 173 585  curveto
231 653 297 688 371 688  curveto
413 688 454 681 492 668  curveto
528 655 553 649 568 649  curveto
595 649 615 662 629 688  curveto
647 688 lineto
695 476 lineto
668 476 lineto
587 596 493 657 386 657  curveto
319 657 266 628 228 572  curveto
194 522 177 461 177 391  curveto
177 385 177 379 177 373  curveto
326 373 lineto
326 333 lineto
180 333 lineto
190 249 218 181 265 129  curveto
316 71 383 42 466 42  curveto
544 42 612 77 668 148  curveto
697 148 lineto
closepath
fill
		} def

	/Z
		{
516 154 moveto
444 51 390 0 353 0  curveto
337 0 323 6 312 18  curveto
300 30 295 45 295 61  curveto
295 69 299 91 308 125  curveto
319 163 331 202 343 242  curveto
359 296 367 333 367 353  curveto
367 372 361 382 351 382  curveto
316 382 273 341 222 260  curveto
182 197 153 140 135 88  curveto
130 70 125 52 121 34  curveto
113 11 101 0 85 0  curveto
62 0 51 8 51 24  curveto
51 26 56 50 66 97  curveto
142 453 lineto
56 410 lineto
56 457 lineto
154 506 lineto
163 549 lineto
170 583 174 605 174 617  curveto
174 627 172 634 169 639  curveto
161 647 138 651 98 653  curveto
98 675 lineto
257 675 lineto
229 544 lineto
323 591 lineto
323 544 lineto
218 491 lineto
155 190 lineto
247 352 324 433 385 433  curveto
420 433 438 408 438 358  curveto
438 342 430 307 414 253  curveto
404 221 394 190 385 160  curveto
372 118 366 87 366 67  curveto
366 55 372 49 384 49  curveto
406 49 444 88 498 168  curveto
516 154 lineto
closepath
fill
		} def

	/bracketleft
		{
402 25 moveto
381 -1 354 -14 321 -14  curveto
277 -14 226 24 168 101  curveto
143 74 104 35 51 -16  curveto
28 7 lineto
147 139 lineto
126 171 108 216 93 274  curveto
78 331 71 380 71 421  curveto
71 480 83 534 107 584  curveto
137 645 179 676 233 676  curveto
278 676 313 654 339 610  curveto
360 572 371 529 371 481  curveto
371 434 353 378 319 314  curveto
299 278 267 228 223 164  curveto
224 144 236 117 259 83  curveto
283 46 304 28 322 28  curveto
346 28 364 37 374 56  curveto
402 25 lineto
closepath
319 481 moveto
319 515 313 545 303 572  curveto
288 608 266 626 238 626  curveto
182 626 155 561 155 432  curveto
155 358 172 285 206 214  curveto
233 240 259 281 283 338  curveto
307 394 319 442 319 481  curveto
closepath
fill
		} def

	/backslash
		{
476 331 moveto
476 248 461 175 432 113  curveto
392 28 331 -14 250 -14  curveto
219 -14 191 -7 166 5  curveto
134 -92 lineto
90 -92 lineto
129 29 lineto
92 61 64 109 46 174  curveto
31 224 24 276 24 331  curveto
24 413 38 485 68 548  curveto
108 633 168 676 250 676  curveto
280 676 308 669 334 657  curveto
366 754 lineto
410 754 lineto
370 633 lineto
407 600 435 551 454 487  curveto
468 437 476 385 476 331  curveto
closepath
320 615 moveto
302 638 278 650 250 650  curveto
163 650 120 543 120 331  curveto
120 227 130 148 151 95  curveto
320 615 lineto
closepath
380 331 moveto
380 431 369 509 348 565  curveto
179 46 lineto
198 23 222 12 250 12  curveto
336 12 380 118 380 331  curveto
closepath
fill
		} def

	/bracketright
		{
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
950 365 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
950 183 lineto
closepath
fill
		} def

	/asciicircum
		{
950 456 moveto
50 456 lineto
50 508 lineto
950 508 lineto
950 456 lineto
closepath
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
950 274 lineto
closepath
950 92 moveto
50 92 lineto
50 144 lineto
950 144 lineto
950 92 lineto
closepath
fill
		} def

	/underscore
		{
950 547 moveto
50 547 lineto
50 599 lineto
950 599 lineto
950 547 lineto
closepath
950 365 moveto
50 365 lineto
50 417 lineto
950 417 lineto
950 365 lineto
closepath
950 183 moveto
50 183 lineto
50 235 lineto
950 235 lineto
950 183 lineto
closepath
950 1 moveto
50 1 lineto
50 53 lineto
950 53 lineto
950 1 lineto
closepath
fill
		} def

	/quoteleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/a
		{
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
fill
		} def

	/b
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
700 456 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
700 92 lineto
closepath
fill
		} def

	/c
		{
700 547 moveto
50 547 lineto
50 599 lineto
700 599 lineto
700 547 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
700 1 moveto
50 1 lineto
50 53 lineto
700 53 lineto
700 1 lineto
closepath
fill
		} def

	/d
		{
950 274 moveto
50 274 lineto
50 326 lineto
950 326 lineto
950 274 lineto
closepath
fill
		} def

	/e
		{
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
fill
		} def

	/f
		{
700 365 moveto
550 365 lineto
550 417 lineto
700 417 lineto
700 365 lineto
closepath
450 365 moveto
300 365 lineto
300 417 lineto
450 417 lineto
450 365 lineto
closepath
700 183 moveto
50 183 lineto
50 235 lineto
700 235 lineto
700 183 lineto
closepath
200 417 moveto
200 365 lineto
50 365 lineto
50 417 lineto
200 417 lineto
closepath
fill
		} def

	/g
		{
700 183 moveto
550 183 lineto
550 235 lineto
700 235 lineto
700 183 lineto
closepath
700 365 moveto
50 365 lineto
50 417 lineto
700 417 lineto
700 365 lineto
closepath
450 235 moveto
450 183 lineto
300 183 lineto
300 235 lineto
450 235 lineto
closepath
200 183 moveto
50 183 lineto
50 235 lineto
200 235 lineto
200 183 lineto
closepath
fill
		} def

	/h
		{
700 456 moveto
550 456 lineto
550 508 lineto
700 508 lineto
700 456 lineto
closepath
450 456 moveto
300 456 lineto
300 508 lineto
450 508 lineto
450 456 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
200 508 moveto
200 456 lineto
50 456 lineto
50 508 lineto
200 508 lineto
closepath
700 92 moveto
50 92 lineto
50 144 lineto
700 144 lineto
700 92 lineto
closepath
fill
		} def

	/i
		{
700 456 moveto
50 456 lineto
50 508 lineto
700 508 lineto
700 456 lineto
closepath
700 92 moveto
550 92 lineto
550 144 lineto
700 144 lineto
700 92 lineto
closepath
700 274 moveto
50 274 lineto
50 326 lineto
700 326 lineto
700 274 lineto
closepath
450 144 moveto
450 92 lineto
300 92 lineto
300 144 lineto
450 144 lineto
closepath
200 92 moveto
50 92 lineto
50 144 lineto
200 144 lineto
200 92 lineto
closepath
fill
		} def

	/j
		{
700 379 moveto
700 365 696 353 687 343  curveto
677 333 666 328 652 328  curveto
638 327 626 331 616 341  curveto
606 351 600 363 600 377  curveto
599 391 603 402 613 412  curveto
623 422 635 427 649 428  curveto
663 428 674 424 684 414  curveto
694 404 699 393 700 379  curveto
closepath
425 379 moveto
425 365 421 353 412 343  curveto
402 333 391 328 377 328  curveto
363 327 351 331 341 341  curveto
331 351 325 363 325 377  curveto
324 391 328 402 338 412  curveto
348 422 360 427 374 428  curveto
388 428 399 424 409 414  curveto
419 404 424 393 425 379  curveto
closepath
700 172 moveto
50 172 lineto
50 224 lineto
700 224 lineto
700 172 lineto
closepath
150 379 moveto
150 365 146 353 137 343  curveto
127 333 116 328 102 328  curveto
88 327 76 331 66 341  curveto
56 351 50 363 50 377  curveto
49 391 53 402 63 412  curveto
73 422 85 427 99 428  curveto
113 428 124 424 134 414  curveto
144 404 149 393 150 379  curveto
closepath
fill
		} def

	/k
		{
868 435 moveto
730 0 lineto
269 0 lineto
132 435 lineto
500 702 lineto
868 435 lineto
closepath
807 415 moveto
500 638 lineto
193 415 lineto
307 52 lineto
692 52 lineto
807 415 lineto
closepath
fill
		} def

	/l
		{
906 351 moveto
703 0 lineto
297 0 lineto
94 351 lineto
297 702 lineto
703 702 lineto
906 351 lineto
closepath
846 351 moveto
673 650 lineto
327 650 lineto
154 351 lineto
327 52 lineto
673 52 lineto
846 351 lineto
closepath
fill
		} def

	/m
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
568 285 moveto
60 285 lineto
60 315 lineto
568 315 lineto
568 285 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/n
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
564 285 moveto
56 285 lineto
56 315 lineto
564 315 lineto
564 285 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/o
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/p
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/q
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 304 moveto
557 279 lineto
50 621 lineto
67 646 lineto
574 304 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/r
		{
574 464 moveto
557 439 lineto
50 781 lineto
67 806 lineto
574 464 lineto
closepath
574 296 moveto
67 -46 lineto
50 -21 lineto
557 321 lineto
574 296 lineto
closepath
574 136 moveto
67 -206 lineto
50 -181 lineto
557 161 lineto
574 136 lineto
closepath
fill
		} def

	/s
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 621 moveto
67 279 lineto
50 304 lineto
557 646 lineto
574 621 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/t
		{
574 781 moveto
67 439 lineto
50 464 lineto
557 806 lineto
574 781 lineto
closepath
574 -21 moveto
557 -46 lineto
50 296 lineto
67 321 lineto
574 -21 lineto
closepath
574 -181 moveto
557 -206 lineto
50 136 lineto
67 161 lineto
574 -181 lineto
closepath
fill
		} def

	/u
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/v
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/w
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/x
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/y
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/z
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/braceleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/bar
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/braceright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/asciitilde
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/exclamdown
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/cent
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/sterling
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fraction
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/yen
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/florin
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/section
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/currency
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotesingle
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guillemotleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guilsinglleft
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guilsinglright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fi
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/fl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/endash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/dagger
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/daggerdbl
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/periodcentered
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/paragraph
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/bullet
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotesinglbase
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblbase
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/quotedblright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/guillemotright
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ellipsis
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/perthousand
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/questiondown
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/grave
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/acute
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/circumflex
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/tilde
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/macron
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/breve
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dotaccent
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dieresis
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ring
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/cedilla
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/hungarumlaut
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ogonek
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/caron
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/emdash
		{
920 300 moveto
920 196 883 108 810 35  curveto
736 -38 648 -75 545 -75  curveto
441 -75 353 -38 280 35  curveto
206 108 170 196 170 300  curveto
170 403 206 491 280 565  curveto
353 638 441 675 545 675  curveto
648 675 736 638 810 565  curveto
883 491 920 403 920 300  curveto
closepath
868 300 moveto
868 389 836 465 773 528  curveto
710 591 634 623 545 623  curveto
455 623 379 591 316 528  curveto
253 465 222 389 222 300  curveto
222 210 253 134 316 71  curveto
379 8 455 -23 545 -23  curveto
634 -23 710 8 773 71  curveto
836 134 868 210 868 300  curveto
closepath
600 474 moveto
600 458 594 445 584 435  curveto
573 424 560 419 545 419  curveto
529 419 516 424 506 435  curveto
495 445 490 458 490 474  curveto
490 489 495 502 506 513  curveto
516 523 529 529 545 529  curveto
560 529 573 523 584 513  curveto
594 502 600 489 600 474  curveto
closepath
816 274 moveto
274 274 lineto
274 326 lineto
816 326 lineto
816 274 lineto
closepath
600 126 moveto
600 110 594 97 584 87  curveto
573 76 560 71 545 71  curveto
529 71 516 76 506 87  curveto
495 97 490 110 490 126  curveto
490 141 495 154 506 165  curveto
516 175 529 181 545 181  curveto
560 181 573 175 584 165  curveto
594 154 600 141 600 126  curveto
closepath
fill
		} def

	/AE
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ordfeminine
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/Lslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/Oslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/OE
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ordmasculine
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/ae
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/dotlessi
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/lslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/oslash
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/oe
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/germandbls
		{
63 0 moveto
63 803 lineto
438 803 lineto
438 0 lineto
63 0 lineto
closepath
125 63 moveto
375 63 lineto
375 741 lineto
125 741 lineto
125 63 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/ESSTIXFive exch definefont pop
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
15.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
21.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
( ) show
Q
24.0 221.0 moveto
q 1 -1 scale
9 dict begin
/FontType 3 def
/FontMatrix [0.0010 0 0 0.0010 0 0]def
/FontBBox [0 -293 1042 1010 ] def
	/Encoding 256 array def
			0 1 255 {Encoding exch /.notdef put}for
		Encoding 32 /space put
		Encoding 33 /exclam put
		Encoding 34 /quotedbl put
		Encoding 35 /numbersign put
		Encoding 36 /dollar put
		Encoding 37 /percent put
		Encoding 38 /ampersand put
		Encoding 39 /quoteright put
		Encoding 40 /parenleft put
		Encoding 41 /parenright put
		Encoding 42 /asterisk put
		Encoding 43 /plus put
		Encoding 44 /comma put
		Encoding 45 /hyphen put
		Encoding 46 /period put
		Encoding 47 /slash put
		Encoding 48 /zero put
		Encoding 49 /one put
		Encoding 50 /two put
		Encoding 51 /three put
		Encoding 52 /four put
		Encoding 53 /five put
		Encoding 54 /six put
		Encoding 55 /seven put
		Encoding 56 /eight put
		Encoding 57 /nine put
		Encoding 58 /colon put
		Encoding 59 /semicolon put
		Encoding 60 /less put
		Encoding 61 /equal put
		Encoding 62 /greater put
		Encoding 63 /question put
		Encoding 64 /at put
		Encoding 65 /A put
		Encoding 66 /B put
		Encoding 67 /C put
		Encoding 68 /D put
		Encoding 69 /E put
		Encoding 70 /F put
		Encoding 71 /G put
		Encoding 72 /H put
		Encoding 73 /I put
		Encoding 74 /J put
		Encoding 75 /K put
		Encoding 76 /L put
		Encoding 77 /M put
		Encoding 78 /N put
		Encoding 79 /O put
		Encoding 80 /P put
		Encoding 81 /Q put
		Encoding 82 /R put
		Encoding 83 /S put
		Encoding 84 /T put
		Encoding 85 /U put
		Encoding 86 /V put
		Encoding 87 /W put
		Encoding 88 /X put
		Encoding 89 /Y put
		Encoding 90 /Z put
		Encoding 91 /bracketleft put
		Encoding 92 /backslash put
		Encoding 93 /bracketright put
		Encoding 94 /asciicircum put
		Encoding 95 /underscore put
		Encoding 96 /quoteleft put
		Encoding 97 /a put
		Encoding 98 /b put
		Encoding 99 /c put
		Encoding 100 /d put
		Encoding 101 /e put
		Encoding 102 /f put
		Encoding 103 /g put
		Encoding 104 /h put
		Encoding 105 /i put
		Encoding 106 /j put
		Encoding 107 /k put
		Encoding 108 /l put
		Encoding 109 /m put
		Encoding 110 /n put
		Encoding 111 /o put
		Encoding 112 /p put
		Encoding 113 /q put
		Encoding 114 /r put
		Encoding 115 /s put
		Encoding 116 /t put
		Encoding 117 /u put
		Encoding 118 /v put
		Encoding 119 /w put
		Encoding 120 /x put
		Encoding 121 /y put
		Encoding 122 /z put
		Encoding 123 /braceleft put
		Encoding 124 /bar put
		Encoding 125 /braceright put
		Encoding 126 /asciitilde put
		Encoding 161 /exclamdown put
		Encoding 162 /cent put
		Encoding 163 /sterling put
		Encoding 164 /fraction put
		Encoding 165 /yen put
		Encoding 166 /florin put
		Encoding 167 /section put
		Encoding 168 /currency put
		Encoding 169 /quotesingle put
		Encoding 170 /quotedblleft put
		Encoding 171 /guillemotleft put
		Encoding 172 /guilsinglleft put
		Encoding 173 /guilsinglright put
		Encoding 174 /fi put
		Encoding 175 /fl put
		Encoding 177 /endash put
		Encoding 178 /dagger put
		Encoding 179 /daggerdbl put
		Encoding 180 /periodcentered put
		Encoding 182 /paragraph put
		Encoding 183 /bullet put
		Encoding 184 /quotesinglbase put
		Encoding 185 /quotedblbase put
		Encoding 186 /quotedblright put
		Encoding 187 /guillemotright put
		Encoding 188 /ellipsis put
		Encoding 189 /perthousand put
		Encoding 191 /questiondown put
		Encoding 193 /grave put
		Encoding 194 /acute put
		Encoding 195 /circumflex put
		Encoding 196 /tilde put
		Encoding 197 /macron put
		Encoding 198 /breve put
		Encoding 199 /dotaccent put
		Encoding 200 /dieresis put
		Encoding 202 /ring put
		Encoding 203 /cedilla put
		Encoding 205 /hungarumlaut put
		Encoding 206 /ogonek put
		Encoding 207 /caron put
		Encoding 208 /emdash put
		Encoding 225 /AE put
		Encoding 227 /ordfeminine put
		Encoding 232 /Lslash put
		Encoding 233 /Oslash put
		Encoding 234 /OE put
		Encoding 235 /ordmasculine put
		Encoding 241 /ae put
		Encoding 245 /dotlessi put
		Encoding 248 /lslash put
		Encoding 249 /oslash put
		Encoding 250 /oe put
		Encoding 251 /germandbls put
	/BuildGlyph
		{ 2 copy exch /Metrics get exch 
			2 copy known {get}{pop pop 1000.0} ifelse
			0
			0 -293 1042 1010
			setcachedevice
			exch /CharProcs get exch
			2 copy known not
					{pop /.notdef}
				if
			get exec
		} bind def

	/BuildChar
		{ 1 index /Encoding get exch get
		  1 index /BuildGlyph get exec
	  } bind def
	/Metrics 150 dict def
		Metrics begin
		/.notdef 1000 def
		/space 250.0 def
		/exclam 333.0 def
		/quotedbl 713.0 def
		/numbersign 500.0 def
		/dollar 549.0 def
		/percent 833.0 def
		/ampersand 778.0 def
		/quoteright 439.0 def
		/parenleft 333.0 def
		/parenright 333.0 def
		/asterisk 500.0 def
		/plus 549.0 def
		/comma 250.0 def
		/hyphen 584.0 def
		/period 250.0 def
		/slash 278.0 def
		/zero 500.0 def
		/one 500.0 def
		/two 500.0 def
		/three 500.0 def
		/four 500.0 def
		/five 500.0 def
		/six 500.0 def
		/seven 500.0 def
		/eight 500.0 def
		/nine 500.0 def
		/colon 278.0 def
		/semicolon 278.0 def
		/less 549.0 def
		/equal 549.0 def
		/greater 549.0 def
		/question 444.0 def
		/at 549.0 def
		/A 722.0 def
		/B 667.0 def
		/C 722.0 def
		/D 612.0 def
		/E 611.0 def
		/F 763.0 def
		/G 603.0 def
		/H 722.0 def
		/I 333.0 def
		/J 631.0 def
		/K 722.0 def
		/L 686.0 def
		/M 889.0 def
		/N 722.0 def
		/O 722.0 def
		/P 768.0 def
		/Q 741.0 def
		/R 556.0 def
		/S 592.0 def
		/T 611.0 def
		/U 690.0 def
		/V 439.0 def
		/W 768.0 def
		/X 645.0 def
		/Y 795.0 def
		/Z 611.0 def
		/bracketleft 333.0 def
		/backslash 863.0 def
		/bracketright 333.0 def
		/asciicircum 658.0 def
		/underscore 500.0 def
		/quoteleft 500.0 def
		/a 631.0 def
		/b 549.0 def
		/c 549.0 def
		/d 494.0 def
		/e 439.0 def
		/f 521.0 def
		/g 411.0 def
		/h 603.0 def
		/i 329.0 def
		/j 603.0 def
		/k 549.0 def
		/l 549.0 def
		/m 576.0 def
		/n 521.0 def
		/o 549.0 def
		/p 549.0 def
		/q 521.0 def
		/r 549.0 def
		/s 603.0 def
		/t 439.0 def
		/u 576.0 def
		/v 713.0 def
		/w 686.0 def
		/x 493.0 def
		/y 686.0 def
		/z 494.0 def
		/braceleft 480.0 def
		/bar 200.0 def
		/braceright 480.0 def
		/asciitilde 549.0 def
		/exclamdown 620.0 def
		/cent 247.0 def
		/sterling 549.0 def
		/fraction 584.0 def
		/yen 713.0 def
		/florin 584.0 def
		/section 753.0 def
		/currency 167.0 def
		/quotesingle 439.0 def
		/quotedblleft 584.0 def
		/guillemotleft 1042.0 def
		/guilsinglleft 584.0 def
		/guilsinglright 584.0 def
		/fi 584.0 def
		/fl 584.0 def
		/endash 584.0 def
		/dagger 584.0 def
		/daggerdbl 584.0 def
		/periodcentered 460.0 def
		/paragraph 494.0 def
		/bullet 584.0 def
		/quotesinglbase 584.0 def
		/quotedblbase 584.0 def
		/quotedblright 584.0 def
		/guillemotright 549.0 def
		/ellipsis 584.0 def
		/perthousand 584.0 def
		/questiondown 658.0 def
		/grave 500.0 def
		/acute 584.0 def
		/circumflex 584.0 def
		/tilde 584.0 def
		/macron 603.0 def
		/breve 584.0 def
		/dotaccent 584.0 def
		/dieresis 753.0 def
		/ring 584.0 def
		/cedilla 549.0 def
		/hungarumlaut 584.0 def
		/ogonek 584.0 def
		/caron 584.0 def
		/emdash 584.0 def
		/AE 823.0 def
		/ordfeminine 753.0 def
		/Lslash 584.0 def
		/Oslash 713.0 def
		/OE 584.0 def
		/ordmasculine 549.0 def
		/ae 384.0 def
		/dotlessi 584.0 def
		/lslash 584.0 def
		/oslash 384.0 def
		/oe 584.0 def
		/germandbls 603.0 def
	end
	/CharProcs 150 dict def
	CharProcs begin
			%define Glyph dictionary and start filling
	/space
		{
fill
		} def

	/exclam
		{
240 39 moveto
240 23 234 10 223 0  curveto
212 -11 199 -17 184 -17  curveto
168 -17 155 -11 144 0  curveto
133 10 128 23 128 39  curveto
128 54 133 67 144 78  curveto
155 89 168 95 184 95  curveto
199 95 212 89 223 78  curveto
234 67 240 54 240 39  curveto
closepath
240 580 moveto
240 571 239 562 238 552  curveto
237 542 236 532 234 523  curveto
232 513 231 504 230 496  curveto
228 488 227 481 227 476  curveto
194 209 lineto
193 205 192 200 191 196  curveto
189 192 187 190 184 190  curveto
180 190 178 192 177 196  curveto
175 200 174 205 174 209  curveto
141 475 lineto
140 479 139 486 138 494  curveto
136 502 135 511 133 521  curveto
131 531 130 541 129 551  curveto
128 561 128 570 128 579  curveto
128 604 131 626 139 644  curveto
147 662 162 672 184 672  curveto
200 672 214 665 224 651  curveto
234 637 240 614 240 580  curveto
closepath
fill
		} def

	/quotedbl
		{
199 447 moveto
361 70 lineto
517 447 lineto
199 447 lineto
closepath
388 0 moveto
329 0 lineto
31 705 lineto
88 705 lineto
175 502 lineto
540 502 lineto
624 705 lineto
681 705 lineto
388 0 lineto
closepath
fill
		} def

	/numbersign
		{
201 420 moveto
176 238 lineto
301 238 lineto
325 420 lineto
201 420 lineto
closepath
475 420 moveto
372 420 lineto
348 238 lineto
451 238 lineto
445 192 lineto
341 192 lineto
313 -16 lineto
266 -16 lineto
294 192 lineto
170 192 lineto
141 -16 lineto
94 -16 lineto
123 192 lineto
20 192 lineto
26 238 lineto
129 238 lineto
154 420 lineto
54 420 lineto
60 466 lineto
160 466 lineto
189 673 lineto
236 673 lineto
207 466 lineto
332 466 lineto
360 673 lineto
407 673 lineto
379 466 lineto
481 466 lineto
475 420 lineto
closepath
fill
		} def

	/dollar
		{
25 0 moveto
25 55 lineto
423 55 lineto
423 342 lineto
69 342 lineto
69 397 lineto
423 397 lineto
423 652 lineto
25 652 lineto
25 707 lineto
478 707 lineto
478 0 lineto
25 0 lineto
closepath
fill
		} def

	/percent
		{
741 212 moveto
741 222 739 233 736 244  curveto
732 254 727 264 721 272  curveto
715 280 707 287 698 292  curveto
688 297 678 300 666 300  curveto
652 300 641 297 632 291  curveto
622 285 613 277 603 267  curveto
599 263 595 258 591 254  curveto
587 249 583 244 579 238  curveto
575 232 570 224 566 215  curveto
561 206 555 195 549 183  curveto
539 163 531 144 525 125  curveto
518 105 515 88 515 74  curveto
515 46 521 26 533 16  curveto
545 5 559 0 575 0  curveto
591 0 605 2 617 8  curveto
628 14 639 22 651 34  curveto
666 49 679 66 691 85  curveto
702 103 711 121 719 138  curveto
726 155 731 170 735 184  curveto
739 197 741 206 741 212  curveto
closepath
365 536 moveto
365 542 364 549 363 557  curveto
362 565 361 572 360 579  curveto
340 587 325 595 317 601  curveto
308 607 301 611 296 615  curveto
294 615 293 615 291 615  curveto
289 615 288 616 287 616  curveto
280 616 273 614 267 612  curveto
260 609 252 603 243 594  curveto
238 589 233 583 227 576  curveto
221 568 215 560 209 552  curveto
203 544 198 535 193 526  curveto
187 517 183 509 179 501  curveto
169 478 160 457 153 438  curveto
146 419 143 399 143 379  curveto
143 355 148 339 158 329  curveto
168 319 183 314 201 314  curveto
217 314 232 317 246 325  curveto
260 332 272 341 284 353  curveto
296 364 306 376 315 390  curveto
323 403 331 415 337 427  curveto
347 448 355 469 359 490  curveto
363 510 365 526 365 536  curveto
closepath
771 226 moveto
771 207 768 188 763 168  curveto
757 148 750 128 741 109  curveto
732 90 722 72 710 55  curveto
698 38 686 23 674 11  curveto
656 -6 638 -18 620 -25  curveto
601 -32 581 -36 560 -36  curveto
523 -36 493 -24 469 -1  curveto
445 22 434 52 434 90  curveto
434 119 438 146 448 170  curveto
457 194 469 216 484 236  curveto
499 256 516 273 535 287  curveto
554 301 573 314 593 324  curveto
603 329 614 333 626 335  curveto
638 337 649 338 660 338  curveto
698 338 726 328 744 309  curveto
762 289 771 262 771 226  curveto
closepath
229 -28 moveto
174 -28 lineto
563 583 lineto
551 578 540 574 531 571  curveto
522 568 514 566 506 564  curveto
498 562 489 560 481 559  curveto
473 558 463 558 453 558  curveto
441 558 431 558 423 560  curveto
415 561 404 565 390 573  curveto
390 567 391 560 392 550  curveto
393 540 394 530 394 520  curveto
394 502 392 485 389 470  curveto
385 455 379 439 371 422  curveto
355 392 338 365 320 343  curveto
301 320 282 304 263 295  curveto
251 289 238 285 222 281  curveto
206 277 192 276 179 276  curveto
162 276 146 279 132 286  curveto
118 292 105 302 95 314  curveto
85 326 77 340 71 356  curveto
65 372 63 389 63 408  curveto
63 424 65 440 69 458  curveto
73 476 79 492 87 506  curveto
95 522 106 538 118 553  curveto
130 567 142 580 154 592  curveto
166 603 177 612 188 620  curveto
199 628 208 633 215 637  curveto
228 643 240 648 250 650  curveto
260 652 270 653 282 653  curveto
303 653 319 650 330 646  curveto
340 641 348 637 353 633  curveto
355 630 359 626 365 621  curveto
371 615 378 610 386 605  curveto
394 600 405 596 417 592  curveto
429 588 442 586 458 586  curveto
472 586 487 588 503 592  curveto
519 596 533 601 547 607  curveto
561 613 573 621 583 629  curveto
593 637 599 646 602 655  curveto
657 655 lineto
229 -28 lineto
closepath
fill
		} def

	/ampersand
		{
400 108 moveto
364 150 333 193 308 235  curveto
282 277 262 312 246 340  curveto
224 327 206 314 192 301  curveto
177 288 165 275 157 262  curveto
148 248 142 234 138 220  curveto
134 206 133 191 133 176  curveto
133 158 136 141 143 125  curveto
150 108 160 93 172 80  curveto
184 67 197 57 213 49  curveto
228 41 244 37 260 37  curveto
282 37 305 43 330 55  curveto
355 67 378 85 400 108  curveto
closepath
433 548 moveto
433 576 425 595 410 607  curveto
395 619 378 625 359 625  curveto
345 625 334 623 325 619  curveto
315 615 307 609 300 602  curveto
292 594 287 584 284 571  curveto
280 558 279 545 279 532  curveto
279 510 283 490 291 470  curveto
299 450 307 430 317 411  curveto
330 418 343 425 357 433  curveto
371 441 383 450 395 460  curveto
406 470 415 483 422 497  curveto
429 511 433 528 433 548  curveto
closepath
750 100 moveto
744 86 737 74 729 64  curveto
721 54 713 44 706 35  curveto
694 19 678 7 657 -3  curveto
635 -13 613 -18 589 -18  curveto
571 -18 553 -14 535 -6  curveto
517 1 501 10 487 21  curveto
472 31 459 42 448 53  curveto
436 63 428 72 422 78  curveto
409 64 394 52 378 41  curveto
362 29 345 19 327 10  curveto
309 1 290 -5 271 -10  curveto
252 -15 234 -18 216 -18  curveto
191 -18 166 -14 141 -6  curveto
116 2 97 12 84 26  curveto
70 39 60 56 52 76  curveto
44 96 41 119 41 143  curveto
41 174 48 202 64 227  curveto
79 252 97 274 118 293  curveto
138 312 159 328 181 342  curveto
202 355 219 366 232 374  curveto
228 387 224 399 220 409  curveto
216 419 212 429 209 438  curveto
206 447 204 456 202 466  curveto
200 475 199 485 199 497  curveto
199 523 203 547 212 567  curveto
220 587 231 604 245 618  curveto
259 632 275 643 293 650  curveto
310 657 330 661 354 661  curveto
378 661 398 658 416 652  curveto
433 646 450 635 466 619  curveto
474 611 480 601 484 590  curveto
488 578 491 567 491 555  curveto
491 539 486 521 477 499  curveto
468 477 456 458 440 442  curveto
427 429 412 418 396 410  curveto
379 401 358 391 332 380  curveto
336 372 342 361 351 345  curveto
359 329 369 312 381 293  curveto
393 274 406 255 420 235  curveto
434 215 448 198 462 182  curveto
472 194 483 207 494 221  curveto
505 235 515 249 524 264  curveto
533 279 540 294 546 310  curveto
551 325 554 340 554 354  curveto
554 368 550 379 543 388  curveto
535 397 519 402 495 402  curveto
495 420 lineto
706 420 lineto
706 402 lineto
681 402 663 397 651 388  curveto
639 378 629 365 619 349  curveto
609 333 600 317 590 299  curveto
580 281 569 264 558 246  curveto
547 228 536 210 524 192  curveto
512 174 500 158 487 144  curveto
493 136 502 128 514 118  curveto
526 108 538 98 552 89  curveto
566 80 579 73 593 67  curveto
606 61 618 58 630 58  curveto
646 58 662 62 677 71  curveto
691 80 710 94 734 114  curveto
750 100 lineto
750 100 lineto
closepath
fill
		} def

	/quoteright
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/parenleft
		{
290 -191 moveto
283 -191 272 -185 256 -173  curveto
240 -161 222 -146 204 -128  curveto
186 -110 168 -89 150 -67  curveto
132 -45 117 -23 107 -2  curveto
71 70 53 151 53 241  curveto
53 285 57 327 66 368  curveto
74 408 87 445 104 478  curveto
116 504 132 528 151 552  curveto
170 576 189 596 208 614  curveto
226 632 243 646 258 657  curveto
273 667 284 673 290 673  curveto
300 656 lineto
276 636 256 617 241 600  curveto
225 583 212 566 202 549  curveto
192 532 183 515 177 497  curveto
171 479 165 460 160 440  curveto
156 424 152 408 149 394  curveto
146 379 144 364 142 348  curveto
140 332 138 316 138 299  curveto
137 281 137 262 137 241  curveto
137 199 138 162 142 132  curveto
146 102 151 73 159 46  curveto
163 32 167 17 172 1  curveto
176 -15 183 -32 193 -50  curveto
202 -68 215 -88 232 -109  curveto
249 -129 272 -151 300 -174  curveto
290 -191 lineto
closepath
fill
		} def

	/parenright
		{
277 241 moveto
277 151 259 70 223 -2  curveto
212 -23 198 -45 180 -67  curveto
162 -89 143 -110 125 -128  curveto
107 -146 90 -161 74 -173  curveto
58 -185 46 -191 40 -191  curveto
30 -174 lineto
58 -151 80 -129 97 -109  curveto
114 -88 127 -68 137 -50  curveto
146 -32 153 -15 158 1  curveto
162 17 167 32 171 46  curveto
178 73 183 102 187 132  curveto
191 162 193 199 193 241  curveto
193 262 192 281 192 299  curveto
191 316 190 332 188 348  curveto
186 364 183 379 180 394  curveto
177 408 174 424 170 440  curveto
164 460 158 479 152 497  curveto
146 515 137 532 127 549  curveto
117 566 104 583 89 600  curveto
73 617 54 636 30 656  curveto
40 673 lineto
46 673 56 667 71 657  curveto
86 646 103 632 122 614  curveto
140 596 159 576 178 552  curveto
196 528 212 504 226 478  curveto
242 445 255 408 264 368  curveto
272 327 277 285 277 241  curveto
closepath
fill
		} def

	/asterisk
		{
427 253 moveto
427 244 424 237 418 231  curveto
412 225 404 223 392 223  curveto
380 223 370 226 363 234  curveto
358 238 353 244 348 252  curveto
342 259 335 267 326 277  curveto
314 289 301 299 287 309  curveto
273 319 265 324 261 324  curveto
256 324 254 318 254 308  curveto
254 289 255 274 258 263  curveto
261 251 264 241 268 233  curveto
272 224 275 216 278 208  curveto
281 200 283 190 283 178  curveto
283 164 278 153 270 146  curveto
261 138 253 135 246 135  curveto
239 135 231 138 222 145  curveto
213 151 209 162 209 177  curveto
209 189 210 200 213 208  curveto
216 216 219 224 223 232  curveto
227 240 230 250 233 262  curveto
236 273 238 288 238 308  curveto
238 311 237 314 237 318  curveto
236 322 234 324 231 324  curveto
229 324 225 322 221 320  curveto
216 317 211 313 205 309  curveto
199 305 192 300 185 294  curveto
178 288 172 283 166 277  curveto
156 267 149 259 144 252  curveto
138 244 133 238 129 234  curveto
121 226 112 223 100 223  curveto
88 223 79 225 73 231  curveto
67 237 65 244 65 253  curveto
65 259 66 266 69 274  curveto
72 282 78 288 87 292  curveto
90 294 97 296 109 299  curveto
120 302 132 305 146 309  curveto
159 313 172 316 184 320  curveto
196 324 204 327 210 330  curveto
212 331 215 333 219 335  curveto
222 337 224 340 224 344  curveto
224 348 220 352 214 355  curveto
195 364 179 370 167 374  curveto
155 378 144 380 135 382  curveto
126 383 118 384 112 385  curveto
105 386 98 388 92 392  curveto
88 394 82 398 76 405  curveto
69 412 66 420 66 429  curveto
66 437 68 445 73 452  curveto
77 459 86 463 100 463  curveto
106 463 114 461 122 458  curveto
130 455 137 450 144 444  curveto
148 439 153 433 157 426  curveto
161 418 168 410 178 401  curveto
186 392 196 384 208 378  curveto
220 371 228 368 232 368  curveto
236 368 238 372 238 381  curveto
238 400 236 416 233 428  curveto
230 440 227 451 224 461  curveto
220 471 217 480 214 488  curveto
211 496 210 506 210 518  curveto
210 526 212 533 216 540  curveto
220 547 230 551 246 551  curveto
261 551 271 547 275 540  curveto
279 532 282 525 282 517  curveto
282 506 280 496 277 488  curveto
274 480 271 471 268 462  curveto
264 452 261 441 258 429  curveto
255 416 254 400 254 381  curveto
254 372 256 368 260 368  curveto
264 368 271 371 283 378  curveto
295 384 305 392 314 401  curveto
323 410 330 418 334 426  curveto
338 433 343 439 348 444  curveto
354 450 362 455 370 458  curveto
378 461 385 463 392 463  curveto
405 463 414 459 419 452  curveto
423 445 426 437 426 429  curveto
426 420 422 412 416 405  curveto
409 398 404 394 400 392  curveto
392 388 385 386 379 385  curveto
373 384 365 383 356 382  curveto
347 380 336 378 324 374  curveto
312 370 296 364 278 355  curveto
271 352 268 348 268 344  curveto
268 340 269 337 273 335  curveto
276 333 279 331 282 330  curveto
286 327 295 324 307 320  curveto
319 316 332 313 346 309  curveto
359 305 371 302 383 299  curveto
394 296 401 294 405 292  curveto
413 288 419 282 422 274  curveto
425 266 427 259 427 253  curveto
closepath
fill
		} def

	/plus
		{
302 243 moveto
302 0 lineto
247 0 lineto
247 243 lineto
10 243 lineto
10 298 lineto
247 298 lineto
247 533 lineto
302 533 lineto
302 298 lineto
539 298 lineto
539 243 lineto
302 243 lineto
closepath
fill
		} def

	/comma
		{
194 20 moveto
194 0 190 -20 182 -41  curveto
174 -61 161 -81 142 -101  curveto
137 -105 131 -111 125 -117  curveto
118 -123 111 -128 104 -134  curveto
97 -139 90 -143 84 -147  curveto
77 -151 71 -153 67 -153  curveto
64 -153 61 -152 59 -151  curveto
57 -149 56 -147 56 -145  curveto
56 -139 57 -135 60 -132  curveto
62 -129 66 -126 71 -124  curveto
124 -91 151 -55 151 -16  curveto
151 -5 147 0 139 0  curveto
135 0 130 -1 124 -3  curveto
118 -5 112 -6 108 -6  curveto
91 -6 78 -1 69 8  curveto
60 17 56 30 56 46  curveto
56 62 61 76 72 87  curveto
83 98 97 104 115 104  curveto
127 104 137 101 146 97  curveto
155 92 164 86 172 78  curveto
180 70 185 62 189 54  curveto
192 46 194 34 194 20  curveto
closepath
fill
		} def

	/hyphen
		{
fill
		} def

	/period
		{
181 39 moveto
181 23 175 10 164 0  curveto
153 -11 140 -17 125 -17  curveto
109 -17 96 -11 85 0  curveto
74 10 69 23 69 39  curveto
69 54 74 67 85 78  curveto
96 89 109 95 125 95  curveto
140 95 153 89 164 78  curveto
175 67 181 54 181 39  curveto
closepath
fill
		} def

	/slash
		{
44 -18 moveto
0 -18 lineto
210 646 lineto
254 646 lineto
44 -18 lineto
closepath
fill
		} def

	/zero
		{
377 332 moveto
377 352 376 375 375 400  curveto
373 424 371 448 369 471  curveto
366 494 363 515 359 535  curveto
355 555 350 570 344 582  curveto
334 600 321 615 304 628  curveto
286 641 267 648 247 648  curveto
227 648 209 641 191 629  curveto
173 617 159 601 150 582  curveto
144 572 140 558 136 540  curveto
132 522 128 502 126 480  curveto
123 458 121 434 119 408  curveto
117 382 117 357 117 331  curveto
117 285 119 241 125 197  curveto
130 153 140 117 156 87  curveto
166 67 179 51 195 39  curveto
211 26 228 20 248 20  curveto
265 20 282 26 299 39  curveto
315 52 328 68 338 86  curveto
347 104 354 125 360 149  curveto
365 172 369 195 371 218  curveto
373 241 375 263 376 283  curveto
376 303 377 320 377 332  curveto
closepath
471 340 moveto
471 305 467 267 461 227  curveto
454 187 439 144 417 99  curveto
405 74 391 54 377 39  curveto
362 24 347 12 332 4  curveto
317 -3 302 -9 288 -12  curveto
273 -15 260 -17 248 -17  curveto
206 -17 171 -6 144 15  curveto
116 37 94 65 77 99  curveto
41 171 23 251 23 340  curveto
23 372 25 403 31 433  curveto
36 463 43 491 52 517  curveto
60 543 70 566 82 586  curveto
93 606 105 623 117 635  curveto
134 652 154 665 177 673  curveto
199 681 222 685 245 685  curveto
253 685 263 684 274 683  curveto
285 681 297 679 309 675  curveto
321 671 333 666 345 659  curveto
357 652 368 643 380 632  curveto
389 622 399 608 410 590  curveto
420 572 430 550 439 525  curveto
448 499 456 471 462 440  curveto
468 408 471 375 471 340  curveto
closepath
fill
		} def

	/one
		{
120 0 moveto
120 18 lineto
128 18 137 18 148 20  curveto
159 22 169 25 179 30  curveto
188 35 196 42 203 52  curveto
209 62 213 74 213 90  curveto
213 563 lineto
213 573 211 580 207 584  curveto
203 588 198 590 191 590  curveto
184 590 174 587 162 583  curveto
149 578 134 572 117 566  curveto
117 584 lineto
279 673 lineto
297 673 lineto
297 91 lineto
297 75 300 62 307 52  curveto
313 42 321 35 331 30  curveto
341 25 351 22 362 20  curveto
372 18 382 18 390 18  curveto
390 0 lineto
120 0 lineto
closepath
fill
		} def

	/two
		{
416 0 moveto
25 0 lineto
27 15 lineto
207 206 lineto
224 224 240 244 256 266  curveto
271 287 284 309 296 331  curveto
307 353 316 374 323 396  curveto
329 417 333 436 333 454  curveto
333 499 321 536 298 564  curveto
275 592 241 606 195 606  curveto
161 606 131 595 107 574  curveto
83 553 65 521 53 479  curveto
32 479 lineto
34 510 42 538 54 562  curveto
66 586 79 606 95 622  curveto
119 646 143 662 167 672  curveto
191 681 217 686 245 686  curveto
265 686 286 682 310 674  curveto
333 666 355 651 377 630  curveto
385 620 393 610 399 599  curveto
405 587 409 575 413 563  curveto
416 550 418 538 420 526  curveto
421 514 422 503 422 493  curveto
422 473 418 453 410 431  curveto
402 409 391 387 378 365  curveto
365 343 350 321 333 300  curveto
316 278 299 258 282 240  curveto
124 73 lineto
353 73 lineto
370 73 384 74 395 78  curveto
405 81 414 86 421 92  curveto
427 98 433 104 438 112  curveto
442 120 448 128 454 136  curveto
475 136 lineto
416 0 lineto
closepath
fill
		} def

	/three
		{
435 206 moveto
435 164 423 126 401 94  curveto
379 62 350 37 314 19  curveto
290 7 265 -1 237 -7  curveto
209 -13 178 -17 144 -17  curveto
124 -17 109 -14 97 -10  curveto
85 -5 75 0 69 7  curveto
62 14 57 21 55 28  curveto
53 35 52 41 52 47  curveto
52 55 55 62 61 70  curveto
67 77 78 81 94 81  curveto
105 81 115 78 124 72  curveto
133 66 141 60 149 54  curveto
158 46 167 38 177 32  curveto
186 26 202 23 226 23  curveto
246 23 264 26 280 34  curveto
296 41 310 51 322 63  curveto
334 75 343 90 349 107  curveto
355 123 359 141 359 161  curveto
359 173 357 185 355 198  curveto
352 211 348 224 344 236  curveto
339 248 333 260 327 271  curveto
320 281 313 290 306 298  curveto
296 308 285 316 275 322  curveto
264 328 253 332 242 335  curveto
231 338 220 340 208 342  curveto
196 343 183 344 171 345  curveto
165 345 159 347 155 349  curveto
151 351 149 354 149 358  curveto
149 361 150 364 154 366  curveto
157 368 161 370 165 372  curveto
211 387 247 407 272 432  curveto
288 448 299 463 304 477  curveto
309 491 312 507 312 526  curveto
312 538 309 550 305 562  curveto
300 574 293 584 284 594  curveto
274 603 262 610 248 616  curveto
234 622 217 625 198 625  curveto
169 625 144 617 123 601  curveto
102 585 80 560 58 524  curveto
39 524 lineto
45 548 53 569 64 589  curveto
75 609 89 626 106 640  curveto
122 654 142 665 165 673  curveto
188 681 215 685 245 685  curveto
267 685 288 681 306 675  curveto
324 668 339 659 352 648  curveto
365 636 375 623 382 608  curveto
389 592 393 576 393 559  curveto
393 536 386 512 372 488  curveto
358 464 335 440 302 418  curveto
316 412 328 405 339 399  curveto
349 393 359 386 367 378  curveto
375 370 382 362 389 352  curveto
395 342 402 330 409 317  curveto
426 282 435 245 435 206  curveto
closepath
fill
		} def

	/four
		{
298 562 moveto
60 229 lineto
298 229 lineto
298 562 lineto
closepath
382 159 moveto
382 0 lineto
298 0 lineto
298 159 lineto
16 159 lineto
16 230 lineto
332 685 lineto
382 685 lineto
382 229 lineto
469 229 lineto
469 159 lineto
382 159 lineto
closepath
fill
		} def

	/five
		{
401 583 moveto
183 583 lineto
143 501 lineto
216 487 lineto
244 481 270 472 294 458  curveto
318 444 339 428 359 409  curveto
378 389 394 364 407 333  curveto
419 302 426 261 426 211  curveto
426 193 424 178 421 166  curveto
418 153 412 138 404 121  curveto
396 105 385 89 371 73  curveto
357 57 340 42 320 29  curveto
299 15 274 4 246 -4  curveto
218 -12 186 -17 150 -17  curveto
133 -17 117 -15 102 -13  curveto
87 -11 74 -7 63 -2  curveto
52 2 43 8 37 16  curveto
31 24 28 33 28 45  curveto
28 55 31 64 38 72  curveto
44 80 55 85 69 85  curveto
82 85 95 81 107 75  curveto
119 69 132 62 144 54  curveto
156 46 168 38 181 32  curveto
194 26 208 23 224 23  curveto
246 23 267 30 287 46  curveto
307 62 322 81 334 103  curveto
340 116 345 129 348 143  curveto
350 157 352 172 352 188  curveto
352 229 341 265 321 297  curveto
300 328 272 353 236 371  curveto
212 383 186 392 159 398  curveto
131 404 98 409 59 413  curveto
180 673 lineto
369 673 lineto
372 673 376 672 381 672  curveto
385 672 390 672 396 672  curveto
404 672 410 673 415 676  curveto
419 678 425 681 431 685  curveto
443 680 lineto
401 583 lineto
closepath
fill
		} def

	/six
		{
376 186 moveto
376 223 371 256 363 285  curveto
354 314 343 336 329 350  curveto
316 362 303 371 289 375  curveto
275 379 262 381 249 381  curveto
223 381 201 376 182 368  curveto
162 359 148 350 139 342  curveto
137 331 136 316 134 296  curveto
132 276 132 256 132 236  curveto
132 226 132 214 133 199  curveto
134 183 137 167 141 150  curveto
145 132 150 115 157 98  curveto
164 81 174 67 186 55  curveto
197 43 210 34 226 28  curveto
241 22 256 19 271 19  curveto
288 19 304 23 319 33  curveto
334 42 347 57 357 77  curveto
362 88 366 103 370 123  curveto
374 142 376 163 376 186  curveto
closepath
467 211 moveto
467 165 459 128 444 99  curveto
429 69 411 46 389 29  curveto
367 11 343 0 319 -7  curveto
295 -14 274 -18 256 -18  curveto
242 -18 226 -16 210 -12  curveto
193 -8 176 -2 160 7  curveto
143 16 127 29 111 45  curveto
95 61 80 81 68 107  curveto
57 128 49 151 44 177  curveto
38 203 36 233 36 269  curveto
36 306 39 339 45 369  curveto
51 398 60 423 70 443  curveto
93 490 121 530 153 563  curveto
185 596 223 624 269 647  curveto
293 659 319 668 349 675  curveto
378 681 411 685 447 685  curveto
446 668 lineto
419 664 390 656 360 644  curveto
330 632 301 615 273 593  curveto
245 571 219 543 197 510  curveto
174 477 157 438 146 392  curveto
162 398 177 404 190 409  curveto
203 414 215 418 226 421  curveto
237 424 247 426 257 428  curveto
267 429 277 430 288 430  curveto
307 430 328 425 350 417  curveto
372 408 392 394 411 376  curveto
427 359 441 337 451 310  curveto
461 282 467 249 467 211  curveto
closepath
fill
		} def

	/seven
		{
234 -16 moveto
175 -16 lineto
370 583 lineto
143 583 lineto
129 583 117 580 107 576  curveto
97 571 89 565 82 558  curveto
74 550 68 542 63 533  curveto
57 523 52 514 46 504  curveto
24 513 lineto
85 673 lineto
448 673 lineto
448 641 lineto
234 -16 lineto
closepath
fill
		} def

	/eight
		{
364 128 moveto
364 149 360 169 352 187  curveto
344 205 334 220 322 233  curveto
314 240 307 246 300 252  curveto
292 258 284 264 276 270  curveto
267 276 258 282 248 288  curveto
238 294 228 302 216 312  curveto
204 306 193 298 183 288  curveto
172 277 163 265 155 252  curveto
147 238 140 224 136 210  curveto
131 195 129 181 129 168  curveto
129 150 131 132 136 114  curveto
141 96 149 80 159 66  curveto
169 52 182 40 198 31  curveto
213 22 231 18 253 18  curveto
269 18 284 20 299 26  curveto
313 31 325 38 335 48  curveto
344 57 351 68 356 81  curveto
361 94 364 110 364 128  curveto
closepath
352 548 moveto
352 562 349 575 345 586  curveto
341 596 335 606 327 615  curveto
307 637 278 648 242 648  curveto
222 648 206 645 195 640  curveto
183 635 173 628 164 619  curveto
152 608 145 597 141 586  curveto
137 575 135 564 135 552  curveto
135 534 141 512 154 488  curveto
167 464 187 443 215 425  curveto
257 397 lineto
282 412 304 432 323 458  curveto
342 484 352 514 352 548  curveto
closepath
441 153 moveto
441 131 437 110 430 90  curveto
422 70 411 52 397 38  curveto
379 20 357 7 330 -3  curveto
303 -13 275 -18 247 -18  curveto
221 -18 197 -14 174 -6  curveto
151 2 131 13 113 27  curveto
95 41 80 59 70 79  curveto
59 99 54 121 54 145  curveto
54 161 57 179 63 197  curveto
69 215 77 232 88 250  curveto
99 267 112 283 128 299  curveto
143 314 160 328 180 340  curveto
125 397 lineto
110 412 97 431 85 453  curveto
73 475 67 503 67 535  curveto
67 558 71 579 81 598  curveto
91 616 104 632 120 645  curveto
136 658 155 668 177 675  curveto
199 681 222 685 247 685  curveto
269 685 289 682 307 678  curveto
325 674 341 668 355 661  curveto
379 649 396 632 408 612  curveto
419 592 425 571 425 549  curveto
425 512 413 479 390 451  curveto
367 422 334 395 290 370  curveto
303 362 317 351 332 339  curveto
347 326 362 312 378 297  curveto
396 279 411 257 423 233  curveto
435 209 441 182 441 153  curveto
closepath
fill
		} def

	/nine
		{
361 377 moveto
361 387 360 400 360 417  curveto
359 433 357 451 355 470  curveto
353 489 349 508 345 528  curveto
341 547 335 564 328 580  curveto
318 598 304 614 286 628  curveto
267 642 247 650 226 650  curveto
207 650 190 644 175 634  curveto
159 623 148 610 141 595  curveto
133 581 128 566 126 548  curveto
124 530 123 509 123 486  curveto
123 416 134 364 156 332  curveto
178 299 206 283 241 283  curveto
257 283 276 286 298 294  curveto
320 301 340 314 359 334  curveto
360 339 361 345 361 352  curveto
361 359 361 367 361 377  curveto
closepath
460 393 moveto
460 358 456 325 448 293  curveto
440 261 430 232 416 204  curveto
383 138 336 85 276 46  curveto
215 7 144 -14 64 -18  curveto
62 1 lineto
97 9 131 21 164 37  curveto
197 52 226 72 251 98  curveto
261 109 272 122 284 138  curveto
296 153 306 169 316 187  curveto
326 204 334 222 341 240  curveto
347 258 352 275 354 291  curveto
330 275 305 263 279 253  curveto
252 243 228 239 207 239  curveto
183 239 160 244 139 254  curveto
117 264 99 278 83 296  curveto
67 314 54 335 45 361  curveto
35 386 31 414 31 444  curveto
31 480 37 514 51 547  curveto
64 579 81 606 102 627  curveto
121 646 141 660 162 670  curveto
183 680 207 685 235 685  curveto
255 685 279 680 306 671  curveto
333 661 359 644 385 619  curveto
396 607 406 593 416 576  curveto
425 558 433 539 439 519  curveto
445 498 450 477 454 455  curveto
458 433 460 413 460 393  curveto
closepath
fill
		} def

	/colon
		{
193 39 moveto
193 23 187 10 176 0  curveto
165 -11 152 -17 137 -17  curveto
121 -17 108 -11 97 0  curveto
86 10 81 23 81 39  curveto
81 54 86 67 97 78  curveto
108 89 121 95 137 95  curveto
152 95 165 89 176 78  curveto
187 67 193 54 193 39  curveto
closepath
193 404 moveto
193 388 187 375 176 364  curveto
165 353 152 348 137 348  curveto
121 348 108 353 97 364  curveto
86 375 81 388 81 404  curveto
81 419 86 432 97 443  curveto
108 454 121 460 137 460  curveto
152 460 165 454 176 443  curveto
187 432 193 419 193 404  curveto
closepath
fill
		} def

	/semicolon
		{
221 20 moveto
221 0 217 -20 209 -41  curveto
201 -61 188 -81 169 -101  curveto
164 -105 158 -111 152 -117  curveto
145 -123 138 -128 131 -134  curveto
124 -139 117 -143 111 -147  curveto
104 -151 98 -153 94 -153  curveto
91 -153 88 -152 86 -151  curveto
84 -149 83 -147 83 -145  curveto
83 -139 84 -135 87 -132  curveto
89 -129 93 -126 98 -124  curveto
151 -91 178 -55 178 -16  curveto
178 -5 174 0 166 0  curveto
162 0 157 -1 151 -3  curveto
145 -5 139 -6 135 -6  curveto
118 -6 105 -1 96 8  curveto
87 17 83 30 83 46  curveto
83 62 88 76 99 87  curveto
110 98 124 104 142 104  curveto
154 104 164 101 173 97  curveto
182 92 191 86 199 78  curveto
207 70 212 62 216 54  curveto
219 46 221 34 221 20  curveto
closepath
204 404 moveto
204 388 198 375 187 364  curveto
176 353 163 348 148 348  curveto
132 348 119 353 108 364  curveto
97 375 92 388 92 404  curveto
92 419 97 432 108 443  curveto
119 454 132 460 148 460  curveto
163 460 176 454 187 443  curveto
198 432 204 419 204 404  curveto
closepath
fill
		} def

	/less
		{
26 230 moveto
26 292 lineto
523 522 lineto
523 460 lineto
90 261 lineto
523 62 lineto
523 0 lineto
26 230 lineto
closepath
fill
		} def

	/equal
		{
11 141 moveto
11 196 lineto
537 196 lineto
537 141 lineto
11 141 lineto
closepath
11 335 moveto
11 390 lineto
537 390 lineto
537 335 lineto
11 335 lineto
closepath
fill
		} def

	/greater
		{
26 0 moveto
26 62 lineto
459 261 lineto
26 460 lineto
26 522 lineto
523 292 lineto
523 230 lineto
26 0 lineto
closepath
fill
		} def

	/question
		{
286 39 moveto
286 23 280 10 269 0  curveto
258 -11 245 -17 230 -17  curveto
214 -17 201 -11 190 0  curveto
179 10 174 23 174 39  curveto
174 54 179 67 190 78  curveto
201 89 214 95 230 95  curveto
245 95 258 89 269 78  curveto
280 67 286 54 286 39  curveto
closepath
412 514 moveto
412 488 403 462 387 434  curveto
370 406 351 379 330 355  curveto
324 347 316 339 308 329  curveto
299 319 291 307 283 293  curveto
275 278 267 260 260 240  curveto
253 220 248 195 245 167  curveto
224 167 lineto
229 211 237 249 247 282  curveto
257 314 268 344 278 372  curveto
288 400 296 426 304 451  curveto
312 475 316 501 316 529  curveto
316 545 313 560 308 576  curveto
303 591 296 604 287 616  curveto
278 627 267 636 254 643  curveto
241 650 227 654 211 654  curveto
201 654 190 652 179 648  curveto
168 644 158 640 149 634  curveto
139 628 132 621 126 613  curveto
120 605 117 596 117 587  curveto
117 579 119 573 123 568  curveto
127 563 131 558 136 553  curveto
141 548 146 543 150 538  curveto
154 533 157 527 157 520  curveto
157 506 152 495 144 486  curveto
135 477 126 473 117 473  curveto
103 473 92 478 83 488  curveto
74 498 70 515 70 538  curveto
70 558 73 577 81 595  curveto
88 613 98 629 112 643  curveto
140 671 179 686 228 686  curveto
284 686 331 668 367 632  curveto
376 622 386 608 396 588  curveto
406 568 412 544 412 514  curveto
closepath
fill
		} def

	/at
		{
11 0 moveto
11 55 lineto
537 55 lineto
537 0 lineto
11 0 lineto
closepath
11 194 moveto
11 249 lineto
537 249 lineto
537 194 lineto
11 194 lineto
closepath
530 451 moveto
526 440 519 430 510 421  curveto
501 411 491 403 479 396  curveto
467 389 454 384 440 380  curveto
426 376 411 374 397 374  curveto
375 374 354 376 334 382  curveto
314 387 294 393 275 400  curveto
255 406 236 412 218 418  curveto
199 423 180 426 161 426  curveto
137 426 118 421 104 412  curveto
90 402 74 388 58 370  curveto
18 396 lineto
30 414 43 428 56 438  curveto
69 448 82 456 95 462  curveto
108 467 121 470 133 472  curveto
145 473 157 474 168 474  curveto
188 474 208 471 226 465  curveto
244 459 263 453 281 447  curveto
299 441 316 435 334 429  curveto
352 423 371 421 391 421  curveto
413 421 432 425 448 434  curveto
464 443 479 457 493 475  curveto
530 451 lineto
530 451 lineto
closepath
fill
		} def

	/A
		{
317 528 moveto
204 260 lineto
430 260 lineto
317 528 lineto
closepath
434 0 moveto
434 18 lineto
451 18 466 20 479 25  curveto
492 29 499 40 499 58  curveto
499 65 497 74 493 86  curveto
444 218 lineto
185 218 lineto
140 94 lineto
134 78 131 66 131 58  curveto
131 44 136 34 146 28  curveto
156 21 172 18 196 18  curveto
196 0 lineto
4 0 lineto
4 18 lineto
18 18 29 19 37 23  curveto
45 26 52 30 58 36  curveto
63 42 67 49 71 57  curveto
74 65 78 74 82 84  curveto
330 673 lineto
356 673 lineto
606 84 lineto
610 74 613 66 617 58  curveto
620 50 624 43 630 37  curveto
635 31 642 26 650 23  curveto
658 19 670 18 684 18  curveto
684 0 lineto
434 0 lineto
closepath
fill
		} def

	/B
		{
478 177 moveto
478 198 475 216 470 231  curveto
465 245 459 258 451 268  curveto
443 278 435 287 425 293  curveto
415 299 405 305 395 311  curveto
379 318 364 323 348 325  curveto
332 327 316 328 301 328  curveto
223 328 lineto
223 84 lineto
223 72 225 62 230 54  curveto
234 46 245 42 263 42  curveto
327 42 lineto
353 42 376 45 395 53  curveto
414 61 430 71 442 84  curveto
454 96 463 111 469 127  curveto
475 143 478 159 478 177  curveto
closepath
460 497 moveto
460 521 455 542 445 560  curveto
435 577 421 591 403 602  curveto
385 612 365 620 341 625  curveto
317 629 292 632 265 632  curveto
245 632 233 631 229 630  curveto
225 628 223 626 223 622  curveto
223 370 lineto
305 370 lineto
327 370 347 372 366 377  curveto
384 381 401 389 415 399  curveto
429 409 440 422 448 438  curveto
456 454 460 473 460 497  curveto
closepath
592 185 moveto
592 168 589 152 583 136  curveto
577 120 570 105 561 91  curveto
552 77 542 64 531 53  curveto
519 42 508 34 496 28  curveto
488 24 478 20 468 17  curveto
457 13 446 10 435 8  curveto
423 5 412 3 401 2  curveto
390 0 380 0 371 0  curveto
29 0 lineto
29 18 lineto
59 18 82 22 97 31  curveto
111 39 119 57 119 84  curveto
119 590 lineto
119 612 112 629 100 639  curveto
88 649 64 655 29 655  curveto
29 673 lineto
300 673 lineto
389 673 455 659 498 631  curveto
541 603 563 559 563 497  curveto
563 463 552 434 532 410  curveto
512 386 480 367 436 354  curveto
436 352 lineto
486 340 525 320 552 290  curveto
578 260 592 225 592 185  curveto
closepath
fill
		} def

	/C
		{
404 0 moveto
404 18 lineto
434 18 454 20 465 26  curveto
476 32 482 38 482 46  curveto
482 53 479 60 474 68  curveto
469 76 464 84 459 93  curveto
332 292 lineto
170 83 lineto
166 77 162 72 160 67  curveto
157 62 156 57 156 51  curveto
156 41 160 33 169 27  curveto
178 21 195 18 221 18  curveto
221 0 lineto
-9 0 lineto
-9 18 lineto
6 18 19 19 30 22  curveto
40 24 50 28 58 33  curveto
66 37 73 43 80 50  curveto
86 57 93 65 101 75  curveto
305 333 lineto
108 609 lineto
96 625 84 636 70 644  curveto
56 651 38 655 15 655  curveto
15 673 lineto
315 673 lineto
315 655 lineto
285 655 264 652 253 648  curveto
242 643 237 636 237 627  curveto
237 621 238 617 240 613  curveto
242 609 244 604 248 599  curveto
369 413 lineto
506 590 lineto
511 596 516 603 520 610  curveto
524 616 526 622 526 628  curveto
526 636 521 643 511 648  curveto
501 652 482 655 455 655  curveto
455 673 lineto
687 673 lineto
687 655 lineto
669 655 655 653 643 650  curveto
631 647 621 643 613 637  curveto
605 631 597 623 590 615  curveto
582 607 574 597 566 587  curveto
396 375 lineto
607 70 lineto
617 54 629 42 643 32  curveto
656 22 676 18 704 18  curveto
704 0 lineto
404 0 lineto
closepath
fill
		} def

	/D
		{
290 517 moveto
72 49 lineto
484 49 lineto
290 517 lineto
closepath
6 0 moveto
326 688 lineto
608 0 lineto
6 0 lineto
closepath
fill
		} def

	/E
		{
571 0 moveto
32 0 lineto
32 18 lineto
46 18 58 18 70 20  curveto
81 22 90 25 98 30  curveto
106 34 112 41 116 50  curveto
120 58 122 70 122 84  curveto
122 590 lineto
122 614 115 631 102 641  curveto
88 650 65 655 32 655  curveto
32 673 lineto
563 673 lineto
563 525 lineto
536 525 lineto
532 537 529 550 527 562  curveto
525 574 521 584 515 594  curveto
509 603 500 610 489 616  curveto
477 622 461 625 439 625  curveto
226 625 lineto
226 375 lineto
385 375 lineto
405 375 421 377 434 382  curveto
446 386 456 393 464 401  curveto
472 409 477 419 480 431  curveto
482 442 484 455 484 469  curveto
507 469 lineto
507 239 lineto
484 239 lineto
484 253 482 265 480 277  curveto
477 289 472 299 464 307  curveto
456 315 446 321 433 326  curveto
420 330 404 333 384 333  curveto
226 333 lineto
226 87 lineto
226 71 229 60 235 53  curveto
241 45 251 42 267 42  curveto
270 42 276 42 284 42  curveto
292 42 299 43 304 43  curveto
430 46 lineto
453 46 473 50 490 57  curveto
506 64 521 73 533 85  curveto
545 96 555 109 563 124  curveto
571 138 578 154 586 170  curveto
617 170 lineto
571 0 lineto
closepath
fill
		} def

	/F
		{
334 534 moveto
306 534 281 528 258 518  curveto
235 508 215 494 199 477  curveto
183 459 170 439 161 417  curveto
151 394 147 370 147 346  curveto
147 302 153 267 165 241  curveto
177 215 192 194 211 180  curveto
229 165 250 155 272 150  curveto
294 145 314 143 334 143  curveto
334 534 lineto
closepath
623 343 moveto
623 371 618 396 608 420  curveto
598 443 584 463 567 480  curveto
550 497 530 510 508 520  curveto
485 529 461 534 436 534  curveto
436 143 lineto
458 143 481 146 503 152  curveto
525 158 545 168 563 184  curveto
581 199 595 219 606 245  curveto
617 271 623 303 623 343  curveto
closepath
741 331 moveto
741 285 730 247 708 217  curveto
686 187 658 163 624 146  curveto
588 128 554 117 524 113  curveto
493 109 464 108 436 108  curveto
436 74 444 51 460 38  curveto
476 25 502 18 538 18  curveto
538 0 lineto
232 0 lineto
232 18 lineto
267 18 293 25 309 38  curveto
325 50 334 74 334 108  curveto
308 108 286 108 268 110  curveto
249 112 232 114 218 118  curveto
203 121 190 125 178 130  curveto
166 134 154 140 143 146  curveto
103 165 74 191 55 223  curveto
35 255 26 292 26 333  curveto
26 358 30 385 40 413  curveto
50 441 65 465 87 487  curveto
106 506 126 521 148 532  curveto
169 542 190 550 212 555  curveto
234 560 255 563 276 564  curveto
296 564 316 565 334 565  curveto
334 597 326 620 310 634  curveto
294 647 269 654 233 655  curveto
233 673 lineto
537 673 lineto
537 655 lineto
501 654 475 647 459 634  curveto
443 620 436 597 436 565  curveto
454 565 474 564 495 563  curveto
516 562 537 559 558 554  curveto
579 549 600 541 621 531  curveto
641 520 661 505 681 486  curveto
701 466 716 442 726 415  curveto
736 388 741 360 741 331  curveto
closepath
fill
		} def

	/G
		{
584 511 moveto
581 535 576 555 568 570  curveto
560 585 545 598 522 610  curveto
508 616 493 621 477 624  curveto
460 626 440 628 417 628  curveto
229 628 lineto
229 80 lineto
229 66 231 55 236 47  curveto
240 39 247 32 255 28  curveto
263 24 273 21 284 20  curveto
295 18 307 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
47 18 58 18 69 19  curveto
79 20 89 23 97 27  curveto
105 31 112 38 117 46  curveto
122 54 125 66 125 81  curveto
125 550 lineto
125 570 122 586 117 600  curveto
112 613 105 623 96 631  curveto
87 639 76 644 64 648  curveto
52 651 38 653 24 653  curveto
24 673 lineto
592 673 lineto
609 511 lineto
584 511 lineto
closepath
fill
		} def

	/H
		{
445 0 moveto
445 18 lineto
459 18 471 18 483 20  curveto
494 22 503 25 511 30  curveto
519 34 525 41 529 49  curveto
533 57 535 68 535 82  curveto
535 323 lineto
233 323 lineto
233 83 lineto
233 57 240 39 255 31  curveto
269 22 292 18 323 18  curveto
323 0 lineto
39 0 lineto
39 18 lineto
69 18 91 22 106 30  curveto
121 38 129 55 129 83  curveto
129 590 lineto
129 614 122 631 109 641  curveto
95 650 72 655 39 655  curveto
39 673 lineto
323 673 lineto
323 655 lineto
289 655 265 650 252 640  curveto
239 630 233 613 233 589  curveto
233 365 lineto
535 365 lineto
535 591 lineto
535 616 528 633 514 642  curveto
500 650 477 655 445 655  curveto
445 673 lineto
729 673 lineto
729 655 lineto
697 655 674 650 660 641  curveto
646 632 639 615 639 590  curveto
639 84 lineto
639 56 646 38 662 30  curveto
677 22 699 18 729 18  curveto
729 0 lineto
445 0 lineto
closepath
fill
		} def

	/I
		{
32 0 moveto
32 18 lineto
50 18 65 19 77 22  curveto
89 24 98 28 105 34  curveto
111 40 116 47 118 55  curveto
120 63 122 73 122 85  curveto
122 593 lineto
122 607 119 618 114 626  curveto
109 634 102 641 94 645  curveto
85 649 75 652 65 653  curveto
54 654 43 655 32 655  curveto
32 673 lineto
316 673 lineto
316 655 lineto
283 655 260 650 246 641  curveto
232 631 226 615 226 591  curveto
226 85 lineto
226 61 232 44 244 34  curveto
256 23 280 18 316 18  curveto
316 0 lineto
32 0 lineto
closepath
fill
		} def

	/J
		{
470 380 moveto
468 394 466 409 464 427  curveto
462 445 460 463 458 481  curveto
455 499 452 517 448 533  curveto
444 549 440 563 435 575  curveto
423 597 410 614 395 628  curveto
380 642 363 649 344 649  curveto
334 649 325 646 318 641  curveto
310 636 304 630 299 623  curveto
293 615 289 607 287 598  curveto
284 588 283 579 283 571  curveto
283 557 287 541 295 523  curveto
303 505 318 485 340 464  curveto
359 444 380 428 402 414  curveto
424 400 447 389 470 380  curveto
closepath
549 309 moveto
547 279 543 247 538 212  curveto
533 177 523 144 508 113  curveto
494 87 480 65 466 48  curveto
452 31 436 18 420 8  curveto
403 -1 385 -8 367 -12  curveto
348 -16 328 -18 308 -18  curveto
290 -18 274 -17 261 -15  curveto
248 -13 237 -11 227 -7  curveto
217 -3 209 0 201 6  curveto
193 11 186 18 178 26  curveto
159 44 146 66 140 91  curveto
134 115 131 138 131 159  curveto
131 163 132 175 134 193  curveto
136 211 139 231 142 252  curveto
145 273 148 293 150 311  curveto
152 329 154 341 154 347  curveto
154 355 152 362 150 368  curveto
147 374 144 380 140 384  curveto
136 388 131 391 127 393  curveto
123 395 119 396 117 396  curveto
104 396 93 393 85 389  curveto
76 384 69 378 63 371  curveto
57 364 51 357 47 349  curveto
42 341 38 333 34 327  curveto
18 332 lineto
64 419 lineto
69 429 79 439 93 449  curveto
107 459 125 464 146 464  curveto
173 464 194 456 210 441  curveto
219 431 227 419 233 404  curveto
239 389 242 374 242 359  curveto
242 353 240 342 238 326  curveto
236 309 233 290 231 269  curveto
228 248 225 227 223 206  curveto
221 184 220 166 220 152  curveto
220 133 222 115 226 98  curveto
230 81 236 66 244 53  curveto
252 40 263 30 277 22  curveto
290 14 306 10 324 10  curveto
332 10 341 11 351 14  curveto
361 16 370 20 380 26  curveto
390 32 399 39 407 48  curveto
415 56 423 66 429 78  curveto
434 88 439 100 444 113  curveto
449 125 454 140 458 157  curveto
462 173 465 192 468 213  curveto
470 233 472 257 472 284  curveto
472 286 472 289 472 294  curveto
472 299 471 304 471 310  curveto
471 316 471 321 471 326  curveto
471 331 471 335 471 337  curveto
457 343 443 350 429 358  curveto
415 366 401 374 387 382  curveto
373 390 361 399 350 407  curveto
338 415 329 422 322 430  curveto
298 453 280 476 268 500  curveto
255 523 249 548 249 574  curveto
249 595 252 613 260 627  curveto
268 641 276 652 285 661  curveto
294 670 303 677 313 682  curveto
323 686 335 689 350 689  curveto
378 689 406 678 434 656  curveto
462 634 487 601 509 558  curveto
521 532 531 503 537 472  curveto
543 441 547 401 549 353  curveto
623 326 lineto
623 273 lineto
549 309 lineto
closepath
fill
		} def

	/K
		{
418 0 moveto
418 18 lineto
448 18 469 20 479 26  curveto
489 32 495 38 495 46  curveto
495 54 492 62 487 70  curveto
481 78 476 85 471 91  curveto
262 327 lineto
229 297 lineto
229 82 lineto
229 56 236 39 250 31  curveto
264 22 287 18 319 18  curveto
319 0 lineto
35 0 lineto
35 18 lineto
68 18 91 22 105 32  curveto
118 41 125 58 125 83  curveto
125 589 lineto
125 612 118 629 106 639  curveto
94 649 70 655 35 655  curveto
35 673 lineto
319 673 lineto
319 655 lineto
283 655 259 650 247 640  curveto
235 630 229 612 229 588  curveto
229 360 lineto
280 402 325 442 365 479  curveto
405 516 438 549 466 578  curveto
475 588 482 597 487 606  curveto
491 615 492 623 488 631  curveto
484 638 476 644 463 648  curveto
450 652 431 655 405 655  curveto
405 673 lineto
665 673 lineto
665 655 lineto
652 655 641 654 631 652  curveto
621 650 612 648 603 644  curveto
594 640 585 634 576 627  curveto
567 620 557 611 547 600  curveto
527 579 510 561 495 546  curveto
480 530 465 515 450 500  curveto
434 485 418 469 400 452  curveto
382 435 360 415 336 392  curveto
593 102 lineto
605 87 617 75 628 65  curveto
638 55 649 46 659 40  curveto
669 33 679 28 689 24  curveto
699 20 710 18 722 18  curveto
722 0 lineto
418 0 lineto
closepath
fill
		} def

	/L
		{
408 0 moveto
408 18 lineto
414 18 422 18 430 19  curveto
438 20 446 22 454 26  curveto
461 30 467 35 472 41  curveto
476 47 479 55 479 65  curveto
479 72 478 79 476 85  curveto
474 91 471 101 466 114  curveto
310 496 lineto
166 107 lineto
162 98 159 89 157 80  curveto
155 70 154 63 154 58  curveto
154 40 160 29 172 25  curveto
184 20 200 18 221 18  curveto
221 0 lineto
6 0 lineto
6 18 lineto
14 18 24 19 35 23  curveto
45 27 56 32 66 38  curveto
76 44 85 51 93 60  curveto
101 68 107 78 111 89  curveto
336 688 lineto
584 98 lineto
588 88 592 78 598 69  curveto
604 59 611 51 619 43  curveto
627 35 636 29 646 25  curveto
656 20 667 18 680 18  curveto
680 0 lineto
408 0 lineto
closepath
fill
		} def

	/M
		{
603 0 moveto
603 18 lineto
621 18 636 19 648 22  curveto
660 24 669 28 676 34  curveto
682 40 687 47 689 55  curveto
691 63 693 73 693 85  curveto
693 572 lineto
448 0 lineto
430 0 lineto
170 543 lineto
170 85 lineto
170 63 177 46 191 35  curveto
205 23 228 18 260 18  curveto
260 0 lineto
31 0 lineto
31 18 lineto
91 18 121 40 121 84  curveto
121 582 lineto
121 597 119 609 117 618  curveto
115 627 110 634 104 639  curveto
98 644 88 648 76 650  curveto
64 652 48 653 28 655  curveto
28 673 lineto
229 673 lineto
463 163 lineto
687 673 lineto
885 673 lineto
885 655 lineto
880 655 875 655 871 655  curveto
866 655 862 656 858 656  curveto
834 656 818 650 810 640  curveto
801 630 797 615 797 597  curveto
797 85 lineto
797 73 798 63 800 55  curveto
802 47 807 40 813 35  curveto
819 29 828 25 840 22  curveto
852 19 867 18 887 18  curveto
887 0 lineto
603 0 lineto
closepath
fill
		} def

	/N
		{
720 655 moveto
700 655 685 653 673 650  curveto
661 647 651 643 645 637  curveto
639 631 635 623 633 615  curveto
631 606 630 596 630 586  curveto
630 -8 lineto
608 -8 lineto
168 539 lineto
168 84 lineto
168 60 175 43 191 33  curveto
207 23 229 18 258 18  curveto
258 0 lineto
29 0 lineto
29 18 lineto
58 18 80 23 96 34  curveto
111 44 119 61 119 84  curveto
119 602 lineto
111 613 104 622 98 629  curveto
92 636 86 642 81 646  curveto
75 650 70 652 64 654  curveto
58 655 52 656 46 656  curveto
44 656 41 655 39 655  curveto
37 655 34 655 31 655  curveto
31 673 lineto
198 673 lineto
581 185 lineto
581 590 lineto
581 613 574 630 562 640  curveto
549 650 525 655 491 655  curveto
491 673 lineto
720 673 lineto
720 655 lineto
720 655 lineto
closepath
fill
		} def

	/O
		{
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 485 171 448  curveto
162 411 158 371 158 328  curveto
158 292 160 258 165 227  curveto
170 195 180 164 196 133  curveto
203 118 213 104 225 91  curveto
237 77 250 65 266 55  curveto
281 45 298 37 317 31  curveto
336 25 356 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/P
		{
461 0 moveto
461 18 lineto
497 18 521 23 533 33  curveto
545 43 551 60 551 84  curveto
551 632 lineto
218 632 lineto
219 90 lineto
219 78 220 67 222 58  curveto
224 49 228 42 234 36  curveto
240 30 249 25 261 22  curveto
273 19 289 18 309 18  curveto
309 0 lineto
25 0 lineto
25 18 lineto
45 18 61 19 73 22  curveto
85 25 94 30 100 36  curveto
106 42 110 49 112 58  curveto
114 66 115 76 115 88  curveto
115 576 lineto
115 585 113 594 111 604  curveto
109 613 104 621 98 629  curveto
91 637 82 643 71 648  curveto
59 652 45 655 27 655  curveto
27 673 lineto
742 673 lineto
742 655 lineto
724 655 709 652 698 648  curveto
686 643 677 637 671 630  curveto
665 623 660 615 658 606  curveto
655 596 654 587 654 578  curveto
655 89 lineto
655 76 656 65 658 56  curveto
660 47 665 40 672 34  curveto
678 28 687 24 699 22  curveto
711 19 726 18 745 18  curveto
745 0 lineto
461 0 lineto
closepath
fill
		} def

	/Q
		{
508 251 moveto
501 271 492 285 480 293  curveto
468 300 456 304 442 304  curveto
317 304 lineto
301 304 288 300 276 293  curveto
264 286 255 272 248 251  curveto
233 252 lineto
234 263 235 276 237 292  curveto
238 307 239 322 239 338  curveto
239 353 238 368 237 382  curveto
235 396 234 410 233 423  curveto
248 424 lineto
254 402 264 388 276 381  curveto
288 374 300 371 314 371  curveto
442 371 lineto
474 371 496 388 508 424  curveto
523 423 lineto
521 413 520 400 519 384  curveto
517 368 517 353 517 338  curveto
517 322 517 307 519 292  curveto
520 276 521 263 523 252  curveto
508 251 lineto
closepath
599 328 moveto
599 370 595 408 588 444  curveto
580 479 571 508 560 530  curveto
541 567 516 596 485 616  curveto
454 636 419 646 379 646  curveto
339 646 303 636 271 616  curveto
239 596 215 569 198 533  curveto
188 513 179 487 170 453  curveto
161 419 157 377 157 328  curveto
157 292 159 258 165 226  curveto
170 194 181 162 197 130  curveto
205 114 215 100 227 87  curveto
239 73 253 62 269 52  curveto
285 42 302 35 320 30  curveto
338 24 358 22 378 22  curveto
396 22 414 24 432 29  curveto
450 34 466 41 482 50  curveto
498 59 512 70 525 83  curveto
538 96 549 111 557 127  curveto
569 151 579 179 587 209  curveto
595 239 599 278 599 328  curveto
closepath
715 335 moveto
715 287 707 241 691 199  curveto
675 156 653 119 624 87  curveto
594 55 559 29 517 11  curveto
475 -7 429 -17 378 -17  curveto
326 -17 280 -7 239 10  curveto
197 28 162 54 133 86  curveto
103 118 81 155 65 198  curveto
49 240 41 286 41 334  curveto
41 386 49 434 66 477  curveto
83 520 107 557 139 589  curveto
167 617 202 640 244 658  curveto
285 676 330 685 378 685  curveto
425 685 469 676 511 659  curveto
552 641 588 617 619 587  curveto
649 557 672 520 689 477  curveto
706 433 715 386 715 335  curveto
closepath
fill
		} def

	/R
		{
455 477 moveto
455 502 452 525 447 545  curveto
441 565 432 581 420 594  curveto
406 607 388 617 366 624  curveto
343 631 320 635 298 635  curveto
281 635 268 634 258 633  curveto
248 632 240 630 235 628  curveto
229 626 226 623 224 619  curveto
222 615 222 611 222 607  curveto
222 353 lineto
226 349 233 347 243 345  curveto
252 343 265 342 282 342  curveto
286 342 293 342 303 343  curveto
313 343 325 344 337 346  curveto
349 347 361 349 373 351  curveto
385 353 394 356 402 360  curveto
417 367 430 380 440 399  curveto
450 418 455 444 455 477  curveto
closepath
563 486 moveto
563 474 561 460 559 446  curveto
556 432 551 417 543 403  curveto
535 389 525 375 512 361  curveto
498 347 481 335 460 325  curveto
422 306 374 297 316 297  curveto
303 297 288 297 271 298  curveto
253 298 237 299 222 300  curveto
222 81 lineto
222 56 229 39 243 31  curveto
257 22 280 18 312 18  curveto
312 0 lineto
28 0 lineto
28 18 lineto
46 18 62 19 74 22  curveto
86 25 95 29 101 35  curveto
107 41 112 48 114 56  curveto
116 64 118 74 118 86  curveto
118 588 lineto
118 614 111 631 97 641  curveto
83 650 60 655 28 655  curveto
28 673 lineto
303 673 lineto
340 673 373 670 403 665  curveto
433 660 459 652 481 641  curveto
508 627 528 606 542 577  curveto
556 548 563 518 563 486  curveto
closepath
fill
		} def

	/S
		{
552 0 moveto
5 0 lineto
286 327 lineto
17 673 lineto
535 673 lineto
545 522 lineto
526 522 lineto
517 560 502 587 482 603  curveto
462 619 435 627 402 627  curveto
180 627 lineto
381 369 lineto
145 94 lineto
446 94 lineto
478 94 503 102 522 118  curveto
541 134 557 163 569 205  curveto
589 205 lineto
552 0 lineto
closepath
fill
		} def

	/T
		{
581 500 moveto
581 526 576 547 568 564  curveto
559 580 548 594 535 604  curveto
521 614 506 621 489 625  curveto
471 629 454 631 438 632  curveto
372 634 lineto
372 85 lineto
372 59 378 41 392 32  curveto
406 22 429 18 462 18  curveto
462 0 lineto
178 0 lineto
178 18 lineto
210 18 233 22 247 31  curveto
261 40 268 58 268 85  curveto
268 634 lineto
202 632 lineto
176 631 154 627 136 620  curveto
118 613 103 604 91 592  curveto
79 580 71 567 66 551  curveto
61 535 59 518 59 500  curveto
33 502 lineto
38 673 lineto
602 673 lineto
607 502 lineto
581 500 lineto
closepath
fill
		} def

	/U
		{
694 655 moveto
678 655 665 654 655 652  curveto
644 650 635 648 627 644  curveto
619 640 612 634 606 628  curveto
600 622 594 614 588 605  curveto
398 313 lineto
398 83 lineto
398 57 405 40 419 31  curveto
433 22 456 18 488 18  curveto
488 0 lineto
204 0 lineto
204 18 lineto
235 18 258 22 272 31  curveto
286 39 294 57 294 83  curveto
294 300 lineto
86 603 lineto
70 625 55 639 40 645  curveto
25 651 9 655 -8 655  curveto
-8 673 lineto
289 673 lineto
289 655 lineto
267 655 249 653 234 649  curveto
218 645 211 637 211 626  curveto
211 621 212 616 215 611  curveto
217 605 222 597 230 587  curveto
376 363 lineto
517 596 lineto
521 603 524 609 526 613  curveto
528 617 529 623 529 629  curveto
529 639 523 645 513 649  curveto
502 653 485 655 462 655  curveto
462 673 lineto
694 673 lineto
694 655 lineto
694 655 lineto
closepath
fill
		} def

	/V
		{
437 -52 moveto
437 -63 435 -75 433 -87  curveto
430 -99 426 -112 421 -124  curveto
416 -136 410 -147 403 -159  curveto
395 -170 387 -180 379 -189  curveto
365 -202 349 -213 331 -221  curveto
313 -229 294 -233 275 -233  curveto
247 -233 226 -226 213 -214  curveto
199 -201 193 -188 193 -174  curveto
193 -164 195 -156 199 -150  curveto
203 -144 209 -140 215 -137  curveto
221 -134 228 -132 235 -132  curveto
241 -131 247 -131 253 -131  curveto
266 -131 279 -133 291 -139  curveto
303 -144 314 -147 325 -147  curveto
343 -147 359 -140 373 -127  curveto
387 -114 395 -96 395 -73  curveto
395 -53 390 -39 381 -30  curveto
372 -21 360 -17 345 -17  curveto
317 -17 295 -17 279 -17  curveto
262 -17 249 -18 239 -18  curveto
229 -18 222 -19 218 -19  curveto
213 -19 209 -20 206 -20  curveto
183 -20 161 -14 141 -4  curveto
121 6 103 21 88 41  curveto
73 61 61 85 52 113  curveto
43 141 39 172 39 207  curveto
39 245 46 282 62 320  curveto
77 358 100 392 130 422  curveto
157 449 184 469 212 481  curveto
240 493 273 500 312 500  curveto
326 500 340 498 352 495  curveto
364 491 375 487 384 482  curveto
393 477 400 471 405 465  curveto
410 458 413 451 413 445  curveto
413 430 407 420 397 414  curveto
387 408 374 405 358 405  curveto
338 405 319 407 300 413  curveto
280 419 260 422 239 422  curveto
210 422 185 415 165 401  curveto
145 387 128 370 115 350  curveto
102 330 93 308 87 286  curveto
81 263 78 243 78 227  curveto
78 205 82 184 91 162  curveto
100 140 112 122 126 108  curveto
135 98 146 92 158 88  curveto
170 84 183 82 197 82  curveto
216 82 236 82 257 84  curveto
277 86 295 87 311 87  curveto
327 87 341 84 355 80  curveto
369 75 381 67 393 56  curveto
406 42 417 25 425 5  curveto
433 -15 437 -34 437 -52  curveto
closepath
fill
		} def

	/W
		{
441 0 moveto
457 152 lineto
469 156 482 162 495 169  curveto
507 175 519 184 529 194  curveto
552 217 569 247 581 283  curveto
593 319 599 360 599 404  curveto
599 450 592 489 579 523  curveto
566 557 551 582 534 600  curveto
516 617 496 631 473 641  curveto
450 651 421 656 385 656  curveto
348 656 318 651 296 641  curveto
273 631 253 617 236 600  curveto
216 580 200 552 188 517  curveto
176 481 171 445 171 407  curveto
171 359 177 317 189 281  curveto
201 245 219 215 242 193  curveto
251 183 261 175 273 169  curveto
285 163 298 157 313 152  curveto
329 0 lineto
34 0 lineto
34 162 lineto
49 162 lineto
55 134 63 117 73 111  curveto
83 104 97 101 115 101  curveto
273 101 lineto
271 129 lineto
236 139 209 150 189 160  curveto
169 170 151 184 135 201  curveto
107 228 87 259 74 294  curveto
60 329 54 365 54 401  curveto
54 435 60 470 74 504  curveto
87 538 106 567 132 593  curveto
160 621 195 643 239 661  curveto
282 679 331 688 385 688  curveto
437 688 484 679 528 662  curveto
572 645 609 622 639 592  curveto
663 568 681 538 695 504  curveto
709 469 716 434 716 400  curveto
716 367 709 333 697 298  curveto
685 262 664 230 634 200  curveto
618 184 599 170 578 159  curveto
557 148 531 138 499 129  curveto
497 101 lineto
654 101 lineto
666 101 676 102 684 105  curveto
692 107 698 111 703 117  curveto
707 122 711 128 713 136  curveto
715 143 718 152 721 162  curveto
736 162 lineto
736 0 lineto
441 0 lineto
closepath
fill
		} def

	/X
		{
40 0 moveto
40 194 lineto
58 194 lineto
60 172 63 155 67 142  curveto
71 128 76 118 83 111  curveto
90 103 99 98 110 96  curveto
120 94 134 93 150 93  curveto
485 93 lineto
501 93 514 94 525 96  curveto
536 98 545 102 553 109  curveto
561 116 567 126 571 140  curveto
575 153 579 171 581 194  curveto
599 194 lineto
599 0 lineto
40 0 lineto
closepath
474 250 moveto
472 271 468 286 462 294  curveto
455 302 442 306 423 306  curveto
217 306 lineto
195 306 181 301 176 293  curveto
170 284 167 270 165 250  curveto
147 250 lineto
147 457 lineto
165 457 lineto
166 435 170 421 177 413  curveto
183 405 196 401 216 401  curveto
422 401 lineto
437 401 449 403 458 409  curveto
467 415 472 431 474 457  curveto
492 457 lineto
492 250 lineto
474 250 lineto
closepath
561 522 moveto
559 545 553 561 542 570  curveto
530 578 514 583 494 583  curveto
146 583 lineto
119 583 101 577 93 566  curveto
84 554 79 540 79 522  curveto
62 522 lineto
62 673 lineto
577 673 lineto
577 522 lineto
561 522 lineto
closepath
fill
		} def

	/Y
		{
781 666 moveto
770 662 762 657 756 653  curveto
750 649 745 644 742 638  curveto
738 632 736 625 735 617  curveto
733 609 732 599 732 588  curveto
725 464 lineto
723 436 714 410 697 388  curveto
680 366 659 348 635 336  curveto
621 329 609 323 597 319  curveto
585 315 573 311 559 308  curveto
545 305 529 303 512 302  curveto
494 300 474 300 450 300  curveto
450 86 lineto
450 61 456 43 468 33  curveto
480 23 504 18 540 18  curveto
540 0 lineto
256 0 lineto
256 18 lineto
291 18 315 23 327 33  curveto
339 43 346 60 346 85  curveto
346 300 lineto
322 300 301 300 284 302  curveto
266 303 251 305 237 308  curveto
223 311 210 315 198 319  curveto
186 323 173 329 161 336  curveto
136 348 115 366 98 388  curveto
81 410 72 436 71 464  curveto
64 588 lineto
63 599 62 609 61 617  curveto
59 625 57 632 54 638  curveto
50 644 46 649 40 653  curveto
34 657 25 662 15 666  curveto
15 684 lineto
32 682 47 681 59 679  curveto
71 677 81 675 90 672  curveto
98 669 106 665 112 661  curveto
118 657 125 652 131 646  curveto
143 634 153 618 162 600  curveto
171 582 176 567 178 555  curveto
186 469 lineto
188 441 194 418 203 402  curveto
211 385 223 372 237 363  curveto
251 353 267 347 285 344  curveto
303 341 324 340 346 340  curveto
346 587 lineto
346 612 339 630 326 640  curveto
313 650 290 655 256 655  curveto
256 673 lineto
540 673 lineto
540 655 lineto
505 655 481 650 469 640  curveto
456 630 450 612 450 588  curveto
450 340 lineto
472 340 492 341 510 344  curveto
528 347 545 353 559 363  curveto
573 372 584 385 593 402  curveto
601 418 607 441 610 469  curveto
618 555 lineto
619 567 624 582 633 600  curveto
642 618 653 634 665 646  curveto
671 652 677 657 683 661  curveto
689 665 697 669 706 672  curveto
714 675 725 677 737 679  curveto
749 681 763 682 781 684  curveto
781 666 lineto
781 666 lineto
closepath
fill
		} def

	/Z
		{
611 0 moveto
44 0 lineto
44 19 lineto
473 631 lineto
243 631 lineto
211 631 187 627 169 619  curveto
151 611 137 601 127 589  curveto
117 577 110 563 106 547  curveto
102 531 97 514 93 498  curveto
68 498 lineto
83 673 lineto
605 673 lineto
605 646 lineto
192 42 lineto
440 42 lineto
469 42 493 45 513 52  curveto
532 58 548 68 560 80  curveto
572 92 582 106 589 123  curveto
595 140 601 159 607 181  curveto
636 181 lineto
611 0 lineto
closepath
fill
		} def

	/bracketleft
		{
86 -155 moveto
86 674 lineto
299 674 lineto
299 649 lineto
221 649 lineto
199 649 184 645 176 637  curveto
167 629 163 616 163 598  curveto
163 -81 lineto
163 -96 167 -108 175 -117  curveto
183 -125 198 -130 220 -130  curveto
299 -130 lineto
299 -155 lineto
86 -155 lineto
closepath
fill
		} def

	/backslash
		{
293 65 moveto
293 47 286 31 274 19  curveto
261 6 246 0 228 0  curveto
210 0 194 6 182 19  curveto
169 31 163 47 163 65  curveto
163 82 169 97 181 110  curveto
193 123 209 130 228 130  curveto
247 130 263 123 275 110  curveto
287 97 293 82 293 65  curveto
closepath
701 65 moveto
701 47 694 31 681 19  curveto
668 6 653 0 636 0  curveto
618 0 603 6 590 19  curveto
577 31 571 47 571 65  curveto
571 82 577 97 589 110  curveto
601 123 617 130 636 130  curveto
655 130 671 123 683 110  curveto
695 97 701 82 701 65  curveto
closepath
497 413 moveto
497 395 490 379 477 367  curveto
464 354 449 348 432 348  curveto
414 348 399 354 386 367  curveto
373 379 367 395 367 413  curveto
367 430 373 445 385 458  curveto
397 471 413 478 432 478  curveto
451 478 467 471 479 458  curveto
491 445 497 430 497 413  curveto
closepath
fill
		} def

	/bracketright
		{
33 -155 moveto
33 -130 lineto
112 -130 lineto
133 -130 148 -125 156 -117  curveto
164 -108 169 -96 169 -81  curveto
169 598 lineto
169 616 164 629 156 637  curveto
147 645 132 649 111 649  curveto
33 649 lineto
33 674 lineto
246 674 lineto
246 -155 lineto
33 -155 lineto
closepath
fill
		} def

	/asciicircum
		{
15 0 moveto
15 55 lineto
306 55 lineto
306 674 lineto
361 674 lineto
361 55 lineto
652 55 lineto
652 0 lineto
15 0 lineto
closepath
fill
		} def

	/underscore
		{
-2 -252 moveto
-2 -206 lineto
502 -206 lineto
502 -252 lineto
-2 -252 lineto
closepath
fill
		} def

	/quoteleft
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/a
		{
407 223 moveto
403 249 399 273 395 294  curveto
391 314 387 332 382 348  curveto
377 363 371 377 365 389  curveto
358 401 350 412 340 422  curveto
326 436 311 446 296 452  curveto
280 458 265 461 249 461  curveto
232 461 217 454 205 442  curveto
193 430 183 416 176 401  curveto
165 379 157 354 152 326  curveto
147 298 145 269 145 241  curveto
145 209 147 179 151 149  curveto
155 119 162 95 172 77  curveto
181 57 193 42 209 32  curveto
224 21 240 16 256 16  curveto
266 16 277 18 289 24  curveto
301 29 312 37 322 47  curveto
332 57 343 72 353 91  curveto
363 110 372 129 380 149  curveto
407 223 lineto
407 223 lineto
closepath
620 79 moveto
620 69 618 58 614 47  curveto
610 36 605 26 599 17  curveto
593 7 585 0 577 -6  curveto
568 -12 559 -15 549 -15  curveto
537 -15 527 -10 517 -1  curveto
507 7 499 18 491 32  curveto
483 46 475 61 469 77  curveto
462 93 456 109 451 124  curveto
445 113 438 100 431 86  curveto
423 71 412 56 396 40  curveto
378 22 355 8 327 -2  curveto
298 -12 270 -18 243 -18  curveto
217 -18 192 -13 168 -3  curveto
144 7 123 20 107 37  curveto
63 81 41 145 41 229  curveto
41 274 46 313 56 347  curveto
66 380 83 409 109 435  curveto
121 447 132 457 144 465  curveto
155 473 167 479 179 485  curveto
191 490 203 494 217 496  curveto
231 498 246 500 263 500  curveto
283 500 302 496 320 488  curveto
338 480 355 468 370 452  curveto
385 436 398 416 409 392  curveto
420 368 428 341 433 309  curveto
435 309 lineto
499 487 lineto
587 487 lineto
472 170 lineto
474 157 477 144 481 130  curveto
485 116 491 104 498 93  curveto
504 82 512 73 521 66  curveto
530 59 540 56 552 56  curveto
556 56 561 57 566 60  curveto
571 63 575 66 579 70  curveto
584 75 589 82 594 92  curveto
598 101 602 116 604 137  curveto
622 137 lineto
620 79 lineto
closepath
fill
		} def

	/b
		{
412 188 moveto
412 232 405 271 392 305  curveto
378 339 363 366 345 384  curveto
337 392 330 397 325 399  curveto
319 401 313 402 307 402  curveto
301 402 294 401 286 400  curveto
277 398 269 398 261 398  curveto
245 398 234 401 228 407  curveto
221 413 218 419 218 425  curveto
218 433 221 441 229 449  curveto
236 457 247 461 263 461  curveto
271 461 280 459 291 457  curveto
302 455 310 454 314 454  curveto
320 454 327 457 335 465  curveto
342 473 348 482 354 494  curveto
358 502 361 512 364 526  curveto
366 539 368 552 368 565  curveto
368 587 364 607 358 625  curveto
351 643 342 658 332 670  curveto
322 682 310 691 296 697  curveto
282 703 269 707 255 707  curveto
239 707 225 703 213 695  curveto
201 687 190 678 182 667  curveto
173 656 166 644 162 632  curveto
157 620 155 609 155 599  curveto
155 93 lineto
158 89 161 86 164 84  curveto
167 81 170 78 174 75  curveto
188 60 206 49 228 41  curveto
250 33 271 30 293 30  curveto
307 30 322 32 336 38  curveto
350 44 361 51 371 61  curveto
382 72 392 87 400 106  curveto
408 124 412 152 412 188  curveto
closepath
515 199 moveto
515 167 510 137 500 111  curveto
490 85 477 62 460 43  curveto
443 23 422 8 398 -2  curveto
374 -12 347 -18 319 -18  curveto
291 -18 264 -14 240 -6  curveto
215 1 188 15 158 37  curveto
156 -149 lineto
156 -160 155 -172 153 -185  curveto
151 -197 149 -210 148 -223  curveto
61 -223 lineto
63 -199 67 -173 71 -147  curveto
75 -121 77 -94 77 -67  curveto
77 588 lineto
77 614 84 638 99 660  curveto
114 682 140 703 176 721  curveto
188 727 201 731 215 735  curveto
229 739 245 741 263 741  curveto
298 741 332 732 366 716  curveto
394 702 418 683 436 659  curveto
454 635 463 609 463 580  curveto
463 566 460 551 456 537  curveto
452 522 447 510 442 501  curveto
438 493 433 486 427 479  curveto
421 471 416 465 410 459  curveto
404 453 398 447 392 443  curveto
386 438 382 434 379 432  curveto
425 412 459 381 481 339  curveto
503 297 515 250 515 199  curveto
closepath
fill
		} def

	/c
		{
522 -50 moveto
518 -84 511 -114 503 -140  curveto
495 -165 483 -185 468 -201  curveto
458 -210 447 -217 435 -223  curveto
423 -228 410 -231 396 -231  curveto
363 -231 336 -209 315 -167  curveto
310 -157 305 -145 301 -129  curveto
296 -113 291 -96 287 -76  curveto
283 -56 279 -34 275 -12  curveto
271 10 268 33 265 57  curveto
263 57 lineto
115 -216 lineto
13 -216 lineto
232 185 lineto
220 229 211 267 205 298  curveto
198 329 191 352 184 368  curveto
176 383 166 395 154 405  curveto
141 415 126 420 110 420  curveto
86 420 68 410 56 390  curveto
44 370 35 347 30 321  curveto
12 321 lineto
19 379 31 423 49 454  curveto
67 484 90 500 119 500  curveto
145 500 167 490 184 472  curveto
201 453 213 429 221 399  curveto
259 236 lineto
392 480 lineto
494 479 lineto
290 105 lineto
294 89 298 70 304 47  curveto
310 24 316 1 323 -21  curveto
329 -43 336 -64 344 -83  curveto
351 -101 358 -114 365 -121  curveto
374 -130 382 -136 389 -138  curveto
396 -140 404 -142 414 -142  curveto
436 -142 455 -134 471 -118  curveto
478 -110 484 -101 489 -91  curveto
494 -81 499 -67 503 -50  curveto
522 -50 lineto
522 -50 lineto
closepath
fill
		} def

	/d
		{
385 194 moveto
385 216 382 239 378 262  curveto
373 285 366 306 357 324  curveto
347 342 337 358 326 374  curveto
314 389 301 404 286 418  curveto
258 412 236 402 218 390  curveto
200 378 186 363 176 346  curveto
165 329 157 310 153 289  curveto
149 268 147 246 147 222  curveto
147 202 149 180 153 158  curveto
157 136 163 116 171 100  curveto
175 90 179 81 185 73  curveto
191 65 197 57 205 50  curveto
213 43 222 38 232 34  curveto
242 30 254 28 268 28  curveto
282 28 295 30 308 36  curveto
320 42 331 49 341 59  curveto
355 73 365 92 373 116  curveto
381 140 385 166 385 194  curveto
closepath
481 228 moveto
481 199 477 173 469 150  curveto
461 126 451 105 438 86  curveto
424 67 409 50 391 36  curveto
373 22 355 10 335 0  curveto
321 -6 307 -11 292 -14  curveto
276 -17 262 -19 248 -19  curveto
238 -19 226 -17 211 -15  curveto
195 -13 182 -9 170 -3  curveto
150 6 131 18 113 34  curveto
95 49 78 71 64 101  curveto
54 120 48 138 45 156  curveto
41 173 40 189 40 203  curveto
40 232 46 261 58 290  curveto
70 319 86 344 107 365  curveto
142 400 191 427 255 447  curveto
141 551 lineto
126 564 115 579 108 597  curveto
101 614 98 629 98 643  curveto
98 653 99 662 102 670  curveto
105 678 111 686 121 696  curveto
125 700 132 706 140 712  curveto
148 718 155 722 162 726  curveto
173 731 185 735 199 737  curveto
213 739 227 740 243 740  curveto
247 740 252 739 260 739  curveto
268 739 276 738 285 737  curveto
293 736 302 735 311 734  curveto
319 733 327 732 333 730  curveto
371 718 398 705 415 690  curveto
431 674 440 657 440 639  curveto
440 627 435 618 425 610  curveto
415 602 405 599 395 599  curveto
385 599 376 601 368 606  curveto
360 610 352 616 344 623  curveto
336 629 329 636 322 644  curveto
314 652 308 659 302 665  curveto
287 679 271 689 255 693  curveto
239 697 227 700 219 700  curveto
206 700 195 697 185 693  curveto
175 688 167 682 160 675  curveto
150 665 146 654 146 640  curveto
146 630 148 621 153 613  curveto
158 605 164 597 172 590  curveto
187 574 203 561 221 549  curveto
239 537 257 525 277 513  curveto
287 507 296 501 306 495  curveto
316 489 326 483 336 476  curveto
346 469 356 461 367 452  curveto
378 443 390 433 402 421  curveto
425 397 444 369 459 337  curveto
473 304 481 268 481 228  curveto
closepath
fill
		} def

	/e
		{
427 107 moveto
425 83 418 63 405 46  curveto
391 29 375 16 356 7  curveto
346 2 336 -1 325 -5  curveto
314 -8 303 -11 292 -13  curveto
280 -15 269 -17 258 -18  curveto
247 -19 238 -20 230 -20  curveto
194 -20 160 -14 129 -3  curveto
98 7 75 20 60 36  curveto
34 61 22 91 22 126  curveto
22 154 31 180 49 203  curveto
67 226 95 242 133 252  curveto
120 257 108 263 96 269  curveto
84 275 74 282 65 290  curveto
56 298 49 308 44 320  curveto
38 332 36 346 36 363  curveto
36 385 42 405 55 425  curveto
67 445 88 462 118 477  curveto
133 484 151 490 171 495  curveto
191 499 215 502 241 502  curveto
260 502 277 500 292 498  curveto
307 496 324 490 342 481  curveto
360 471 373 460 382 448  curveto
391 435 396 423 396 412  curveto
396 398 391 387 382 378  curveto
373 369 363 365 351 365  curveto
331 365 318 370 311 382  curveto
303 394 297 407 293 422  curveto
289 433 281 443 269 452  curveto
257 461 241 466 222 466  curveto
208 466 196 463 184 458  curveto
172 452 162 445 154 437  curveto
136 419 127 393 127 361  curveto
127 335 134 314 148 297  curveto
162 280 184 272 215 272  curveto
225 272 238 273 254 275  curveto
270 277 283 278 293 278  curveto
306 278 316 275 322 271  curveto
328 266 331 261 331 256  curveto
331 249 325 242 315 235  curveto
305 228 293 225 279 225  curveto
269 225 259 226 247 228  curveto
235 230 225 232 215 232  curveto
189 232 167 223 151 206  curveto
135 188 127 164 127 132  curveto
127 115 128 102 132 93  curveto
136 83 142 74 152 65  curveto
163 53 179 44 200 37  curveto
220 29 244 26 272 26  curveto
302 26 329 31 352 43  curveto
374 55 391 78 401 114  curveto
427 107 lineto
427 107 lineto
closepath
fill
		} def

	/f
		{
235 464 moveto
214 460 196 452 182 440  curveto
167 428 155 414 146 396  curveto
136 378 129 358 125 335  curveto
121 312 119 287 119 261  curveto
119 235 121 208 127 182  curveto
132 156 140 131 152 109  curveto
157 98 163 88 170 78  curveto
177 68 184 60 192 52  curveto
200 44 208 37 216 32  curveto
224 26 232 23 240 23  curveto
235 464 lineto
closepath
402 214 moveto
402 242 399 270 393 298  curveto
387 326 380 351 370 371  curveto
359 391 347 409 335 423  curveto
322 437 303 450 279 464  curveto
282 24 lineto
309 27 330 36 344 50  curveto
358 64 370 82 380 102  curveto
387 117 392 134 396 154  curveto
400 173 402 193 402 214  curveto
closepath
490 244 moveto
490 197 482 156 467 122  curveto
451 88 434 61 414 41  curveto
396 23 377 11 355 4  curveto
333 -3 309 -9 282 -13  curveto
283 -224 lineto
243 -212 lineto
241 -14 lineto
217 -8 192 -1 167 8  curveto
141 17 119 31 101 50  curveto
77 73 59 101 46 134  curveto
33 167 27 201 27 236  curveto
27 254 29 272 33 292  curveto
37 311 42 330 49 348  curveto
56 366 64 384 74 400  curveto
84 416 95 430 107 442  curveto
142 477 185 497 235 501  curveto
233 671 lineto
278 656 lineto
279 498 lineto
309 492 334 485 355 477  curveto
376 468 396 454 415 436  curveto
441 410 460 380 472 348  curveto
484 315 490 280 490 244  curveto
closepath
fill
		} def

	/g
		{
280 58 moveto
284 31 288 5 292 -19  curveto
296 -43 298 -69 298 -95  curveto
298 -115 296 -133 293 -149  curveto
289 -165 285 -178 280 -190  curveto
274 -202 267 -210 260 -216  curveto
252 -222 243 -225 231 -225  curveto
213 -225 200 -218 192 -204  curveto
183 -190 179 -174 179 -155  curveto
179 -137 181 -119 185 -99  curveto
189 -79 195 -60 201 -41  curveto
207 -21 214 -3 221 14  curveto
227 32 233 47 239 60  curveto
235 93 230 125 224 157  curveto
218 188 212 217 205 245  curveto
198 272 191 297 183 319  curveto
175 341 168 361 160 377  curveto
152 392 142 403 130 410  curveto
117 417 105 421 95 421  curveto
78 421 63 414 49 400  curveto
38 389 31 377 28 364  curveto
24 351 22 335 22 317  curveto
5 317 lineto
5 344 lineto
5 370 7 392 12 412  curveto
17 431 22 445 27 454  curveto
34 469 44 480 58 488  curveto
72 495 87 499 105 499  curveto
125 499 142 494 156 485  curveto
169 476 181 461 192 440  curveto
201 420 208 401 214 381  curveto
219 361 225 337 232 307  curveto
237 283 243 257 249 227  curveto
255 197 261 169 265 142  curveto
267 142 lineto
380 494 lineto
484 494 lineto
280 58 lineto
closepath
fill
		} def

	/h
		{
438 -202 moveto
435 -186 432 -172 429 -158  curveto
426 -144 424 -126 424 -103  curveto
411 347 lineto
410 380 402 404 387 420  curveto
378 428 368 435 356 439  curveto
344 443 333 445 322 445  curveto
308 445 296 442 285 438  curveto
273 433 263 427 254 420  curveto
244 412 236 404 228 395  curveto
220 385 212 376 206 366  curveto
206 0 lineto
121 0 lineto
121 349 lineto
121 358 120 369 119 383  curveto
117 397 114 409 109 421  curveto
104 430 98 437 92 443  curveto
85 449 77 452 68 452  curveto
60 452 54 450 48 447  curveto
42 443 37 437 33 428  curveto
29 420 26 411 24 399  curveto
21 387 19 374 18 360  curveto
0 360 lineto
0 383 2 400 5 412  curveto
8 423 12 434 18 446  curveto
28 467 42 482 59 492  curveto
76 501 94 506 114 506  curveto
130 506 144 502 158 495  curveto
172 487 182 477 189 464  curveto
193 456 196 448 199 439  curveto
201 430 204 420 207 408  curveto
227 438 250 464 274 484  curveto
298 504 328 514 364 514  curveto
376 514 388 512 401 510  curveto
413 507 425 502 435 495  curveto
440 491 446 486 454 480  curveto
461 474 468 467 475 458  curveto
481 448 487 437 492 423  curveto
496 409 499 391 500 371  curveto
511 -126 lineto
511 -141 514 -155 518 -169  curveto
522 -182 525 -193 527 -202  curveto
438 -202 lineto
closepath
fill
		} def

	/i
		{
301 101 moveto
297 77 292 58 285 43  curveto
278 28 270 16 260 7  curveto
250 -1 239 -7 227 -11  curveto
215 -15 204 -17 192 -17  curveto
175 -17 161 -14 150 -10  curveto
138 -5 128 1 119 11  curveto
110 19 103 30 97 42  curveto
91 54 88 66 88 78  curveto
88 309 lineto
88 335 86 357 82 373  curveto
78 389 73 401 67 409  curveto
60 417 52 423 44 426  curveto
36 428 27 430 19 430  curveto
0 430 lineto
0 450 lineto
27 455 55 462 83 471  curveto
111 479 141 490 173 503  curveto
173 118 lineto
173 102 174 88 178 78  curveto
182 67 186 59 191 54  curveto
198 45 203 39 207 36  curveto
211 32 216 31 223 31  curveto
229 31 235 31 241 33  curveto
247 35 253 38 259 43  curveto
264 48 268 55 272 64  curveto
276 73 279 85 281 101  curveto
301 101 lineto
301 101 lineto
closepath
fill
		} def

	/j
		{
502 214 moveto
502 242 499 267 494 291  curveto
488 314 482 334 474 350  curveto
470 357 465 365 459 374  curveto
453 382 446 390 438 398  curveto
430 405 423 411 415 416  curveto
407 421 399 424 392 424  curveto
386 424 379 422 373 420  curveto
367 418 362 415 358 411  curveto
351 404 345 392 341 374  curveto
337 356 335 335 335 310  curveto
335 305 335 298 335 290  curveto
335 282 336 277 336 275  curveto
347 23 lineto
383 27 411 38 433 58  curveto
455 77 471 97 481 117  curveto
488 132 493 147 497 163  curveto
500 179 502 196 502 214  curveto
closepath
587 247 moveto
587 213 580 179 566 146  curveto
552 112 535 86 515 66  curveto
505 56 495 47 483 38  curveto
471 29 459 21 445 13  curveto
431 5 417 0 403 -5  curveto
388 -9 374 -12 360 -12  curveto
347 -12 lineto
347 -224 lineto
284 -224 lineto
284 -13 lineto
272 -11 258 -8 244 -5  curveto
230 -2 215 1 200 7  curveto
185 13 170 20 155 29  curveto
139 37 125 49 111 63  curveto
101 73 91 85 82 100  curveto
72 114 64 130 58 147  curveto
51 164 46 182 42 202  curveto
38 221 36 241 36 261  curveto
36 291 41 321 52 350  curveto
62 378 77 402 97 422  curveto
116 441 138 457 162 471  curveto
186 485 215 492 248 492  curveto
248 474 lineto
227 464 210 453 196 439  curveto
182 425 171 409 163 391  curveto
155 373 149 353 146 332  curveto
142 310 141 288 141 265  curveto
141 234 143 205 149 179  curveto
155 152 162 130 171 113  curveto
185 85 202 63 223 49  curveto
243 35 264 27 284 26  curveto
275 311 lineto
275 315 274 321 274 329  curveto
274 336 274 343 274 350  curveto
274 363 276 378 280 395  curveto
284 412 290 428 300 444  curveto
310 459 322 472 338 483  curveto
354 493 373 499 397 499  curveto
415 499 433 495 451 489  curveto
469 482 489 468 511 446  curveto
532 424 550 396 565 362  curveto
579 327 587 289 587 247  curveto
closepath
fill
		} def

	/k
		{
323 0 moveto
323 18 lineto
340 18 352 19 358 23  curveto
364 26 368 30 368 36  curveto
368 42 365 47 361 52  curveto
356 57 351 63 346 71  curveto
194 258 lineto
194 0 lineto
119 0 lineto
119 344 lineto
119 362 117 378 114 390  curveto
110 402 105 411 98 417  curveto
91 423 82 428 71 430  curveto
60 432 47 434 33 434  curveto
33 455 lineto
43 457 54 459 65 461  curveto
76 463 88 465 101 468  curveto
113 471 127 475 142 481  curveto
157 486 174 493 194 501  curveto
194 284 lineto
215 305 236 326 258 346  curveto
280 366 300 385 319 402  curveto
338 419 355 434 370 446  curveto
385 458 397 467 406 473  curveto
411 478 421 484 436 490  curveto
450 496 466 500 484 500  curveto
508 500 527 494 539 482  curveto
551 470 557 459 557 447  curveto
557 435 552 423 543 411  curveto
534 399 520 394 501 394  curveto
491 394 483 395 477 399  curveto
470 403 464 407 458 411  curveto
452 415 447 418 442 422  curveto
437 426 432 428 426 428  curveto
418 428 407 424 395 416  curveto
383 408 370 397 356 385  curveto
342 373 328 359 314 345  curveto
300 331 286 317 274 305  curveto
461 70 lineto
478 48 494 34 508 28  curveto
522 21 538 18 558 18  curveto
558 0 lineto
323 0 lineto
closepath
fill
		} def

	/l
		{
547 153 moveto
547 127 545 105 542 88  curveto
538 70 533 55 527 42  curveto
515 20 502 4 487 -4  curveto
471 -12 457 -17 444 -17  curveto
425 -17 408 -10 393 1  curveto
377 13 365 28 357 46  curveto
353 53 349 64 345 79  curveto
340 94 335 111 331 130  curveto
326 149 321 170 317 192  curveto
313 214 309 235 305 256  curveto
301 277 298 297 295 316  curveto
292 335 290 351 289 365  curveto
287 365 lineto
116 0 lineto
24 0 lineto
255 498 lineto
249 524 243 547 237 568  curveto
231 589 224 607 217 623  curveto
210 636 201 646 189 653  curveto
177 659 166 663 154 663  curveto
142 663 132 660 122 656  curveto
112 651 103 645 96 638  curveto
86 628 80 617 77 605  curveto
74 593 71 581 68 570  curveto
49 570 lineto
54 622 64 664 79 694  curveto
93 724 116 739 146 739  curveto
168 739 187 732 205 719  curveto
222 705 235 691 243 675  curveto
252 656 261 631 271 600  curveto
280 569 289 536 299 501  curveto
303 484 307 462 313 436  curveto
319 410 325 382 331 352  curveto
337 322 343 293 349 264  curveto
355 234 360 208 366 186  curveto
370 169 375 152 382 135  curveto
388 118 397 104 408 94  curveto
423 78 440 71 460 71  curveto
470 71 481 73 491 79  curveto
501 85 509 94 516 108  curveto
519 114 522 121 524 131  curveto
526 140 527 147 529 153  curveto
547 153 lineto
547 153 lineto
closepath
fill
		} def

	/m
		{
566 101 moveto
563 79 557 61 549 46  curveto
540 31 530 19 518 10  curveto
506 0 494 -6 482 -10  curveto
469 -14 457 -17 446 -17  curveto
428 -17 413 -12 399 -4  curveto
385 4 374 16 367 32  curveto
363 38 361 46 360 54  curveto
358 62 357 71 355 81  curveto
349 73 345 68 343 64  curveto
340 60 335 55 329 49  curveto
307 27 286 11 265 0  curveto
243 -11 219 -17 193 -17  curveto
174 -17 158 -12 144 -4  curveto
130 3 115 15 97 31  curveto
97 10 lineto
97 -5 98 -19 102 -32  curveto
105 -45 109 -58 113 -70  curveto
117 -82 120 -95 124 -108  curveto
127 -121 129 -135 129 -151  curveto
129 -172 124 -189 115 -203  curveto
106 -216 95 -223 81 -223  curveto
69 -223 58 -217 48 -205  curveto
38 -193 33 -176 33 -153  curveto
33 -137 34 -123 37 -111  curveto
40 -99 43 -87 47 -75  curveto
50 -63 53 -51 56 -38  curveto
59 -25 61 -10 61 7  curveto
61 500 lineto
147 500 lineto
147 164 lineto
147 125 157 96 177 76  curveto
185 67 196 61 208 57  curveto
220 53 231 51 243 51  curveto
252 51 262 53 273 57  curveto
284 61 295 67 306 74  curveto
316 81 326 89 334 99  curveto
342 108 349 118 354 128  curveto
354 500 lineto
440 500 lineto
440 116 lineto
440 92 444 72 454 56  curveto
464 40 477 32 494 32  curveto
512 32 526 41 536 61  curveto
538 66 540 72 542 79  curveto
543 86 544 93 546 101  curveto
566 101 lineto
566 101 lineto
closepath
fill
		} def

	/n
		{
475 439 moveto
475 435 473 428 471 418  curveto
468 408 464 397 460 385  curveto
456 372 451 358 445 344  curveto
439 330 433 316 427 304  curveto
412 274 396 243 379 210  curveto
361 177 345 146 330 116  curveto
314 86 301 59 290 35  curveto
278 11 271 -5 269 -16  curveto
232 -16 lineto
64 414 lineto
60 424 56 432 53 437  curveto
50 442 46 446 41 449  curveto
34 452 25 454 15 455  curveto
4 455 -3 456 -9 457  curveto
-9 476 lineto
9 478 23 479 34 480  curveto
45 481 55 483 64 485  curveto
72 487 81 489 89 493  curveto
97 496 108 501 122 507  curveto
280 103 lineto
358 253 lineto
364 265 369 276 373 285  curveto
377 294 379 302 381 309  curveto
383 315 384 321 384 326  curveto
384 330 385 334 385 338  curveto
385 357 382 376 376 396  curveto
370 416 368 433 368 448  curveto
368 452 369 457 371 463  curveto
373 469 376 474 380 480  curveto
384 486 389 490 395 494  curveto
401 498 409 500 419 500  curveto
431 500 443 495 456 485  curveto
468 475 475 460 475 439  curveto
closepath
fill
		} def

	/o
		{
404 223 moveto
404 258 401 289 395 316  curveto
389 342 381 365 372 385  curveto
358 412 341 433 320 447  curveto
299 461 277 469 255 469  curveto
225 469 199 457 175 433  curveto
163 421 152 401 144 375  curveto
135 349 131 315 131 273  curveto
131 249 133 222 138 192  curveto
143 162 154 131 170 99  curveto
181 76 197 57 217 43  curveto
237 29 259 22 283 22  curveto
307 22 329 29 347 45  curveto
365 61 378 82 388 110  curveto
393 125 397 142 400 161  curveto
402 180 404 201 404 223  curveto
closepath
501 241 moveto
501 229 499 215 497 199  curveto
495 183 491 167 485 150  curveto
479 132 470 114 459 96  curveto
448 77 434 59 417 42  curveto
399 24 378 10 353 -1  curveto
328 -13 300 -19 268 -19  curveto
246 -19 226 -16 207 -10  curveto
188 -4 171 1 156 9  curveto
117 37 87 70 66 110  curveto
45 149 35 194 35 244  curveto
35 274 40 305 51 336  curveto
61 366 76 394 96 418  curveto
116 442 140 461 168 476  curveto
196 491 228 499 264 499  curveto
294 499 323 492 352 480  curveto
380 467 407 448 433 423  curveto
449 407 464 383 479 353  curveto
493 323 501 285 501 241  curveto
closepath
fill
		} def

	/p
		{
530 151 moveto
530 131 527 112 522 92  curveto
516 72 509 54 499 38  curveto
489 22 476 9 461 -1  curveto
446 -11 429 -16 410 -16  curveto
391 -16 374 -8 359 8  curveto
343 24 331 48 322 80  curveto
320 84 319 90 318 98  curveto
317 105 316 113 316 121  curveto
315 129 314 136 314 144  curveto
314 152 314 158 314 164  curveto
314 202 316 241 322 281  curveto
327 321 331 361 335 401  curveto
222 401 lineto
215 326 208 263 202 212  curveto
195 160 188 114 181 74  curveto
179 63 177 53 175 44  curveto
173 34 170 26 167 20  curveto
159 4 150 -5 140 -11  curveto
129 -16 119 -19 110 -19  curveto
94 -19 82 -13 72 -2  curveto
62 8 57 20 57 33  curveto
57 47 60 58 68 68  curveto
75 77 83 87 93 99  curveto
101 109 109 119 117 130  curveto
125 141 130 155 132 172  curveto
161 401 lineto
114 401 lineto
103 401 91 398 79 393  curveto
66 387 55 379 47 367  curveto
27 338 lineto
10 338 lineto
24 384 43 421 65 447  curveto
87 473 116 487 152 487  curveto
522 487 lineto
522 401 lineto
396 401 lineto
394 381 392 361 390 340  curveto
388 318 387 297 386 276  curveto
385 255 384 235 384 217  curveto
384 198 384 182 384 169  curveto
384 157 385 146 387 135  curveto
389 124 393 114 399 106  curveto
404 97 411 90 419 84  curveto
427 78 438 76 450 76  curveto
457 76 466 78 476 84  curveto
486 89 494 98 500 110  curveto
502 115 504 121 505 128  curveto
506 135 507 143 508 151  curveto
530 151 lineto
530 151 lineto
closepath
fill
		} def

	/q
		{
144 316 moveto
150 212 lineto
151 187 155 163 162 140  curveto
169 117 178 97 188 79  curveto
198 61 210 47 224 37  curveto
237 26 251 21 265 21  curveto
279 21 292 26 306 38  curveto
319 50 331 65 341 83  curveto
351 101 359 121 366 144  curveto
372 166 376 189 378 211  curveto
384 316 lineto
144 316 lineto
closepath
379 463 moveto
378 471 377 481 375 493  curveto
373 504 370 515 367 527  curveto
364 538 361 549 358 560  curveto
354 570 351 579 347 587  curveto
337 607 324 623 308 636  curveto
292 649 277 656 263 656  curveto
252 656 238 650 222 638  curveto
206 626 193 611 184 593  curveto
179 583 175 573 171 562  curveto
167 550 163 539 160 527  curveto
157 515 155 504 153 493  curveto
151 481 149 472 149 464  curveto
143 368 lineto
385 368 lineto
379 463 lineto
closepath
485 351 moveto
485 296 481 248 473 208  curveto
465 168 455 135 443 110  curveto
435 93 424 77 412 62  curveto
400 46 386 33 370 21  curveto
354 9 338 0 320 -6  curveto
302 -13 284 -17 265 -17  curveto
230 -17 196 -6 164 16  curveto
132 38 106 69 86 109  curveto
72 137 61 170 54 210  curveto
46 250 43 297 43 351  curveto
43 396 46 434 52 465  curveto
58 495 68 523 81 549  curveto
91 569 102 588 116 605  curveto
130 622 145 637 161 650  curveto
177 662 193 672 211 679  curveto
229 686 247 690 265 690  curveto
279 690 294 687 310 681  curveto
326 675 343 667 359 655  curveto
375 643 391 628 407 610  curveto
422 592 436 570 449 546  curveto
461 520 470 491 476 459  curveto
482 427 485 391 485 351  curveto
closepath
fill
		} def

	/r
		{
401 214 moveto
401 248 394 281 382 313  curveto
370 345 353 371 332 393  curveto
298 427 262 444 224 444  curveto
212 444 202 442 194 439  curveto
186 435 179 430 172 423  curveto
158 409 148 395 144 381  curveto
140 367 138 354 138 343  curveto
138 336 138 328 138 320  curveto
138 312 139 305 139 300  curveto
144 116 lineto
144 110 146 102 151 92  curveto
155 82 162 72 172 62  curveto
182 52 194 43 208 36  curveto
222 28 238 25 258 25  curveto
302 25 336 42 362 76  curveto
388 110 401 156 401 214  curveto
closepath
490 252 moveto
490 226 486 201 479 176  curveto
471 151 463 129 454 110  curveto
442 88 429 68 414 52  curveto
399 36 383 22 367 12  curveto
351 2 334 -5 317 -11  curveto
299 -16 283 -19 269 -19  curveto
246 -19 223 -13 199 -3  curveto
175 6 158 21 147 40  curveto
147 -134 lineto
147 -147 146 -162 145 -179  curveto
143 -196 141 -213 137 -230  curveto
50 -230 lineto
51 -217 53 -203 57 -189  curveto
60 -175 62 -157 62 -137  curveto
62 -121 61 -106 61 -92  curveto
61 -78 61 -69 61 -67  curveto
58 200 lineto
58 203 58 208 58 215  curveto
58 221 57 228 57 236  curveto
57 244 57 251 57 259  curveto
57 267 57 274 57 280  curveto
57 308 61 333 70 357  curveto
78 380 92 401 112 421  curveto
123 432 135 442 148 452  curveto
160 462 176 471 194 481  curveto
210 489 223 494 235 496  curveto
247 498 258 499 270 499  curveto
312 499 349 489 383 469  curveto
417 449 445 417 467 373  curveto
474 358 480 340 484 320  curveto
488 300 490 277 490 252  curveto
closepath
fill
		} def

	/s
		{
430 199 moveto
430 239 421 277 405 311  curveto
388 345 359 380 318 414  curveto
288 414 lineto
267 414 247 410 227 402  curveto
207 394 190 383 176 369  curveto
164 357 154 340 146 319  curveto
138 297 134 274 134 248  curveto
134 212 140 177 153 145  curveto
165 113 184 85 208 61  curveto
217 51 229 42 245 33  curveto
261 23 277 19 295 19  curveto
325 19 348 25 366 39  curveto
383 52 397 69 407 89  curveto
415 105 420 121 424 139  curveto
428 156 430 176 430 199  curveto
closepath
371 414 moveto
371 412 lineto
383 408 397 400 411 390  curveto
425 380 439 368 453 355  curveto
466 342 478 328 489 314  curveto
500 300 509 287 515 275  curveto
521 261 526 248 528 236  curveto
530 224 532 211 532 199  curveto
532 179 529 160 523 141  curveto
517 122 509 104 499 87  curveto
488 70 475 54 459 40  curveto
443 26 426 14 407 4  curveto
397 0 387 -4 376 -7  curveto
364 -10 353 -13 341 -15  curveto
329 -17 318 -18 307 -19  curveto
296 -20 287 -21 279 -21  curveto
249 -21 220 -14 193 -2  curveto
165 10 142 26 123 46  curveto
91 78 67 112 52 149  curveto
37 186 30 223 30 261  curveto
30 289 36 317 48 344  curveto
60 370 75 392 93 410  curveto
107 424 124 437 143 448  curveto
162 459 182 468 203 476  curveto
224 484 245 490 267 494  curveto
288 498 308 500 327 500  curveto
588 500 lineto
588 414 lineto
371 414 lineto
closepath
fill
		} def

	/t
		{
264 408 moveto
262 384 261 360 259 334  curveto
257 308 255 284 253 262  curveto
251 239 250 219 249 202  curveto
247 185 247 174 247 170  curveto
247 158 248 147 251 136  curveto
254 124 258 114 264 105  curveto
270 96 277 89 285 83  curveto
293 77 302 74 312 74  curveto
329 74 342 79 352 91  curveto
361 103 367 123 371 152  curveto
390 152 lineto
390 130 389 112 387 98  curveto
385 83 382 70 379 60  curveto
375 49 371 40 366 32  curveto
360 24 355 18 349 12  curveto
337 0 325 -8 312 -12  curveto
299 -16 288 -19 279 -19  curveto
270 -19 261 -17 251 -14  curveto
241 -10 233 -5 226 2  curveto
206 21 194 44 189 72  curveto
184 100 182 127 182 153  curveto
182 187 183 224 187 264  curveto
190 304 195 351 203 407  curveto
113 407 lineto
97 407 82 398 67 381  curveto
52 363 39 340 28 311  curveto
10 311 lineto
19 349 29 379 41 402  curveto
53 425 66 444 82 460  curveto
97 475 114 485 133 491  curveto
151 497 168 500 183 500  curveto
418 500 lineto
418 408 lineto
264 408 lineto
closepath
fill
		} def

	/u
		{
535 243 moveto
535 225 533 208 531 190  curveto
528 172 524 154 518 136  curveto
512 118 505 100 496 84  curveto
486 68 475 53 462 40  curveto
444 22 422 8 395 -2  curveto
368 -12 340 -18 311 -18  curveto
291 -18 271 -15 252 -10  curveto
233 -5 215 5 199 22  curveto
193 27 188 33 184 40  curveto
180 46 175 53 171 61  curveto
160 78 152 96 148 116  curveto
144 136 141 157 141 180  curveto
141 192 141 206 141 224  curveto
141 242 140 260 140 279  curveto
139 298 138 317 137 335  curveto
136 353 135 368 133 382  curveto
128 411 116 426 97 426  curveto
82 426 69 420 58 409  curveto
52 403 47 395 42 384  curveto
36 372 32 363 30 356  curveto
7 356 lineto
9 366 12 377 16 389  curveto
20 401 24 412 28 423  curveto
32 433 37 443 41 452  curveto
45 460 50 467 56 473  curveto
64 481 74 488 86 494  curveto
98 500 111 503 126 503  curveto
134 503 142 501 152 498  curveto
161 495 170 491 178 485  curveto
186 479 192 472 198 464  curveto
204 456 207 446 209 436  curveto
211 422 213 405 215 385  curveto
217 364 219 342 221 318  curveto
223 294 224 269 225 243  curveto
226 217 227 193 227 171  curveto
227 158 228 144 231 130  curveto
233 115 238 101 246 87  curveto
253 71 264 57 278 43  curveto
292 29 307 23 324 23  curveto
335 23 347 25 359 30  curveto
371 35 381 42 390 51  curveto
400 61 410 75 418 91  curveto
426 107 432 124 438 143  curveto
443 162 447 182 450 203  curveto
452 223 454 243 454 263  curveto
454 281 453 300 451 321  curveto
449 341 444 362 436 382  curveto
428 402 417 422 402 441  curveto
386 459 365 476 339 490  curveto
345 507 lineto
371 497 396 484 419 470  curveto
442 455 462 437 479 416  curveto
496 395 510 370 520 342  curveto
530 314 535 281 535 243  curveto
closepath
fill
		} def

	/v
		{
573 221 moveto
573 243 571 262 569 279  curveto
567 296 564 311 560 324  curveto
556 336 552 347 548 357  curveto
544 367 540 376 536 384  curveto
526 402 517 416 508 427  curveto
498 437 489 446 479 453  curveto
469 460 459 466 449 471  curveto
439 476 428 482 418 490  curveto
294 489 lineto
289 486 283 483 276 480  curveto
269 476 262 473 254 469  curveto
246 465 238 460 230 455  curveto
222 449 214 443 208 437  curveto
200 429 192 418 184 406  curveto
176 394 168 379 162 361  curveto
156 343 151 322 147 298  curveto
143 274 141 246 141 214  curveto
141 186 143 161 147 137  curveto
151 113 156 93 164 78  curveto
171 64 180 51 190 40  curveto
200 29 215 24 233 24  curveto
249 24 264 29 279 39  curveto
294 49 306 63 315 81  curveto
319 90 323 101 325 113  curveto
327 125 329 137 331 147  curveto
322 167 315 188 311 209  curveto
307 230 305 254 305 280  curveto
305 308 307 333 311 355  curveto
313 369 319 381 329 392  curveto
339 403 348 409 358 409  curveto
366 409 372 406 378 400  curveto
384 394 388 386 392 376  curveto
396 366 398 356 400 344  curveto
402 332 403 321 403 309  curveto
403 294 402 280 401 268  curveto
399 255 397 243 395 231  curveto
392 219 389 206 386 194  curveto
383 181 380 167 378 152  curveto
378 147 380 138 382 124  curveto
384 110 388 96 395 82  curveto
401 68 411 55 423 44  curveto
435 32 453 27 475 27  curveto
483 27 492 28 502 32  curveto
512 36 520 41 526 47  curveto
530 51 535 58 541 68  curveto
547 77 552 89 557 103  curveto
561 117 565 133 568 153  curveto
571 173 573 195 573 221  curveto
closepath
491 490 moveto
511 483 528 475 543 467  curveto
558 459 571 450 583 440  curveto
594 430 604 418 613 406  curveto
621 393 629 379 637 365  curveto
648 341 656 317 661 291  curveto
666 265 669 240 669 218  curveto
669 193 666 168 661 143  curveto
655 118 648 96 638 76  curveto
629 58 618 44 606 32  curveto
593 20 580 11 566 4  curveto
552 -3 539 -8 525 -12  curveto
511 -15 498 -17 487 -17  curveto
469 -17 452 -13 435 -6  curveto
417 1 403 10 392 22  curveto
385 28 379 37 373 48  curveto
367 58 361 69 356 80  curveto
345 60 334 44 322 32  curveto
310 19 297 9 285 2  curveto
272 -5 260 -10 248 -13  curveto
236 -16 226 -18 216 -18  curveto
196 -18 176 -14 157 -6  curveto
137 1 121 12 107 26  curveto
81 51 63 80 52 113  curveto
40 145 35 184 35 228  curveto
35 242 36 259 38 277  curveto
40 295 44 313 49 331  curveto
54 349 61 366 70 383  curveto
78 400 89 415 101 427  curveto
112 438 125 448 139 458  curveto
153 468 166 477 180 487  curveto
158 485 140 484 127 482  curveto
113 480 101 478 91 475  curveto
81 471 71 467 62 461  curveto
52 455 41 447 28 437  curveto
12 436 lineto
18 455 27 473 38 490  curveto
48 506 60 521 72 534  curveto
84 546 98 556 112 564  curveto
126 571 140 575 154 575  curveto
670 583 lineto
671 495 lineto
491 490 lineto
closepath
fill
		} def

	/w
		{
683 216 moveto
683 187 680 162 675 142  curveto
669 121 662 102 653 84  curveto
637 52 616 27 590 9  curveto
564 -8 536 -17 505 -17  curveto
495 -17 486 -16 476 -14  curveto
466 -12 457 -9 448 -4  curveto
428 5 412 16 399 30  curveto
386 44 374 61 363 82  curveto
350 57 336 38 321 25  curveto
305 12 291 2 278 -4  curveto
267 -9 258 -12 251 -14  curveto
244 -16 234 -17 222 -17  curveto
194 -17 168 -10 146 2  curveto
124 15 105 33 90 55  curveto
74 77 62 102 54 130  curveto
46 158 42 188 42 220  curveto
42 232 42 244 44 258  curveto
45 271 47 284 49 298  curveto
51 312 55 325 59 338  curveto
63 350 67 362 73 373  curveto
84 395 99 416 117 436  curveto
135 455 154 470 176 481  curveto
192 489 210 494 231 496  curveto
252 498 274 500 297 500  curveto
297 483 lineto
280 477 266 471 254 465  curveto
242 459 231 452 222 445  curveto
213 438 205 430 198 421  curveto
191 411 184 400 178 388  curveto
169 370 161 349 155 323  curveto
148 297 145 265 145 227  curveto
145 215 145 203 146 189  curveto
147 175 149 162 151 148  curveto
153 134 155 121 159 109  curveto
162 96 166 85 171 77  curveto
178 61 187 49 199 41  curveto
210 32 224 28 240 28  curveto
256 28 271 32 285 41  curveto
299 50 310 62 318 78  curveto
323 87 327 98 330 110  curveto
333 122 336 135 339 151  curveto
334 165 330 178 326 190  curveto
322 201 319 212 317 222  curveto
315 232 313 243 312 254  curveto
311 264 311 276 311 290  curveto
311 305 311 320 313 335  curveto
315 349 318 362 322 374  curveto
326 386 331 395 338 402  curveto
344 409 353 413 363 413  curveto
373 413 381 409 388 402  curveto
394 395 400 386 404 375  curveto
408 363 410 350 412 336  curveto
414 322 415 307 415 293  curveto
415 279 414 267 413 256  curveto
412 245 410 234 408 223  curveto
406 212 403 201 399 189  curveto
395 177 391 165 387 151  curveto
389 136 392 121 396 107  curveto
400 92 406 79 414 67  curveto
421 55 431 46 443 39  curveto
455 31 471 28 489 28  curveto
501 28 512 31 524 39  curveto
536 47 546 59 554 75  curveto
563 93 570 115 574 143  curveto
578 170 581 199 581 231  curveto
581 283 574 326 560 360  curveto
546 394 531 419 517 434  curveto
504 446 489 457 471 465  curveto
453 473 439 479 429 483  curveto
429 500 lineto
453 500 473 499 490 497  curveto
507 495 522 491 535 487  curveto
548 482 560 476 571 468  curveto
582 460 594 450 606 438  curveto
630 414 648 384 662 350  curveto
676 315 683 270 683 216  curveto
closepath
fill
		} def

	/x
		{
469 -35 moveto
469 -48 467 -63 464 -80  curveto
460 -96 455 -112 448 -126  curveto
430 -160 410 -185 386 -201  curveto
362 -217 337 -225 313 -225  curveto
309 -225 302 -224 293 -223  curveto
283 -222 274 -220 264 -216  curveto
254 -212 246 -207 239 -199  curveto
231 -191 228 -181 228 -168  curveto
228 -160 229 -153 232 -148  curveto
235 -143 239 -139 243 -136  curveto
247 -133 252 -131 257 -130  curveto
261 -129 265 -129 269 -129  curveto
273 -129 279 -129 287 -130  curveto
294 -131 302 -132 310 -133  curveto
318 -134 326 -135 334 -136  curveto
342 -137 350 -138 358 -138  curveto
370 -138 381 -135 391 -129  curveto
401 -123 408 -115 413 -106  curveto
417 -96 420 -85 420 -72  curveto
420 -64 419 -56 417 -48  curveto
415 -40 411 -32 406 -26  curveto
401 -19 394 -14 385 -10  curveto
375 -6 364 -4 350 -4  curveto
342 -4 328 -4 306 -5  curveto
284 -5 259 -6 231 -6  curveto
199 -6 171 -1 146 8  curveto
121 18 102 29 89 43  curveto
69 62 54 86 43 114  curveto
32 142 27 169 27 196  curveto
27 218 30 240 37 262  curveto
44 284 53 306 65 330  curveto
74 348 87 364 103 378  curveto
119 392 136 406 153 420  curveto
137 437 125 454 115 470  curveto
105 486 100 503 100 523  curveto
100 545 103 564 109 579  curveto
115 594 124 607 137 618  curveto
128 620 119 623 111 627  curveto
103 631 95 635 89 641  curveto
82 646 76 653 72 661  curveto
68 669 66 679 66 691  curveto
66 703 69 713 75 722  curveto
81 731 88 739 97 745  curveto
106 751 116 756 126 760  curveto
136 763 145 765 153 765  curveto
156 765 159 765 162 765  curveto
165 765 168 764 171 764  curveto
173 748 lineto
151 740 137 732 129 724  curveto
121 716 117 706 117 695  curveto
117 685 122 675 132 666  curveto
142 657 155 652 171 652  curveto
197 673 222 692 244 708  curveto
266 724 290 732 318 732  curveto
332 732 342 729 349 724  curveto
355 718 359 711 359 702  curveto
359 688 353 676 343 666  curveto
333 656 320 647 304 639  curveto
294 634 285 630 277 627  curveto
269 624 260 622 252 620  curveto
243 618 234 617 225 616  curveto
215 615 205 614 193 614  curveto
171 599 156 583 148 567  curveto
139 550 135 533 135 517  curveto
135 505 138 493 146 482  curveto
154 470 168 456 190 440  curveto
217 453 242 463 265 471  curveto
288 479 312 483 338 483  curveto
358 483 375 480 389 475  curveto
402 470 409 461 409 448  curveto
409 438 405 430 399 424  curveto
392 417 383 411 371 407  curveto
359 403 346 399 331 397  curveto
315 395 299 394 283 394  curveto
267 394 254 395 242 397  curveto
230 399 216 402 202 406  curveto
188 399 175 391 162 381  curveto
148 371 137 362 127 352  curveto
111 336 98 315 88 291  curveto
78 267 73 244 73 223  curveto
73 212 74 202 77 192  curveto
79 182 83 173 88 164  curveto
96 146 109 131 127 118  curveto
144 104 170 97 204 96  curveto
347 91 lineto
369 90 387 86 403 78  curveto
418 70 431 60 441 48  curveto
451 36 458 22 462 8  curveto
466 -6 469 -21 469 -35  curveto
closepath
fill
		} def

	/y
		{
701 470 moveto
687 467 676 464 668 462  curveto
659 459 652 456 647 453  curveto
642 450 638 447 635 444  curveto
632 440 630 436 628 432  curveto
622 422 619 404 619 380  curveto
619 355 617 324 613 286  curveto
611 274 610 260 608 245  curveto
606 230 604 215 601 200  curveto
598 185 595 170 591 156  curveto
587 141 582 128 577 118  curveto
560 84 536 56 505 32  curveto
473 8 434 -7 388 -17  curveto
388 -228 lineto
325 -228 lineto
325 -17 lineto
234 2 171 47 136 118  curveto
128 132 122 149 118 168  curveto
113 187 109 207 106 227  curveto
103 247 101 268 99 289  curveto
97 310 96 330 95 348  curveto
93 368 92 386 92 400  curveto
91 414 89 425 85 433  curveto
80 442 73 449 63 454  curveto
53 459 36 464 12 470  curveto
12 488 lineto
24 493 35 496 47 498  curveto
58 499 69 500 79 500  curveto
105 500 127 493 144 479  curveto
160 465 173 449 182 432  curveto
186 423 189 411 193 397  curveto
196 383 199 367 201 351  curveto
203 334 206 317 208 299  curveto
210 281 212 265 214 250  curveto
218 210 222 177 224 151  curveto
226 125 230 105 238 90  curveto
245 74 256 60 271 48  curveto
285 36 303 27 325 22  curveto
325 487 lineto
388 487 lineto
388 22 lineto
411 28 429 37 443 49  curveto
456 61 466 74 474 88  curveto
482 104 487 123 489 147  curveto
491 171 494 201 498 237  curveto
500 253 502 270 504 289  curveto
506 308 508 327 511 345  curveto
513 363 516 380 520 396  curveto
523 411 527 423 531 432  curveto
541 451 554 467 572 480  curveto
589 493 610 500 634 500  curveto
644 500 654 499 666 498  curveto
677 496 689 493 701 488  curveto
701 470 lineto
701 470 lineto
closepath
fill
		} def

	/z
		{
468 -51 moveto
468 -64 465 -80 461 -100  curveto
456 -120 447 -139 435 -157  curveto
422 -175 405 -191 384 -205  curveto
362 -218 335 -225 303 -225  curveto
293 -225 284 -224 276 -223  curveto
267 -221 259 -219 252 -216  curveto
242 -211 234 -205 227 -197  curveto
220 -189 217 -181 217 -173  curveto
217 -161 221 -150 230 -140  curveto
239 -130 252 -125 270 -125  curveto
276 -125 283 -126 291 -128  curveto
299 -130 308 -132 317 -134  curveto
325 -136 333 -138 341 -140  curveto
349 -142 355 -143 360 -143  curveto
380 -143 396 -134 408 -118  curveto
419 -102 425 -84 425 -66  curveto
425 -50 419 -35 407 -23  curveto
395 -10 376 -4 351 -4  curveto
339 -4 325 -5 308 -7  curveto
291 -9 270 -11 245 -11  curveto
226 -11 208 -7 191 -1  curveto
174 5 159 13 145 23  curveto
131 33 119 43 109 54  curveto
99 65 92 75 88 84  curveto
83 93 79 104 75 116  curveto
71 128 68 141 66 154  curveto
64 166 62 178 61 190  curveto
60 202 60 212 60 220  curveto
60 240 60 258 62 275  curveto
63 291 65 307 68 322  curveto
71 337 75 352 79 366  curveto
83 380 88 395 94 411  curveto
100 430 107 447 114 462  curveto
120 476 128 490 136 503  curveto
144 516 152 529 161 543  curveto
170 556 181 571 193 587  curveto
185 589 176 592 165 596  curveto
154 600 145 603 138 607  curveto
126 612 117 619 111 629  curveto
105 639 102 650 102 664  curveto
102 676 104 687 110 698  curveto
116 708 124 718 134 727  curveto
144 735 155 742 169 747  curveto
182 752 196 755 212 756  curveto
214 738 lineto
194 730 181 720 173 709  curveto
165 698 161 687 161 676  curveto
161 660 165 647 175 636  curveto
185 625 199 618 219 614  curveto
232 626 244 638 255 648  curveto
265 658 276 668 286 676  curveto
296 684 307 691 317 698  curveto
327 704 339 711 352 717  curveto
362 722 370 725 376 727  curveto
382 729 388 730 395 730  curveto
404 730 413 727 421 722  curveto
429 717 433 709 433 697  curveto
433 683 425 669 411 654  curveto
396 638 379 626 359 616  curveto
351 612 344 608 338 605  curveto
331 602 324 599 316 597  curveto
308 595 299 593 289 591  curveto
279 589 268 587 254 586  curveto
238 572 221 552 203 528  curveto
185 504 169 478 155 450  curveto
141 422 129 391 121 359  curveto
112 327 108 292 108 254  curveto
108 233 108 216 110 203  curveto
112 190 116 178 122 166  curveto
133 142 148 124 168 112  curveto
187 100 206 94 226 94  curveto
234 94 244 94 258 95  curveto
272 95 285 96 299 96  curveto
329 96 354 92 376 84  curveto
398 76 416 65 431 51  curveto
445 37 454 20 460 2  curveto
465 -15 468 -33 468 -51  curveto
closepath
fill
		} def

	/braceleft
		{
279 -183 moveto
249 -183 226 -176 210 -163  curveto
194 -150 186 -124 186 -84  curveto
186 121 lineto
186 143 182 161 175 175  curveto
168 188 159 198 147 206  curveto
135 213 122 218 107 222  curveto
91 226 75 229 58 232  curveto
58 258 lineto
76 260 92 263 108 267  curveto
124 271 137 276 149 284  curveto
160 292 169 302 176 316  curveto
182 329 186 347 186 370  curveto
186 571 lineto
186 591 188 608 192 622  curveto
196 635 202 645 210 653  curveto
218 661 228 666 240 669  curveto
252 671 266 673 282 673  curveto
397 673 lineto
397 648 lineto
346 648 lineto
320 648 300 643 284 633  curveto
268 623 261 603 261 574  curveto
261 370 lineto
261 344 254 324 242 309  curveto
229 294 214 282 198 273  curveto
182 264 165 257 149 253  curveto
133 249 121 245 114 242  curveto
124 239 137 236 154 232  curveto
170 228 186 221 202 213  curveto
218 205 231 193 243 179  curveto
255 164 261 144 261 120  curveto
261 -83 lineto
261 -112 268 -132 284 -142  curveto
299 -152 319 -158 345 -158  curveto
397 -158 lineto
397 -183 lineto
279 -183 lineto
closepath
fill
		} def

	/bar
		{
65 -177 moveto
65 673 lineto
135 673 lineto
135 -177 lineto
65 -177 lineto
closepath
fill
		} def

	/braceright
		{
418 232 moveto
400 229 384 226 369 222  curveto
353 218 340 213 328 206  curveto
316 198 307 188 300 175  curveto
293 161 290 143 290 121  curveto
290 -84 lineto
290 -124 282 -150 266 -163  curveto
250 -176 227 -183 197 -183  curveto
79 -183 lineto
79 -158 lineto
131 -158 lineto
156 -158 176 -152 192 -142  curveto
207 -132 215 -112 215 -83  curveto
215 120 lineto
215 144 220 164 232 179  curveto
244 193 257 205 273 213  curveto
289 221 305 228 322 232  curveto
338 236 352 239 362 242  curveto
354 245 342 249 326 253  curveto
310 257 293 264 277 273  curveto
261 282 246 294 234 309  curveto
221 324 215 344 215 370  curveto
215 574 lineto
215 603 207 623 191 633  curveto
175 643 155 648 130 648  curveto
79 648 lineto
79 673 lineto
194 673 lineto
210 673 224 671 236 669  curveto
248 666 258 661 266 653  curveto
274 645 280 635 284 622  curveto
288 608 290 591 290 571  curveto
290 370 lineto
290 347 293 329 300 316  curveto
306 302 315 292 327 284  curveto
338 276 351 271 367 267  curveto
383 263 400 260 418 258  curveto
418 232 lineto
418 232 lineto
closepath
fill
		} def

	/asciitilde
		{
529 283 moveto
516 259 498 241 475 227  curveto
452 213 426 206 396 206  curveto
374 206 353 208 333 214  curveto
313 219 293 225 274 232  curveto
254 238 235 244 217 250  curveto
198 255 179 258 160 258  curveto
148 258 137 256 128 254  curveto
119 252 111 248 103 244  curveto
95 240 88 234 81 227  curveto
74 220 66 212 58 203  curveto
17 228 lineto
29 246 41 260 54 270  curveto
67 280 80 288 93 294  curveto
106 299 119 302 132 304  curveto
144 305 156 306 167 306  curveto
187 306 207 303 225 297  curveto
243 291 262 285 280 279  curveto
298 273 315 267 333 261  curveto
351 255 370 253 390 253  curveto
412 253 431 257 447 266  curveto
463 275 478 289 492 307  curveto
529 283 lineto
529 283 lineto
closepath
fill
		} def

	/exclamdown
		{
610 587 moveto
610 572 608 559 604 549  curveto
600 538 594 529 588 522  curveto
581 515 574 510 566 506  curveto
558 502 551 501 545 501  curveto
537 501 531 502 525 506  curveto
519 510 514 514 510 519  curveto
506 524 502 530 500 536  curveto
498 542 497 547 497 552  curveto
497 562 498 570 502 576  curveto
506 582 510 587 515 592  curveto
519 596 523 601 527 605  curveto
531 609 533 615 533 622  curveto
533 630 528 635 518 639  curveto
508 642 499 644 490 644  curveto
475 644 458 636 438 622  curveto
418 607 401 586 387 558  curveto
379 543 373 528 368 512  curveto
362 496 358 478 354 458  curveto
350 438 348 415 346 391  curveto
344 366 344 338 344 307  curveto
344 297 344 282 344 264  curveto
344 245 344 225 344 203  curveto
344 181 345 160 345 139  curveto
345 117 345 99 345 85  curveto
345 59 351 41 365 32  curveto
378 22 401 18 435 18  curveto
435 0 lineto
151 0 lineto
151 18 lineto
185 18 209 23 222 33  curveto
234 43 241 60 241 84  curveto
241 105 241 125 241 143  curveto
241 161 240 178 240 196  curveto
240 214 240 232 240 251  curveto
240 269 240 290 240 313  curveto
240 325 239 340 238 359  curveto
236 378 234 398 231 419  curveto
228 439 224 460 219 480  curveto
214 500 208 517 201 532  curveto
190 553 177 572 161 589  curveto
145 606 124 619 99 627  curveto
15 654 lineto
3 658 -2 662 -2 667  curveto
-2 667 -1 669 -1 671  curveto
0 673 1 674 5 676  curveto
8 678 13 679 21 681  curveto
29 682 39 683 53 683  curveto
88 683 122 676 155 663  curveto
187 649 218 628 247 600  curveto
260 586 272 567 284 541  curveto
295 515 306 481 318 438  curveto
322 455 327 474 332 494  curveto
336 514 344 536 356 560  curveto
364 576 373 591 383 606  curveto
393 621 404 634 418 646  curveto
431 658 446 667 463 674  curveto
479 681 499 685 521 685  curveto
532 685 543 682 553 676  curveto
563 670 574 662 584 652  curveto
592 644 598 634 603 624  curveto
607 613 610 601 610 587  curveto
closepath
fill
		} def

	/cent
		{
229 679 moveto
229 675 226 671 222 665  curveto
67 469 lineto
65 467 63 464 60 462  curveto
57 459 54 458 51 458  curveto
45 458 39 459 34 463  curveto
29 467 27 471 27 477  curveto
27 481 29 487 33 495  curveto
134 720 lineto
136 724 138 727 142 730  curveto
145 733 152 735 164 735  curveto
172 735 180 733 188 731  curveto
196 729 203 725 209 719  curveto
213 714 217 708 222 700  curveto
226 692 229 685 229 679  curveto
closepath
fill
		} def

	/sterling
		{
29 0 moveto
29 55 lineto
526 55 lineto
526 0 lineto
29 0 lineto
closepath
29 347 moveto
29 409 lineto
526 639 lineto
526 577 lineto
93 378 lineto
526 179 lineto
526 117 lineto
29 347 lineto
closepath
fill
		} def

	/fraction
		{
fill
		} def

	/yen
		{
324 264 moveto
296 287 270 307 244 325  curveto
218 343 192 352 166 352  curveto
151 352 138 349 127 343  curveto
115 337 106 329 99 320  curveto
91 310 86 300 82 290  curveto
78 279 76 269 76 261  curveto
76 235 85 214 103 198  curveto
121 181 144 173 170 173  curveto
181 173 192 174 202 177  curveto
212 179 223 184 237 191  curveto
252 198 267 209 281 223  curveto
295 237 310 250 324 264  curveto
closepath
638 261 moveto
638 271 635 282 631 293  curveto
627 303 621 313 613 322  curveto
605 330 596 337 585 343  curveto
574 349 562 352 550 352  curveto
534 352 519 349 505 343  curveto
491 337 477 330 464 322  curveto
451 313 438 303 426 293  curveto
414 283 402 273 390 264  curveto
407 246 423 231 437 219  curveto
451 206 466 196 480 189  curveto
489 184 499 180 510 177  curveto
520 174 531 173 543 173  curveto
569 173 591 181 610 198  curveto
628 214 638 235 638 261  curveto
closepath
688 267 moveto
688 248 684 230 677 213  curveto
670 195 661 180 649 167  curveto
637 154 622 144 606 136  curveto
590 128 572 125 554 125  curveto
540 125 525 126 511 129  curveto
496 132 481 138 465 146  curveto
449 154 432 164 414 178  curveto
396 192 377 209 357 231  curveto
344 217 333 206 323 197  curveto
313 188 303 180 295 174  curveto
286 168 278 162 270 158  curveto
262 153 255 149 247 145  curveto
235 139 221 134 205 130  curveto
189 126 174 124 161 124  curveto
141 124 123 128 107 136  curveto
91 144 77 154 65 168  curveto
53 181 43 196 36 213  curveto
29 229 26 247 26 265  curveto
26 285 29 303 37 320  curveto
45 336 55 351 68 364  curveto
80 376 95 386 112 393  curveto
129 400 147 404 166 404  curveto
194 404 222 395 252 379  curveto
282 363 317 335 357 297  curveto
369 307 379 317 389 326  curveto
399 334 408 342 417 349  curveto
426 356 435 362 444 368  curveto
452 374 462 379 473 385  curveto
498 397 523 404 548 404  curveto
568 404 586 400 604 392  curveto
621 384 636 374 648 362  curveto
660 349 670 334 677 318  curveto
684 302 688 285 688 267  curveto
closepath
fill
		} def

	/florin
		{
fill
		} def

	/section
		{
660 179 moveto
660 141 650 112 632 91  curveto
613 69 588 59 556 59  curveto
537 59 519 63 503 71  curveto
487 79 473 90 463 102  curveto
453 112 444 121 436 130  curveto
428 138 420 143 414 143  curveto
408 143 403 138 401 129  curveto
399 120 398 108 398 93  curveto
398 79 398 68 399 58  curveto
400 48 402 38 405 29  curveto
408 20 412 11 417 3  curveto
422 -5 429 -15 437 -26  curveto
309 -26 lineto
317 -15 323 -5 328 3  curveto
333 11 337 20 340 29  curveto
343 38 345 48 346 58  curveto
347 68 348 79 348 93  curveto
348 106 347 117 345 127  curveto
343 137 340 142 334 142  curveto
328 142 320 137 310 129  curveto
300 120 292 111 285 103  curveto
275 91 262 81 246 72  curveto
229 63 210 59 190 59  curveto
160 59 135 69 115 89  curveto
95 109 86 139 86 177  curveto
86 195 88 215 94 235  curveto
99 255 107 270 118 281  curveto
126 289 136 296 149 302  curveto
161 308 176 311 194 311  curveto
210 311 224 308 236 304  curveto
248 299 259 294 269 288  curveto
279 282 288 276 296 272  curveto
304 267 313 265 321 265  curveto
326 265 330 266 333 268  curveto
335 270 337 274 337 282  curveto
337 288 335 293 331 297  curveto
327 301 323 304 318 308  curveto
312 312 307 315 301 319  curveto
295 323 289 327 284 333  curveto
274 343 264 356 256 372  curveto
248 388 244 404 244 422  curveto
244 434 246 447 251 461  curveto
256 474 264 486 275 497  curveto
285 507 299 516 315 523  curveto
331 529 351 533 374 533  curveto
396 533 416 529 432 522  curveto
448 515 462 506 472 495  curveto
482 484 490 472 495 459  curveto
499 446 502 434 502 423  curveto
502 413 500 403 498 394  curveto
495 385 492 377 488 369  curveto
484 361 479 355 475 349  curveto
471 343 467 338 464 335  curveto
457 328 450 322 444 318  curveto
437 314 431 310 426 307  curveto
421 303 417 300 414 296  curveto
410 292 409 286 409 280  curveto
409 270 414 265 425 265  curveto
433 265 441 267 450 272  curveto
458 276 467 282 477 288  curveto
487 294 498 299 510 304  curveto
522 308 535 311 551 311  curveto
567 311 582 308 595 302  curveto
608 296 619 289 628 281  curveto
638 270 646 255 652 235  curveto
657 215 660 196 660 179  curveto
closepath
fill
		} def

	/currency
		{
-124 -12 moveto
-180 -12 lineto
284 677 lineto
340 677 lineto
-124 -12 lineto
closepath
fill
		} def

	/quotesingle
		{
414 253 moveto
414 212 406 175 390 142  curveto
374 108 354 80 331 57  curveto
305 31 276 13 243 1  curveto
210 -11 176 -17 140 -17  curveto
123 -17 108 -15 94 -12  curveto
80 -9 64 -4 48 3  curveto
48 43 lineto
59 39 70 36 80 34  curveto
90 32 103 31 119 31  curveto
139 31 160 34 182 40  curveto
204 46 225 57 245 71  curveto
265 85 281 104 295 128  curveto
308 151 316 179 318 213  curveto
110 213 lineto
110 268 lineto
320 268 lineto
318 291 312 313 302 335  curveto
292 357 278 376 261 393  curveto
243 410 223 424 201 434  curveto
179 444 155 449 131 449  curveto
117 449 106 448 99 448  curveto
92 447 84 446 76 445  curveto
76 488 lineto
92 491 107 494 123 496  curveto
139 498 156 500 174 500  curveto
184 500 196 499 210 497  curveto
224 495 238 492 253 488  curveto
268 483 283 476 299 468  curveto
314 459 329 447 344 433  curveto
352 425 360 415 368 403  curveto
376 391 383 378 390 363  curveto
397 347 403 330 407 312  curveto
411 293 414 273 414 253  curveto
closepath
fill
		} def

	/quotedblleft
		{
fill
		} def

	/guillemotleft
		{
1024 248 moveto
984 212 944 174 904 132  curveto
864 90 821 41 775 -15  curveto
738 17 lineto
756 43 773 66 789 86  curveto
805 106 820 125 834 141  curveto
848 157 861 172 873 185  curveto
885 198 897 210 909 222  curveto
139 222 lineto
161 200 179 180 195 163  curveto
210 146 224 130 236 115  curveto
248 99 260 84 272 68  curveto
283 52 296 35 310 17  curveto
273 -15 lineto
241 23 204 64 164 110  curveto
124 156 77 202 24 248  curveto
56 276 84 303 108 327  curveto
132 351 153 373 172 394  curveto
191 415 209 435 225 454  curveto
241 473 257 492 273 511  curveto
310 479 lineto
296 458 282 440 270 424  curveto
258 408 245 392 233 377  curveto
220 361 206 345 191 329  curveto
176 313 159 294 139 274  curveto
909 274 lineto
897 286 885 299 873 311  curveto
861 323 848 337 834 353  curveto
820 369 806 387 790 407  curveto
774 427 757 451 738 479  curveto
775 511 lineto
795 486 815 462 834 440  curveto
853 418 872 396 892 375  curveto
912 354 932 333 954 312  curveto
975 291 998 270 1024 248  curveto
closepath
fill
		} def

	/guilsinglleft
		{
fill
		} def

	/guilsinglright
		{
fill
		} def

	/fi
		{
fill
		} def

	/fl
		{
fill
		} def

	/endash
		{
fill
		} def

	/dagger
		{
fill
		} def

	/daggerdbl
		{
fill
		} def

	/periodcentered
		{
411 293 moveto
411 267 406 244 397 222  curveto
387 200 374 181 358 165  curveto
342 149 323 136 301 127  curveto
279 117 255 113 231 113  curveto
205 113 182 117 160 127  curveto
138 136 119 149 103 165  curveto
87 181 74 200 65 222  curveto
55 244 51 267 51 293  curveto
51 317 55 341 65 363  curveto
74 385 87 404 103 420  curveto
119 436 138 449 160 459  curveto
182 468 205 473 231 473  curveto
255 473 279 468 301 459  curveto
323 449 342 436 358 420  curveto
374 404 387 385 397 363  curveto
406 341 411 317 411 293  curveto
closepath
fill
		} def

	/paragraph
		{
366 299 moveto
352 316 338 331 322 344  curveto
306 356 285 363 261 363  curveto
233 363 210 354 190 338  curveto
170 322 153 300 140 273  curveto
128 249 121 227 117 206  curveto
113 185 112 164 112 144  curveto
112 127 113 112 115 98  curveto
117 84 121 71 127 60  curveto
134 44 144 32 158 23  curveto
171 13 186 9 204 9  curveto
221 9 240 15 261 29  curveto
281 42 299 63 313 91  curveto
325 115 335 145 344 181  curveto
353 217 360 256 366 299  curveto
closepath
462 395 moveto
462 379 461 359 459 336  curveto
457 313 453 289 448 263  curveto
443 237 437 212 429 186  curveto
421 160 412 136 402 114  curveto
393 96 385 81 377 69  curveto
369 56 360 45 350 35  curveto
335 20 316 7 292 -4  curveto
268 -15 243 -21 215 -21  curveto
196 -21 178 -18 161 -13  curveto
144 -7 128 0 114 9  curveto
99 18 86 29 75 41  curveto
63 53 54 67 48 81  curveto
33 110 26 141 26 174  curveto
26 204 32 235 44 267  curveto
56 298 74 325 98 349  curveto
114 365 132 378 151 388  curveto
169 397 192 402 219 402  curveto
239 402 257 399 273 395  curveto
288 390 301 384 313 377  curveto
325 370 335 363 345 355  curveto
355 347 364 340 374 334  curveto
377 351 380 370 382 391  curveto
384 412 385 432 385 451  curveto
385 462 384 475 382 491  curveto
380 506 377 521 374 537  curveto
370 553 366 567 362 581  curveto
358 595 354 606 350 615  curveto
344 626 336 638 325 652  curveto
313 666 299 677 281 687  curveto
271 691 260 695 248 697  curveto
236 699 223 700 210 700  curveto
188 700 170 696 154 689  curveto
138 681 122 674 104 667  curveto
65 717 lineto
97 730 124 738 147 741  curveto
169 743 186 745 196 745  curveto
239 745 280 733 320 709  curveto
360 685 394 646 422 591  curveto
428 579 433 566 438 550  curveto
442 534 446 518 450 501  curveto
454 483 457 465 459 447  curveto
461 429 462 411 462 395  curveto
closepath
fill
		} def

	/bullet
		{
fill
		} def

	/quotesinglbase
		{
fill
		} def

	/quotedblbase
		{
fill
		} def

	/quotedblright
		{
fill
		} def

	/guillemotright
		{
527 219 moveto
519 205 509 193 498 183  curveto
486 173 474 164 462 158  curveto
449 152 436 147 424 144  curveto
411 141 399 140 387 140  curveto
373 140 359 142 345 146  curveto
206 186 lineto
195 189 187 191 181 192  curveto
175 193 166 194 156 194  curveto
131 194 112 189 98 179  curveto
84 169 71 154 57 135  curveto
14 162 lineto
32 185 52 204 76 219  curveto
99 233 127 241 160 241  curveto
168 241 177 240 187 238  curveto
197 236 205 235 213 233  curveto
356 193 lineto
362 191 366 190 370 190  curveto
373 189 378 189 385 189  curveto
405 189 425 193 444 203  curveto
463 213 478 226 490 243  curveto
527 219 lineto
527 219 lineto
closepath
527 370 moveto
519 356 509 344 498 334  curveto
486 324 474 315 462 309  curveto
449 303 436 298 424 295  curveto
411 292 399 291 387 291  curveto
373 291 359 293 345 297  curveto
206 337 lineto
195 340 187 342 181 343  curveto
175 344 166 345 156 345  curveto
131 345 112 340 98 330  curveto
84 320 71 305 57 286  curveto
14 313 lineto
32 336 52 355 76 370  curveto
99 384 127 392 160 392  curveto
168 392 177 391 187 389  curveto
197 387 205 386 213 384  curveto
356 344 lineto
362 342 366 341 370 341  curveto
373 340 378 340 385 340  curveto
405 340 425 344 444 354  curveto
463 364 478 377 490 394  curveto
527 370 lineto
527 370 lineto
closepath
fill
		} def

	/ellipsis
		{
fill
		} def

	/perthousand
		{
fill
		} def

	/questiondown
		{
181 68 moveto
181 -16 lineto
15 96 lineto
181 207 lineto
181 123 lineto
547 123 lineto
547 629 lineto
602 629 lineto
602 68 lineto
181 68 lineto
closepath
fill
		} def

	/grave
		{
480 881 moveto
480 917 lineto
1090 917 lineto
1090 881 lineto
480 881 lineto
closepath
fill
		} def

	/acute
		{
fill
		} def

	/circumflex
		{
fill
		} def

	/tilde
		{
fill
		} def

	/macron
		{
571 229 moveto
523 189 476 147 432 104  curveto
388 60 346 18 308 -22  curveto
267 20 224 63 180 107  curveto
135 150 90 191 45 229  curveto
80 264 lineto
92 253 108 240 126 226  curveto
144 211 163 196 182 180  curveto
201 164 219 148 237 133  curveto
254 117 268 104 280 93  curveto
280 888 lineto
336 888 lineto
336 93 lineto
346 104 360 117 378 133  curveto
395 148 413 164 432 180  curveto
451 196 470 211 488 226  curveto
506 240 522 253 536 264  curveto
571 229 lineto
571 229 lineto
closepath
fill
		} def

	/breve
		{
fill
		} def

	/dotaccent
		{
fill
		} def

	/dieresis
		{
374 -36 moveto
142 257 lineto
374 550 lineto
600 257 lineto
374 -36 lineto
closepath
fill
		} def

	/ring
		{
fill
		} def

	/cedilla
		{
324 127 moveto
324 111 318 98 307 87  curveto
296 76 283 71 268 71  curveto
252 71 239 76 228 87  curveto
217 98 212 111 212 127  curveto
212 142 217 155 228 166  curveto
239 177 252 183 268 183  curveto
283 183 296 177 307 166  curveto
318 155 324 142 324 127  curveto
closepath
10 236 moveto
10 291 lineto
536 291 lineto
536 236 lineto
10 236 lineto
closepath
324 400 moveto
324 384 318 371 307 360  curveto
296 349 283 344 268 344  curveto
252 344 239 349 228 360  curveto
217 371 212 384 212 400  curveto
212 415 217 428 228 439  curveto
239 450 252 456 268 456  curveto
283 456 296 450 307 439  curveto
318 428 324 415 324 400  curveto
closepath
fill
		} def

	/hungarumlaut
		{
fill
		} def

	/ogonek
		{
fill
		} def

	/caron
		{
fill
		} def

	/emdash
		{
fill
		} def

	/AE
		{
726 350 moveto
726 388 719 425 706 460  curveto
692 494 674 526 650 554  curveto
212 112 lineto
239 88 270 70 304 57  curveto
338 44 374 38 414 38  curveto
456 38 497 46 535 62  curveto
573 78 606 101 634 129  curveto
662 157 685 190 701 228  curveto
717 266 726 306 726 350  curveto
closepath
614 589 moveto
587 611 556 629 522 642  curveto
488 655 452 662 414 662  curveto
370 662 330 653 292 637  curveto
254 621 221 598 193 570  curveto
165 542 142 509 126 471  curveto
110 433 102 392 102 350  curveto
102 312 108 276 121 242  curveto
133 208 151 178 175 150  curveto
614 589 lineto
614 589 lineto
closepath
781 350 moveto
781 299 771 251 752 207  curveto
732 162 706 123 673 90  curveto
640 57 601 31 557 12  curveto
512 -7 464 -17 414 -17  curveto
367 -17 323 -9 283 7  curveto
242 23 205 45 173 74  curveto
76 -24 lineto
39 13 lineto
136 111 lineto
108 143 86 180 70 220  curveto
54 260 47 304 47 350  curveto
47 400 56 448 76 493  curveto
95 537 121 576 155 609  curveto
188 642 227 668 271 688  curveto
315 707 363 717 414 717  curveto
464 717 508 708 548 692  curveto
587 675 622 654 654 628  curveto
744 719 lineto
780 684 lineto
689 593 lineto
717 561 740 524 756 482  curveto
772 440 781 396 781 350  curveto
closepath
fill
		} def

	/ordfeminine
		{
629 134 moveto
629 121 627 108 623 95  curveto
619 81 614 69 606 59  curveto
598 48 588 39 576 32  curveto
564 25 549 22 533 22  curveto
513 22 497 27 486 39  curveto
474 50 465 63 458 77  curveto
451 91 445 103 441 115  curveto
436 126 430 132 422 132  curveto
416 132 410 127 405 118  curveto
400 109 398 95 398 76  curveto
398 57 400 38 406 20  curveto
411 1 421 -17 437 -36  curveto
305 -36 lineto
320 -17 330 1 336 20  curveto
341 38 344 57 344 76  curveto
344 95 341 109 336 118  curveto
331 127 326 132 320 132  curveto
312 132 305 126 301 115  curveto
296 103 290 91 283 77  curveto
276 63 267 50 256 39  curveto
244 27 229 22 209 22  curveto
192 22 178 25 166 32  curveto
154 39 144 48 136 59  curveto
128 69 122 81 118 95  curveto
114 108 113 121 113 134  curveto
113 147 114 160 118 174  curveto
122 188 126 200 132 212  curveto
137 222 147 238 163 258  curveto
178 278 197 302 219 331  curveto
241 359 265 392 291 428  curveto
317 464 343 504 371 548  curveto
397 504 424 464 450 428  curveto
476 392 501 359 523 331  curveto
545 302 563 278 579 258  curveto
594 238 604 222 610 212  curveto
615 200 619 188 623 174  curveto
627 160 629 147 629 134  curveto
closepath
fill
		} def

	/Lslash
		{
fill
		} def

	/Oslash
		{
625 0 moveto
625 233 lineto
15 233 lineto
15 288 lineto
680 288 lineto
680 0 lineto
625 0 lineto
closepath
fill
		} def

	/OE
		{
fill
		} def

	/ordmasculine
		{
14 82 moveto
14 137 lineto
538 137 lineto
538 82 lineto
14 82 lineto
closepath
14 235 moveto
14 290 lineto
538 290 lineto
538 235 lineto
14 235 lineto
closepath
14 388 moveto
14 443 lineto
538 443 lineto
538 388 lineto
14 388 lineto
closepath
fill
		} def

	/ae
		{
436 916 moveto
416 904 397 890 378 874  curveto
358 858 341 843 325 827  curveto
309 811 293 792 277 771  curveto
261 750 245 727 231 703  curveto
216 678 202 652 189 625  curveto
176 597 165 569 156 541  curveto
145 509 136 475 128 440  curveto
120 405 113 370 108 335  curveto
102 300 98 266 96 232  curveto
93 198 92 166 92 136  curveto
92 -293 lineto
40 -293 lineto
40 134 lineto
40 192 42 245 47 294  curveto
52 343 59 388 68 430  curveto
77 471 88 509 100 544  curveto
112 578 126 611 142 642  curveto
160 678 178 710 198 738  curveto
218 766 239 792 262 815  curveto
284 837 309 858 336 876  curveto
362 894 391 910 423 926  curveto
436 916 lineto
436 916 lineto
closepath
fill
		} def

	/dotlessi
		{
fill
		} def

	/lslash
		{
fill
		} def

	/oslash
		{
450 503 moveto
450 441 447 386 442 336  curveto
437 286 430 240 421 199  curveto
412 157 401 120 389 86  curveto
376 52 362 20 348 -9  curveto
326 -52 304 -89 282 -119  curveto
259 -149 236 -174 212 -196  curveto
188 -218 164 -236 140 -251  curveto
116 -266 91 -280 67 -293  curveto
54 -283 lineto
72 -271 91 -257 111 -242  curveto
131 -226 151 -208 171 -187  curveto
191 -166 210 -142 230 -114  curveto
250 -86 269 -54 288 -17  curveto
306 21 321 56 333 90  curveto
344 124 354 161 364 203  curveto
368 225 373 248 377 273  curveto
381 298 385 323 388 349  curveto
391 374 393 399 395 424  curveto
397 448 398 472 398 494  curveto
398 926 lineto
450 926 lineto
450 503 lineto
450 503 lineto
closepath
fill
		} def

	/oe
		{
fill
		} def

	/germandbls
		{
572 230 moveto
540 205 513 182 489 161  curveto
465 139 442 119 422 99  curveto
402 79 382 60 364 41  curveto
346 21 327 1 308 -19  curveto
268 23 228 65 187 105  curveto
146 145 98 186 44 230  curveto
77 271 lineto
175 194 lineto
175 890 lineto
228 890 lineto
228 146 lineto
308 65 lineto
388 146 lineto
388 890 lineto
441 890 lineto
441 194 lineto
539 271 lineto
572 230 lineto
572 230 lineto
closepath
fill
		} def

	/.notdef
		{
0 0 moveto
1000 0 lineto
1000 1000 lineto
0 1000 lineto
0 0 lineto
closepath
50 50 moveto
950 50 lineto
950 950 lineto
50 950 lineto
50 50 lineto
closepath
fill
		} def

	end				% close glyph dict. 
	currentdict			% actually put dict on the stack
	end			% close the dictionary now
	/MaplePi exch definefont pop
/MaplePi findfont 13.0 scalefont setfont
(p) show
Q
5.0 5.0 translate
Q
q
1 60 195 OPL
60 199
-5.0 -5.0 translate
q
57 210 7 13 rc
57.0 221.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
66.0 221.0 moveto
q 1 -1 scale
/MaplePi findfont 13.0 scalefont setfont
(p) show
Q
5.0 5.0 translate
Q
q
1 108 195 OPL
108 199
-5.0 -5.0 translate
104.0 216.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(0) show
Q
5.0 5.0 translate
Q
q
1 155 195 OPL
155 199
-5.0 -5.0 translate
157.0 221.0 moveto
q 1 -1 scale
/MaplePi findfont 13.0 scalefont setfont
(p) show
Q
5.0 5.0 translate
Q
q
1 203 195 OPL
203 199
-5.0 -5.0 translate
199.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
205.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
( ) show
Q
208.0 221.0 moveto
q 1 -1 scale
/MaplePi findfont 13.0 scalefont setfont
(p) show
Q
5.0 5.0 translate
Q
q
1 250 195 OPL
250 199
-5.0 -5.0 translate
247.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(3) show
Q
253.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
( ) show
Q
256.0 221.0 moveto
q 1 -1 scale
/MaplePi findfont 13.0 scalefont setfont
(p) show
Q
5.0 5.0 translate
Q
q
1 298 195 OPL
298 199
-5.0 -5.0 translate
294.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
300.0 221.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
( ) show
Q
303.0 221.0 moveto
q 1 -1 scale
/MaplePi findfont 13.0 scalefont setfont
(p) show
Q
5.0 5.0 translate
Q
Q
q
1 108 31 OPL
105 31
1 108 78 OPL
105 78
1 108 125 OPL
105 125
1 108 171 OPL
105 171
1 108 218 OPL
105 218
1 108 264 OPL
105 264
1 108 311 OPL
105 311
1 108 358 OPL
105 358
1 108 381 OPL
108 8
Q
q
q
1 108 381 OPL
102 381
-5.0 -5.0 translate
q
88 380 7 13 rc
88.0 391.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
97.0 391.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
q
1 108 334 OPL
102 334
-5.0 -5.0 translate
q
88 333 7 13 rc
88.0 344.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
97.0 344.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(3) show
Q
5.0 5.0 translate
Q
q
1 108 288 OPL
102 288
-5.0 -5.0 translate
q
88 286 7 13 rc
88.0 297.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
97.0 297.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 108 241 OPL
102 241
-5.0 -5.0 translate
q
88 240 7 13 rc
88.0 251.0 moveto
q 1 -1 scale
/ESSTIXFive findfont 13.0 scalefont setfont
(K) show
Q
Q
97.0 251.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1) show
Q
5.0 5.0 translate
Q
q
1 108 195 OPL
102 195
Q
q
1 108 148 OPL
102 148
-5.0 -5.0 translate
97.0 157.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(1) show
Q
5.0 5.0 translate
Q
q
1 108 101 OPL
102 101
-5.0 -5.0 translate
97.0 111.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(2) show
Q
5.0 5.0 translate
Q
q
1 108 55 OPL
102 55
-5.0 -5.0 translate
97.0 64.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(3) show
Q
5.0 5.0 translate
Q
q
1 108 8 OPL
102 8
-5.0 -5.0 translate
97.0 18.0 moveto
q 1 -1 scale
/TimesNewRoman findfont 13.0 scalefont setfont
(4) show
Q
5.0 5.0 translate
Q
Q
Q
Q
0 0 400 400 rc
0.0 0.0 translate
0.0 0.0 translate
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
